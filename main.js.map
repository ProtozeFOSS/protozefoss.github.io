{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/canvas-chessboard/canvas-chessboard.component.ts","./src/app/canvas-chessboard/canvas-chessboard.component.html","./src/app/canvas-chessboard/types.ts","./src/app/common/kokopu-engine.ts","./src/app/common/labeled-slider/labeled-slider.component.ts","./src/app/common/labeled-slider/labeled-slider.component.html","./src/app/common/toggle-switch/toggle-switch.component.ts","./src/app/common/toggle-switch/toggle-switch.component.html","./src/app/game-score/game-score-item/game-score-item.component.ts","./src/app/game-score/game-score-item/game-score-item.component.html","./src/app/game-score/game-score.ux.ts","./src/app/game-score/game-score.ux.html","./src/app/game-score/menu-game-score-item/menu-game-score-item.component.ts","./src/app/game-score/menu-game-score-item/menu-game-score-item.component.html","./src/app/olga-controls/olga-controls.component.ts","./src/app/olga-controls/olga-controls.component.html","./src/app/olga-status/olga-status.component.ts","./src/app/olga-status/olga-status.component.html","./src/app/olga-title/olga-title.component.ts","./src/app/olga-title/olga-title.component.html","./src/app/services/colors.service.ts","./src/app/services/layout.service.ts","./src/app/services/olga.service.ts","./src/app/settings/settings-board/settings-board.component.ts","./src/app/settings/settings-board/settings-board.component.html","./src/app/settings/settings-gamescore/settings-gamescore.component.ts","./src/app/settings/settings-gamescore/settings-gamescore.component.html","./src/app/settings/settings-general/settings-general.component.ts","./src/app/settings/settings-general/settings-general.component.html","./src/app/settings/settings-keymap/keymap-item/keymap-item.component.ts","./src/app/settings/settings-keymap/keymap-item/keymap-item.component.html","./src/app/settings/settings-keymap/settings-keymap.component.ts","./src/app/settings/settings-keymap/settings-keymap.component.html","./src/app/settings/settings-menu/settings-menu.component.ts","./src/app/settings/settings-menu/settings-menu.component.html","./src/environments/environment.ts","./src/main.ts","jsdom (ignored)","jsdom/lib/jsdom/living/generated/utils (ignored)","jsdom/lib/jsdom/utils (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import {\n  Component,\n  AfterViewInit,\n  ViewChild,\n  ElementRef,\n  Input,\n  Output,\n} from '@angular/core';\nimport { GamescoreUxComponent } from './game-score/game-score.ux';\nimport { CanvasChessBoard } from './canvas-chessboard/canvas-chessboard.component';\nimport { ColorService } from './services/colors.service';\nimport { LayoutService } from './services/layout.service';\nimport { OlgaService } from './services/olga.service';\nimport { SettingsMenuComponent } from './settings/settings-menu/settings-menu.component';\nimport { OlgaControlsComponent } from './olga-controls/olga-controls.component';\n\n@Component({\n  selector: 'olga',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class Olga implements AfterViewInit {\n  title = 'Olga PGN Viewer 2.0';\n  @ViewChild(GamescoreUxComponent)\n  gameScoreComponent: GamescoreUxComponent | null = null;\n  @ViewChild(CanvasChessBoard)\n  canvasBoardComponent: CanvasChessBoard | null = null;\n  @ViewChild('olgaContainer')\n  appContainer: ElementRef | null = null;\n  @ViewChild(SettingsMenuComponent)\n  settingsMenuComponent: SettingsMenuComponent | null = null;\n  @ViewChild(OlgaControlsComponent)\n  controlsComponent: OlgaControlsComponent | null = null;\n  @Input() pgnString = '';\n  @Output() gameScoreWidth: number | null = 389;\n  @Output() oldWidth: number | null = 0;\n  @Output() keymap: Map<string, any> = new Map<string, any>();\n  protected doneResizingScore = false;\n  constructor(\n    public olga: OlgaService,\n    public colorService: ColorService,\n    public layout: LayoutService,\n  ) {\n    const date = new Date();\n    this.olga.UUID = 'OLGA-' + date.getTime().toString();\n    console.log('ID: ' + this.olga.UUID);\n    this.loadKeymap();\n    // this.olga..subscribe((game) => {\n    //   this.currentGame = game;\n    //   //this.gameScoreComponent.setGame(game);\n    //   //this.canvasBoarComponent.setGame(game);\n    //   //this.layout.updateLayout();\n    // })\n  }\n\n  // tslint:disable-next-line: typedef\n  ngAfterViewInit() {\n    this.layout.gameScoreElement = document.getElementById('app-gamescore-' + this.olga.UUID);\n    this.layout.boardElement = document.getElementById(this.olga.UUID + '-ccb');\n    this.layout.controlsElement = document.getElementById('olga-controls-' + this.olga.UUID);\n    this.layout.statusElement = document.getElementById('olga-status-' + this.olga.UUID);\n    this.layout.settingsMenuElement = document.getElementById('settings-menu-' + this.olga.UUID );\n    this.colorService.initializeColorPalette();\n    this.colorService.boardBGDark.subscribe((bgDark) => {\n      this.canvasBoardComponent?.setDarkTile(bgDark);\n    })\n    if (this.canvasBoardComponent) {\n      this.olga.attachBoard(this.canvasBoardComponent);\n    }\n    if(this.controlsComponent) {\n      this.olga.attachControls(this.controlsComponent);\n    }\n    if (this.gameScoreComponent) {\n      this.olga.attachScore(this.gameScoreComponent);\n      this.gameScoreComponent.resizeHandleEvent = this.layout.onSliderDrag.bind(this.layout);\n      this.gameScoreComponent.resizeTouchEvent = this.layout.onSliderTouch.bind(this.layout);\n    }\n\n    if (this.canvasBoardComponent) {\n      this.olga.attachBoard(this.canvasBoardComponent);\n    }\n\n    this.colorService.boardBGLight.subscribe((light) => {\n      if (this.canvasBoardComponent) {\n        this.canvasBoardComponent.setLightTile(light);\n      }\n    });\n    this.colorService.boardBGDark.subscribe((dark) => {\n      if (this.canvasBoardComponent) {\n        this.canvasBoardComponent.setDarkTile(dark);\n      }\n    });\n    const pgn = this.gameScoreComponent?.getPGN();\n    if (pgn) {\n      this.olga.loadPGN(pgn);\n    }\n    window.onkeydown = this.keyEvent.bind(this);\n    this.layout.initializeLayout(this);\n  }\n  mouseMoved(event: MouseEvent): void {\n    if (this.gameScoreComponent && this.gameScoreComponent.resizing) {\n      this.gameScoreComponent.resizeHandleEvent(event);\n      if (event.buttons === 0) {\n        this.gameScoreComponent.resizing = false;\n      }\n    }\n  }\n\n  protected loadKeymap():void {\n    // initial default keymap\n\n    this.keymap.set('Space', ()=>{this.olga.toggleAutoPlay();});\n    this.keymap.set('Home', ()=>{this.olga.moveToStart();});\n    this.keymap.set('End', ()=>{this.olga.moveToEnd();});\n    this.keymap.set('ArrowRight', ()=>{this.olga.advance();});\n    this.keymap.set('ArrowLeft', ()=>{this.olga.previous();});\n  }\n\n\n\n\n  keyEvent(event: any): void {\n    console.log(event);\n    if(this.keymap.has(event.code)) {\n      console.log('Got this key: ' + event.code);\n      const action = this.keymap.get(event.code);\n      action();\n    }\n  }\n\n  touchMoved(event: TouchEvent): void {\n    if (this.gameScoreComponent && this.gameScoreComponent.resizing) {\n      this.gameScoreComponent.resizeTouchEvent(event);\n    }\n  }\n\n  setBoardSize(size: number): void {\n    if (this.canvasBoardComponent) {\n      this.canvasBoardComponent.setSize(size);\n    }\n  }\n  setGameScoreSize(size: number): void {\n    this.gameScoreWidth = size;\n    if (this.canvasBoardComponent) {\n      this.canvasBoardComponent.setSize(this.gameScoreWidth);\n    }\n  }\n\n  setMenuSize(size: number): void {\n    this.settingsMenuComponent?.resize(size, size);\n  }\n\n  ignoreEvent(event: MouseEvent): void {\n    //console.log('Ignoring ' + event);\n    event.preventDefault();\n    event.stopPropagation();\n  }\n}\n","<div #olgaContainer id=\"{{ this.olga.UUID }}-olga-container\" class=\"olga-container\" (touchmove)=\"touchMoved($event)\"\n  (mousemove)=\"mouseMoved($event)\">\n  <canvas-chessboard  (touchstart)=\"canvasBoardComponent.touchStart($event)\" #canvasBoardComponent\n    id=\"{{this.olga.UUID}}-ccb\" boardID=\"this.olga.UUID\" [theme]=\"this.colorService.boardTheme()\">\n  </canvas-chessboard>\n  <olga-title></olga-title>\n  <app-game-score-ux id=\"app-gamescore-{{this.olga.UUID}}\" (contextmenu)=\"ignoreEvent($event)\" >\n  </app-game-score-ux>\n  <olga-controls id=\"olga-controls-{{this.olga.UUID}}\"></olga-controls>\n  <!-- <app-gamescore-settings #gameScore></app-gamescore-settings>\n  <button mat-button class=\"fenbutton\" (click)=\"\n      olgaBoard.setFen(\n        'rnbqkbnr/pp1ppppp/8/2p5/4P3/5N2/PPPP1PPP/RNBQKB1R b KQkq - 1 2'\n      )\n    \">\n    Set Fen\n  </button> -->\n  <olga-status id=\"olga-status-{{this.olga.UUID}}\"></olga-status>\n  <settings-menu #settingsMenuComponent id=\"settings-menu-{{this.olga.UUID}}\"  (click)=\"layout.closeSettings()\"></settings-menu>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { Olga } from './app.component';\nimport { GamescoreSettingsComponent } from './settings/settings-gamescore/settings-gamescore.component';\nimport { GamescoreUxComponent } from './game-score/game-score.ux';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { GameScoreItemComponent } from './game-score/game-score-item/game-score-item.component';\nimport { ColorService } from './services/colors.service';\nimport { ToggleSwitchComponent } from './common/toggle-switch/toggle-switch.component';\nimport { LabeledSliderComponent } from './common/labeled-slider/labeled-slider.component';\nimport { SettingsMenuComponent } from './settings/settings-menu/settings-menu.component';\nimport { SettingsBoardComponent } from './settings/settings-board/settings-board.component';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatIconModule } from '@angular/material/icon';\nimport { GameScoreItemMenu } from './game-score/menu-game-score-item/menu-game-score-item.component';\n\nimport { OlgaService } from './services/olga.service';\nimport { LayoutService } from './services/layout.service';\nimport { CanvasChessBoard } from './canvas-chessboard/canvas-chessboard.component';\nimport { OlgaControlsComponent } from './olga-controls/olga-controls.component';\nimport { OlgaStatusComponent } from './olga-status/olga-status.component';\nimport { OlgaTitleComponent } from './olga-title/olga-title.component';\nimport { SettingsKeymapComponent } from './settings/settings-keymap/settings-keymap.component';\nimport { KeymapItemComponent } from './settings/settings-keymap/keymap-item/keymap-item.component';\nimport { SettingsGeneralComponent } from './settings/settings-general/settings-general.component';\n\n@NgModule({\n  declarations: [\n    Olga,\n    GamescoreSettingsComponent,\n    GamescoreUxComponent,\n    GameScoreItemComponent,\n    ToggleSwitchComponent,\n    LabeledSliderComponent,\n    SettingsMenuComponent,\n    SettingsBoardComponent,\n    GameScoreItemMenu,\n    CanvasChessBoard,\n    OlgaControlsComponent,\n    OlgaStatusComponent,\n    OlgaTitleComponent,\n    SettingsKeymapComponent,\n    KeymapItemComponent,\n    SettingsGeneralComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatCardModule,\n    MatDividerModule,\n    MatIconModule,\n    MatInputModule,\n    MatGridListModule,\n    MatMenuModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatTabsModule,\n  ],\n  providers: [LayoutService, ColorService, OlgaService],\n  bootstrap: [Olga],\n})\nexport class AppModule { }\n","import { Component, OnInit, AfterViewInit, Input, Output, ViewChild, ElementRef } from '@angular/core';\nimport { fabric } from 'fabric';\nimport { BehaviorSubject } from 'rxjs';\nimport { ChessMove } from '../common/kokopu-engine';\nimport { ColorService } from '../services/colors.service';\nimport { OlgaService } from '../services/olga.service';\nimport { LabelState, BoardTheme, BoardSettings, Piece, SquareNames } from './types';\n@Component({\n  selector: 'canvas-chessboard',\n  templateUrl: './canvas-chessboard.component.html',\n  styleUrls: ['./canvas-chessboard.component.scss'],\n})\nexport class CanvasChessBoard implements OnInit, AfterViewInit {\n  @Input() size = 320;\n  @Input() @Output() tileSize = Math.floor(this.size / 8);\n  @Input() interactive = true;\n  @Input() boardID: string = '';\n  protected promotionDialog: fabric.Group | null = null;\n  protected knightButton: fabric.Group | null = null;\n  protected bishopButton: fabric.Group | null = null;\n  protected rookButton: fabric.Group | null = null;\n  protected queenButton: fabric.Group | null = null;\n  protected pieceAnimation: { piece: fabric.Group, x: number, y: number } | null = null;\n  @Input() @Output() theme: BoardTheme | null = new BoardTheme();\n  @Input() @Output() settings: BoardSettings = new BoardSettings();\n  @Output() pieceMap = new Map<string, fabric.Group>();\n  @Output() pieces: { tile: number; object: fabric.Group }[] = [];\n  @Output() tileGroup: fabric.Group | null = null;\n  @Output() tiles: { tile: fabric.Object; piece?: Piece }[] = [];\n  @Output() labels: fabric.Object[] = [];\n  @Output() canvas: fabric.Canvas | null = null;\n\n  readonly labelState = new BehaviorSubject<LabelState>(LabelState.LeftBottom);\n  @Input() @Output() selectedPiece: {\n    tile: number;\n    object: fabric.Group;\n  } | null = null;\n  @Output() touching = false;\n  @Output() midPromotion = false;\n\n  @ViewChild('boardCanvas', {static: false}) boardCanvas: ElementRef | null = null;\n  constructor(\n    public olga: OlgaService,\n    public colorService: ColorService\n  ) {\n    if (this.olga.validGame()) {\n      this.setBoardToGamePosition();\n    }\n  }\n\n  protected updatePiece() {\n    if (this.pieceAnimation) {\n      const piece = this.pieceAnimation.piece;\n      if (piece) {\n        const xC = piece.get('left');\n        let xN = (xC ? xC : 0);\n        if (xC && xC != this.pieceAnimation.x) {\n          let increment = this.tileSize * .2;\n          if (Math.abs(this.pieceAnimation.x - xC) < increment) {\n            increment = this.pieceAnimation.x - xC;\n          } else if (this.pieceAnimation.x < xC) {\n            increment *= -1;\n          }\n          xN = xC + increment;\n          piece.set('left', xN);\n        }\n        const yC = piece.get('top');\n        let yN = (yC ? yC : 0);\n        if (yC && yC != this.pieceAnimation.y) {\n          let increment = this.tileSize * .2;\n          if (Math.abs(this.pieceAnimation.y - yC) < increment) {\n            increment = this.pieceAnimation.y - yC;\n          } else if (this.pieceAnimation.y < yC) {\n            increment *= -1;\n          }\n          yN = yC + increment;\n          piece.set('top', yN);\n        }\n        piece.setCoords();\n        this.canvas?.requestRenderAll();\n        if (yN != this.pieceAnimation.y || xN != this.pieceAnimation.x) {\n          window.setTimeout(this.updatePiece.bind(this), 12);\n        } else {\n          this.pieceAnimation = null;\n        }\n      }\n    }\n  }\n\n\n  protected startMoveAnimation(piece: fabric.Group, x: number, y: number): void {\n    if (this.pieceAnimation) {\n      const lastPiece = this.pieceAnimation.piece;\n      lastPiece?.set('left', this.pieceAnimation.x);\n      lastPiece?.set('top', this.pieceAnimation.y);\n      lastPiece.setCoords();\n    }\n    this.pieceAnimation = { piece, x, y };\n    this.updatePiece();\n  }\n\n  ngOnInit(): void { }\n\n  ngAfterViewInit(): void {\n    fabric.Object.prototype.transparentCorners = false;\n    if(this.boardCanvas) { \n      this.canvas = new fabric.Canvas(this.boardCanvas.nativeElement);\n      this.canvas.selection = false;\n      const waitCount = this.loadPieces();\n      waitCount.subscribe((count) => {\n        if (count >= 12) {\n          this.generateBoard();\n          this.connectMouseInput();\n          this.setBoardToGamePosition();\n          waitCount.unsubscribe();\n          this.resizeBoardObjects(this.size);\n        }\n      });\n      this.canvas.hoverCursor = 'arrow';\n      this.canvas.allowTouchScrolling = true;\n      this.setInteractive(this.interactive);\n    }\n  }\n  addPiece(tile: number, color: string, role: string) {\n    const col = tile % 8;\n    const row = Math.floor(tile / 8);\n    const padding = 1;\n    if (role && color) {\n      const pieceImage = this.pieceMap.get(color + role);\n      if (pieceImage) {\n        pieceImage.clone((pieceObject: fabric.Group) => {\n          pieceObject.set('lockRotation', true);\n          pieceObject.set('lockScalingX', true);\n          pieceObject.set('lockScalingY', true);\n          pieceObject.set('lockUniScaling', true);\n          pieceObject.set('hasControls', false);\n          pieceObject.set('hasBorders', false);\n          if (!this.interactive) {\n            pieceObject.set('lockMovementX', true);\n            pieceObject.set('lockMovementY', true);\n          } else {\n            pieceObject.hoverCursor = 'grab';\n            pieceObject.moveCursor = 'grabbing';\n          }\n          const tileSizeFragment = this.tileSize / 100;\n          pieceObject.scaleToHeight(Math.ceil(tileSizeFragment * 90));\n          const piecePadding = Math.ceil(tileSizeFragment * 3) + 1;\n          if (this.settings.orientation == 'white') {\n            pieceObject.set('left', Math.floor(col * this.tileSize) + piecePadding);\n            pieceObject.set('top', Math.floor((7 - row) * this.tileSize) + piecePadding);\n          } else {\n            pieceObject.set('left', Math.floor((7 - col) * this.tileSize) + piecePadding);\n            pieceObject.set('top', Math.floor(row * this.tileSize) + piecePadding);\n          }\n          pieceObject.setCoords();\n          this.pieces[tile] = { tile: tile, object: pieceObject };\n          this.tiles[tile].piece = { role, color } as Piece;\n          if (this.canvas) {\n            this.canvas?.add(pieceObject);\n            pieceObject.moveTo(10);\n          }\n        });\n      }\n    }\n  }\n\n  removePiece(tile: number) {\n    const object = this.pieces[tile].object;\n    delete this.pieces[tile];\n    this.canvas?.remove(object);\n    delete this.tiles[tile].piece;\n  }\n\n  protected performPromotion(move: ChessMove): void {\n    if (move.promotion) {\n      console.log('Promoting to ' + move.promotion.role);\n      console.log('@ ' + SquareNames[move.to]);\n      // remove old piece\n      this.removePiece(move.to);\n      this.addPiece(move.to, move.color, move.promotion.role);\n      if (this.olga.validGame()) {\n        this.olga.performPromotion(move);\n        this.closePromotionDialog();\n      }\n    }\n  }\n  protected closePromotionDialog() {\n    if (this.knightButton) {\n      this.canvas?.remove(this.knightButton);\n    }\n    if (this.bishopButton) {\n      this.canvas?.remove(this.bishopButton);\n    }\n    if (this.rookButton) {\n      this.canvas?.remove(this.rookButton);\n    }\n    if (this.queenButton) {\n      this.canvas?.remove(this.queenButton);\n    }\n    if (this.promotionDialog) {\n      this.canvas?.remove(this.promotionDialog);\n    }\n    this.knightButton = null;\n    this.bishopButton = null;\n    this.rookButton = null;\n    this.queenButton = null;\n    this.promotionDialog = null;\n  }\n  protected createPromotionDialog(move: ChessMove) {\n    // pull items out of chess move\n    const tileIndex = move.to;\n    if (move.role && move.color && tileIndex >= 0 && tileIndex < 64) {\n      const group = [];\n\n      if (this.settings.orientation == 'white') {\n        // translate tileIndex\n      }\n      // Create the background overlay (semi-transparent square)\n      const overlay = new fabric.Rect({\n        width: this.size,\n        height: this.size,\n        left: 0,\n        top: 0,\n      });\n      overlay.set('lockMovementX', true);\n      overlay.set('lockMovementY', true);\n      overlay.set('lockRotation', true);\n      overlay.set('lockScalingX', true);\n      overlay.set('lockScalingY', true);\n      overlay.set('lockUniScaling', true);\n      overlay.set('hasControls', false);\n      overlay.set('hasBorders', false);\n      overlay.set('selectable', false);\n      overlay.set('opacity', 0.65);\n      overlay.setCoords();\n      overlay.setColor('#0a0a0a');\n      group.push(overlay);\n\n      // Create the background square (rounded rectangle 80% width 64% height vertically and horizontally centered)\n      const height = 0.6 * this.size;\n      const width = 0.8 * this.size;\n\n      const bg = new fabric.Rect({\n        height: height,\n        width: width,\n        fill: this.colorService.bgMenu,\n        left: (this.size - width) / 2,\n        top: (this.size - height) / 2,\n        rx: width * 0.02,\n        ry: width * 0.02,\n      });\n      bg.setColor(this.colorService.bgMenu);\n      bg.set('lockMovementX', true);\n      bg.set('lockMovementY', true);\n      bg.set('lockRotation', true);\n      bg.set('lockScalingX', true);\n      bg.set('lockScalingY', true);\n      bg.set('lockUniScaling', true);\n      bg.set('hasControls', false);\n      bg.set('hasBorders', false);\n      bg.set('selectable', false);\n      bg.set('strokeWidth', 1);\n      bg.set('stroke', 'white');\n      bg.setCoords();\n      group.push(bg);\n      let pieceImage = null;\n      // Create the title text \"Promotion\" - white, subtle\n      const title = new fabric.Text('Promotion', {\n        fontWeight: '100',\n        fontSize: this.size * 0.07,\n        fontFamily: 'Courier New',\n      });\n      title.set('lockMovementX', true);\n      title.set('lockMovementY', true);\n      title.set('lockRotation', true);\n      title.set('lockScalingX', true);\n      title.set('lockScalingY', true);\n      title.set('lockUniScaling', true);\n      title.set('hasControls', false);\n      title.set('hasBorders', false);\n      title.set('selectable', false);\n      title.setColor('white');\n      title.set('originX', 'center');\n      title.set('originY', 'center');\n      title.set('left', this.size * 0.5);\n      title.set('top', this.size * 0.235);\n      title.setCoords();\n      group.push(title);\n      // Clone the promoted piece and tile and display them horizontally centered below title\n      let x = this.size / 2;\n      let y = this.size * 0.38 + 4;\n      const tileSize = this.size * 0.2;\n      // Tile Clone\n      const tileToClone = this.tiles[tileIndex];\n      if (tileToClone) {\n        tileToClone.tile.clone((promotionTile: fabric.Object) => {\n          promotionTile.set('top', y);\n          promotionTile.set('left', x);\n          promotionTile.set('originX', 'center');\n          promotionTile.set('originY', 'center');\n          promotionTile.scaleToHeight(tileSize);\n          promotionTile.setCoords();\n          group.push(promotionTile);\n        });\n        pieceImage = this.pieceMap.get(move.color + move.role);\n        if (pieceImage) {\n          pieceImage.clone((pieceObject: fabric.Group) => {\n            pieceObject.set('originX', 'center');\n            pieceObject.set('originY', 'center');\n            pieceObject.set('top', y);\n            pieceObject.set('left', x);\n            pieceObject.scaleToHeight(tileSize);\n            pieceObject.setCoords();\n            group.push(pieceObject);\n          });\n        }\n      }\n      pieceImage = null;\n      // Create text \"{Color} has triggered at \" below tile and piece clone\n      // Create the title text \"Promotion\" - white, subtle\n      let color = 'White';\n      if (move.color === 'b') {\n        color = 'Black';\n      }\n      const prompt = new fabric.Text(color + ' has triggered promotion at', {\n        fontSize: this.size * 0.04,\n      });\n      prompt.set('lockMovementX', true);\n      prompt.set('lockMovementY', true);\n      prompt.set('lockRotation', true);\n      prompt.set('lockScalingX', true);\n      prompt.set('lockScalingY', true);\n      prompt.set('lockUniScaling', true);\n      prompt.set('hasControls', false);\n      prompt.set('hasBorders', false);\n      prompt.set('selectable', false);\n      prompt.setColor('white');\n      prompt.set('originX', 'center');\n      prompt.set('originY', 'center');\n      prompt.set('left', this.size * 0.5 - 24);\n      prompt.set('top', this.size * 0.53);\n      prompt.setCoords();\n      group.push(prompt);\n\n      // Create text to right of triggered text with move\n      const atText = new fabric.Text(SquareNames[tileIndex], {\n        fontSize: this.size * 0.055,\n      });\n      atText.set('lockMovementX', true);\n      atText.set('lockMovementY', true);\n      atText.set('lockRotation', true);\n      atText.set('lockScalingX', true);\n      atText.set('lockScalingY', true);\n      atText.set('lockUniScaling', true);\n      atText.set('hasControls', false);\n      atText.set('hasBorders', false);\n      atText.set('selectable', false);\n      const bgColor = tileToClone.tile.get('fill');\n      atText.setColor(bgColor ? bgColor.toString() : 'white');\n      atText.set('originX', 'center');\n      atText.set('originY', 'center');\n      const promptWidth = prompt.get('width');\n      const promptLeft = prompt.get('left');\n\n      atText.set(\n        'left',\n        (promptLeft ? promptLeft : this.size * 0.2) +\n        (promptWidth !== undefined ? promptWidth : 20) / 2 +\n        this.size * 0.035\n      );\n      atText.set('top', this.size * 0.53);\n      atText.setCoords();\n      group.push(atText);\n      // Create 4 clones of tiles, 4 clones of pieces (Knight, Bishop, Rook, And King)\n\n      // Create the four tiles\n      y = this.size * 0.67 + 4;\n      x = this.size * 0.205;\n      const choiceSize = tileSize * 0.75;\n      if (tileToClone) {\n        let buttonGroup: fabric.Object[] = [];\n        tileToClone.tile.clone((tile: fabric.Object) => {\n          tile.set('originX', 'left');\n          tile.set('originY', 'top');\n          tile.set('stroke', this.colorService.gsTextColorHG.value);\n          tile.set('strokeWidth', 2);\n          tile.set('top', 0);\n          tile.set('left', 0);\n          tile.scaleToHeight(choiceSize);\n          tile.setCoords();\n          buttonGroup.push(tile);\n        });\n\n        // Knight button\n        pieceImage = this.pieceMap.get(move.color + 'N');\n        if (pieceImage) {\n          pieceImage.clone((obj: fabric.Group) => {\n            obj.set('originX', 'left');\n            obj.set('originY', 'top');\n            obj.set('top', 0);\n            obj.set('left', 0);\n            obj.scaleToHeight(choiceSize);\n            obj.setCoords();\n            buttonGroup.push(obj);\n          });\n        }\n        if (buttonGroup.length >= 2) {\n          this.knightButton = new fabric.Group(buttonGroup);\n          this.knightButton.set('originX', 'center');\n          this.knightButton.set('originY', 'center');\n          this.knightButton.set('top', y);\n          this.knightButton.set('left', x);\n          this.knightButton.set('selectable', true);\n          this.knightButton.set('lockMovementX', true);\n          this.knightButton.set('lockMovementY', true);\n          this.knightButton.set('lockRotation', true);\n          this.knightButton.set('lockScalingX', true);\n          this.knightButton.set('lockScalingY', true);\n          this.knightButton.set('lockUniScaling', true);\n          this.knightButton.set('hasControls', false);\n          this.knightButton.set('hasBorders', false);\n          this.knightButton.scaleToHeight(choiceSize);\n          this.knightButton.setCoords();\n          this.knightButton.on('selected', () => {\n            move.promotion = { role: 'N' };\n            this.performPromotion(move);\n          });\n        }\n        let buttonGroup2: fabric.Object[] = [];\n        // Bishop Button\n        x = this.size * 0.4;\n        tileToClone.tile.clone((tile: fabric.Object) => {\n          tile.set('originX', 'left');\n          tile.set('originY', 'top');\n          tile.set('stroke', this.colorService.gsTextColorHG.value);\n          tile.set('strokeWidth', 2);\n          tile.set('top', 0);\n          tile.set('left', 0);\n          tile.scaleToHeight(choiceSize);\n          tile.setCoords();\n          buttonGroup2.push(tile);\n        });\n        pieceImage = this.pieceMap.get(move.color + 'B');\n        if (pieceImage) {\n          pieceImage.clone((piece: fabric.Group) => {\n            piece.set('originX', 'left');\n            piece.set('originY', 'top');\n            piece.set('top', 0);\n            piece.set('left', 0);\n            piece.scaleToHeight(choiceSize);\n            piece.setCoords();\n            buttonGroup2.push(piece);\n          });\n        }\n        if (buttonGroup2.length >= 2) {\n          this.bishopButton = new fabric.Group(buttonGroup2);\n          this.bishopButton.set('originX', 'center');\n          this.bishopButton.set('originY', 'center');\n          this.bishopButton.set('top', y);\n          this.bishopButton.set('left', x);\n          this.bishopButton.set('selectable', true);\n          this.bishopButton.set('lockMovementX', true);\n          this.bishopButton.set('lockMovementY', true);\n          this.bishopButton.set('lockRotation', true);\n          this.bishopButton.set('lockScalingX', true);\n          this.bishopButton.set('lockScalingY', true);\n          this.bishopButton.set('lockUniScaling', true);\n          this.bishopButton.set('hasControls', false);\n          this.bishopButton.set('hasBorders', false);\n          this.bishopButton.scaleToHeight(choiceSize);\n          this.bishopButton.setCoords();\n          this.bishopButton.on('selected', () => {\n            move.promotion = { role: 'B' };\n            this.performPromotion(move);\n          });\n        }\n\n        // Rook Button\n        x = this.size * 0.595;\n        let buttonGroup3: fabric.Object[] = [];\n        tileToClone.tile.clone((tile: fabric.Object) => {\n          tile.set('originX', 'left');\n          tile.set('originY', 'top');\n          tile.set('stroke', this.colorService.gsTextColorHG.value);\n          tile.set('strokeWidth', 2);\n          tile.set('top', 0);\n          tile.set('left', 0);\n          tile.scaleToHeight(choiceSize);\n          tile.setCoords();\n          buttonGroup3.push(tile);\n        });\n        pieceImage = this.pieceMap.get(move.color + 'R');\n        if (pieceImage) {\n          pieceImage.clone((piece: fabric.Group) => {\n            piece.set('originX', 'left');\n            piece.set('originY', 'top');\n            piece.set('top', 0);\n            piece.set('left', 0);\n            piece.scaleToHeight(choiceSize);\n            piece.setCoords();\n            buttonGroup3.push(piece);\n          });\n        }\n        if (buttonGroup3.length >= 2) {\n          this.rookButton = new fabric.Group(buttonGroup3);\n          this.rookButton.set('originX', 'center');\n          this.rookButton.set('originY', 'center');\n          this.rookButton.set('top', y);\n          this.rookButton.set('left', x);\n          this.rookButton.set('selectable', true);\n          this.rookButton.set('lockMovementX', true);\n          this.rookButton.set('lockMovementY', true);\n          this.rookButton.set('lockRotation', true);\n          this.rookButton.set('lockScalingX', true);\n          this.rookButton.set('lockScalingY', true);\n          this.rookButton.set('lockUniScaling', true);\n          this.rookButton.set('hasControls', false);\n          this.rookButton.set('hasBorders', false);\n          this.rookButton.scaleToHeight(choiceSize);\n          this.rookButton.setCoords();\n          this.rookButton.on('selected', () => {\n            move.promotion = { role: 'R' };\n            this.performPromotion(move);\n          });\n        }\n        // Queen\n        x = this.size * 0.79;\n        let buttonGroup4: fabric.Object[] = [];\n        tileToClone.tile.clone((tile: fabric.Object) => {\n          tile.set('originX', 'left');\n          tile.set('originY', 'top');\n          tile.set('stroke', this.colorService.gsTextColorHG.value);\n          tile.set('strokeWidth', 2);\n          tile.set('top', 0);\n          tile.set('left', 0);\n          tile.scaleToHeight(choiceSize);\n          tile.setCoords();\n          buttonGroup4.push(tile);\n        });\n        pieceImage = this.pieceMap.get(move.color + 'Q');\n        if (pieceImage) {\n          pieceImage.clone((piece: fabric.Group) => {\n            piece.set('originX', 'left');\n            piece.set('originY', 'top');\n            piece.set('top', 0);\n            piece.set('left', 0);\n            piece.scaleToHeight(choiceSize);\n            piece.setCoords();\n            buttonGroup4.push(piece);\n          });\n        }\n        if (buttonGroup4.length >= 2) {\n          this.queenButton = new fabric.Group(buttonGroup4);\n          this.queenButton.set('originX', 'center');\n          this.queenButton.set('originY', 'center');\n          this.queenButton.set('top', y);\n          this.queenButton.set('left', x);\n          this.queenButton.set('selectable', true);\n          this.queenButton.set('lockMovementX', true);\n          this.queenButton.set('lockMovementY', true);\n          this.queenButton.set('lockRotation', true);\n          this.queenButton.set('lockScalingX', true);\n          this.queenButton.set('lockScalingY', true);\n          this.queenButton.set('lockUniScaling', true);\n          this.queenButton.set('hasControls', false);\n          this.queenButton.set('hasBorders', false);\n          this.queenButton.scaleToHeight(choiceSize);\n          this.queenButton.setCoords();\n          this.queenButton.on('selected', () => {\n            move.promotion = { role: 'Q' };\n            this.performPromotion(move);\n          });\n        }\n      }\n\n      this.promotionDialog = new fabric.Group(group, {\n        left: 0,\n        top: 0,\n        width: this.size,\n        height: this.size,\n      });\n\n      this.promotionDialog.set('lockMovementX', true);\n      this.promotionDialog.set('lockMovementY', true);\n      this.promotionDialog.set('lockRotation', true);\n      this.promotionDialog.set('lockScalingX', true);\n      this.promotionDialog.set('lockScalingY', true);\n      this.promotionDialog.set('lockUniScaling', true);\n      this.promotionDialog.set('hasControls', false);\n      this.promotionDialog.set('hasBorders', false);\n      this.promotionDialog.set('selectable', false);\n      this.promotionDialog.scaleToHeight(this.size);\n      this.promotionDialog.scaleToWidth(this.size);\n      this.canvas?.add(this.promotionDialog);\n      this.promotionDialog.moveTo(500);\n      if (this.knightButton) {\n        this.canvas?.add(this.knightButton);\n        this.knightButton.moveTo(510);\n      }\n      if (this.bishopButton) {\n        this.canvas?.add(this.bishopButton);\n        this.bishopButton.moveTo(510);\n      }\n      if (this.rookButton) {\n        this.canvas?.add(this.rookButton);\n        this.rookButton.moveTo(510);\n      }\n      if (this.queenButton) {\n        this.canvas?.add(this.queenButton);\n        this.queenButton.moveTo(510);\n      }\n      this.canvas?.requestRenderAll();\n    }\n  }\n\n  showPromotionDialog(move: ChessMove) {\n    if (!this.promotionDialog) {\n      const object = this.pieces[move.from].object;\n      if (object) {\n        object.set('lockMovementX', true);\n        object.set('lockMovementY', true);\n        object.set('selectable', false);\n      }\n      this.createPromotionDialog(move);\n      this.midPromotion = true;\n      return;\n    }\n  }\n\n  makeMove(move: ChessMove): void {\n    if (this.pieces[move.from]) {\n      const piece = this.pieces[move.from];\n      delete this.pieces[move.from];\n      delete this.tiles[move.from].piece;\n      if (piece.object) {\n        const row = Math.floor(move.to / 8);\n        const col = move.to % 8;\n        const tileSizeFragment = this.tileSize / 100;\n        const piecePadding = Math.ceil(tileSizeFragment * 3) + 1;\n        let xDest = 0;\n        let yDest = 0;\n        if (this.settings.orientation === 'white') {\n          xDest = (col * this.tileSize) + piecePadding;\n          yDest = ((7 - row) * this.tileSize) + piecePadding;\n        } else {\n          xDest = ((7 - col) * this.tileSize) + piecePadding;\n          yDest = (row * this.tileSize) + piecePadding;\n        }\n        this.startMoveAnimation(piece.object, xDest, yDest);\n        const to = row * 8 + col;\n        const capture = this.pieces[to];\n        if (capture) {\n          this.canvas?.remove(capture.object);\n        }\n        piece.tile = to;\n        this.pieces[to] = piece;\n        this.tiles[to].piece = { color: move.color, role: move.role };\n        if(move.castle){\n          const rmove = new ChessMove();\n          rmove.to = move.castle.to;\n          rmove.from = move.castle.from;\n          rmove.color = move.color;\n          this.makeMove(rmove);\n        }\n        // piece.object.moveTo(10);\n        // this.promotionDialog?.moveTo(500);\n      }\n    }\n    this.canvas?.requestRenderAll();\n  }\n  unMakeMove(move: ChessMove) {\n    if (this.pieces[move.to]) {\n      const piece = this.pieces[move.to];\n      delete this.pieces[move.to];\n      delete this.tiles[move.to].piece;\n      if (piece.object) {\n        const row = Math.floor(move.from / 8);\n        const col = move.from % 8;\n        const tileSizeFragment = this.tileSize / 100;\n        const piecePadding = Math.ceil(tileSizeFragment * 3) + 1;\n        let xDest = 0;\n        let yDest = 0;\n        if (this.settings.orientation === 'white') {\n          xDest = (col * this.tileSize) + piecePadding;\n          yDest = ((7 - row) * this.tileSize) + piecePadding;\n        } else {\n          xDest = ((7 - col) * this.tileSize) + piecePadding;\n          yDest = (row * this.tileSize) + piecePadding;\n        }\n        this.startMoveAnimation(piece.object, xDest, yDest);\n        const from = row * 8 + col;\n        const capture = move.capture;\n        if (capture) {\n          this.addPiece(move.to, capture.color, capture.role);\n        }\n        piece.tile = from;\n        this.pieces[from] = piece;\n        this.tiles[from].piece = { color: move.color, role: move.role };\n        piece.object.moveTo(10);\n        piece.object.setCoords();\n        this.promotionDialog?.moveTo(500);\n        if(move.castle){\n          const rmove = new ChessMove();\n          rmove.to = move.castle.to;\n          rmove.from = move.castle.from;\n          rmove.color = move.color;\n          this.unMakeMove(rmove);\n        }\n      }\n    }\n    this.canvas?.requestRenderAll();\n  }\n\n  private resetMove(move: ChessMove): void {\n    const piece = this.pieces[move.from].object;\n    if (piece) {\n      const row = Math.floor(move.from / 8);\n      const col = move.from % 8;\n      const tileSizeFragment = this.tileSize / 100;\n      piece.scaleToHeight(Math.ceil(tileSizeFragment * 90));\n      const piecePadding = Math.ceil(tileSizeFragment * 3) + 1;\n      if (this.settings.orientation == 'white') {\n        piece.set('left', Math.floor(col * this.tileSize) + piecePadding);\n        piece.set('top', Math.floor((7 - row) * this.tileSize) + piecePadding);\n      } else {\n        piece.set('left', Math.floor((7 - col) * this.tileSize) + piecePadding);\n        piece.set('top', Math.floor(row * this.tileSize) + piecePadding);\n      }\n      piece.moveTo(10);\n      this.promotionDialog?.moveTo(500);\n      piece.setCoords();\n    }\n  }\n  // Move to just board functions\n  // movePiece(to, from);\n  // removePiece(tile);\n  // addPiece(tile, piece);\n  // clearPieces();\n  //\n\n  checkPieceCanMove(\n    fromData: { tile: number; object: fabric.Group; piece: Piece | undefined },\n    toData: { tile: number; object: fabric.Group; piece: Piece | undefined }\n  ): boolean {\n    return true;\n  }\n\n  public isValidDrop(from: number, to: number): boolean {\n    if (this.olga.validGame()) {\n      const position = this.olga.getGame()?.getPosition();\n      const legal = position.isMoveLegal(SquareNames[from], SquareNames[to]);\n      return legal !== false;\n    }\n    return false;\n  }\n\n  private checkValidDrop(e: fabric.IEvent): void {\n    if (this.selectedPiece?.object) {\n      let x = 0;\n      let y = 0;\n      if (this.touching) {\n        const event = e.e as TouchEvent;\n        if (event.changedTouches.length) {\n          x = event.changedTouches[0].clientX;\n          y = event.changedTouches[0].clientY;\n        }\n        this.touching = false;\n      } else {\n        const event = e.e as MouseEvent;\n        x = event.x;\n        y = event.y;\n      }\n      let row = Math.ceil(y / this.tileSize) - 1;\n      let col = Math.ceil(x / this.tileSize) - 1;\n      if (this.settings.orientation == 'white') {\n        row = Math.ceil((this.size - y) / this.tileSize) - 1;\n      } else {\n        col = Math.ceil((this.size - x) / this.tileSize) - 1;\n      }\n      const tile = row * 8 + col;\n      const move = new ChessMove();\n      move.from = this.selectedPiece.tile;\n      move.to = tile;\n      const piece = this.tiles[move.from].piece;\n      if (piece) {\n        move.color = piece.color;\n        move.role = piece.role;\n      }\n      if (x < 0 || x > this.size || y > this.size || y < 0) {\n        this.resetMove(move);\n      } else {\n        if (\n          this.isValidDrop(this.selectedPiece.tile, tile) &&\n          this.olga.validGame()\n        ) {\n          this.olga.getGame()?.makeMove(move);\n          this.makeMove(move);\n        } else {\n          this.resetMove(move);\n        }\n      }\n      this.selectedPiece = null;\n    }\n  }\n\n  touchStart(event: TouchEvent): void {\n    if (event.touches.length) {\n      const point = event.touches[0];\n      let row = Math.ceil(point.clientY / this.tileSize) - 1;\n      let col = Math.ceil(point.clientX / this.tileSize) - 1;\n      if (this.settings.orientation == 'white') {\n        row = Math.ceil((this.size - point.clientY) / this.tileSize) - 1;\n      } else {\n        col = Math.ceil((this.size - point.clientX) / this.tileSize) - 1;\n      }\n      const tileIndex = row * 8 + col;\n      if (tileIndex >= 0 && tileIndex < 64) {\n        this.touching = true;\n        this.selectedPiece = this.pieces[tileIndex];\n        //this.highlightTile(tileIndex);\n      }\n    }\n  }\n\n  private selectPiece(e: fabric.IEvent): void {\n    let x = 0;\n    let y = 0;\n    const event = e.e as MouseEvent;\n    x = event.x;\n    y = event.y;\n    if (x === undefined || y === undefined) {\n      const event = e.e as TouchEvent;\n      if (event.touches.length) {\n        x = event.touches[0].clientX;\n        y = event.touches[0].clientY;\n      }\n    }\n    let row = Math.ceil(y / this.tileSize) - 1;\n    let col = Math.ceil(x / this.tileSize) - 1;\n    if (this.settings.orientation == 'white') {\n      row = Math.ceil((this.size - y) / this.tileSize) - 1;\n    } else {\n      col = Math.ceil((this.size - x) / this.tileSize) - 1;\n    }\n    const tileIndex = row * 8 + col;\n    if (tileIndex >= 0 && tileIndex < 64) {\n      this.selectedPiece = this.pieces[tileIndex];\n      //this.highlightTile(tileIndex);\n    } else {\n      this.canvas?.discardActiveObject();\n      this.selectedPiece = null;\n    }\n  }\n\n  private clearBoard(): void {\n    this.pieces.forEach((piece) => {\n      this.canvas?.remove(piece.object);\n    });\n    this.pieces = [];\n    this.tiles.forEach((tileData) => {\n      this.canvas?.remove(tileData.tile);\n    });\n    this.tiles = [];\n  }\n\n  public clearMaterial(): void {\n    this.pieces.forEach((piece) => {\n      this.canvas?.remove(piece.object);\n    });\n    this.pieces = [];\n  }\n\n  private connectMouseInput(): void {\n    if (this.canvas) {\n      this.canvas.on('object:moved', this.checkValidDrop.bind(this));\n      this.canvas.on('mouse:down', this.selectPiece.bind(this));\n    }\n  }\n\n  private generateTiles(): void {\n    if (this.canvas) {\n      if (!this.theme) {\n        console.log('Cannot generate board without theme');\n        return;\n      }\n      const tiles = [];\n      const labels = [];\n      const padding = 1;\n      let dark = false;\n      const size = this.tileSize * 8;\n      const background = new fabric.Rect({\n        // position from group center\n        left: 0,\n        top: 0,\n        width: size + 1,\n        height: size + 1,\n\n        stroke: 'black',\n        strokeWidth: 2,\n        fill: undefined,\n      })\n\n      background.set('lockMovementX', true);\n      background.set('lockMovementY', true);\n      background.set('lockRotation', true);\n      background.set('lockScalingX', true);\n      background.set('lockScalingY', true);\n      background.set('lockUniScaling', true);\n      background.set('hasControls', false);\n      background.set('hasBorders', false);\n      background.set('selectable', false);\n      background.setCoords();\n      tiles.push(background);\n\n      for (let row = 7; row >= 0; row--) {\n        for (let col = 0; col < 8; col++) {\n          // move this to clone feature, only create the tiles once.\n\n          const tile = new fabric.Rect({\n            width: this.tileSize,\n            height: this.tileSize,\n          });\n\n          tile.set('left', col * this.tileSize + padding);\n          tile.set('top', row * this.tileSize + padding);\n\n          tile.set('lockMovementX', true);\n          tile.set('lockMovementY', true);\n          tile.set('lockRotation', true);\n          tile.set('lockScalingX', true);\n          tile.set('lockScalingY', true);\n          tile.set('lockUniScaling', true);\n          tile.set('hasControls', false);\n          tile.set('hasBorders', false);\n          tile.set('selectable', false);\n          tile.setCoords();\n          if (row % 2 === 0) {\n            // even row 0, 2, 4, 6\n            if (col % 2 === 0) {\n              dark = false;\n              tile.setColor(this.theme.tileLight);\n            } else {\n              dark = true;\n              tile.setColor(this.theme.tileDark);\n            }\n          } else {\n            // odd row 1, 3, 5, 7\n            if (col % 2 === 0) {\n              dark = true;\n              tile.setColor(this.theme.tileDark);\n            } else {\n              dark = false;\n              tile.setColor(this.theme.tileLight);\n            }\n          }\n          this.tiles.push({ tile });\n          tiles.push(tile);\n          if (col == 0) {\n            // create new col label\n            let labelText = '';\n            if (this.settings.orientation == 'white') {\n              labelText = SquareNames[((7 - row) * 8) + col][1];\n            } else {\n              labelText = SquareNames[(row * 8) + col][1];\n            }\n            if (this.settings.orientation == 'white') {\n            }\n            const label = new fabric.Text(labelText, {\n              fontSize: this.theme.labelFontSize, left: (col * this.tileSize) + 4, top: (row * this.tileSize) + 4, fontFamily: this.theme.labelFontFamily,\n              fontWeight: this.theme.labelFontWeight\n            });\n\n            label.set('lockMovementX', true);\n            label.set('lockMovementY', true);\n            label.set('lockRotation', true);\n            label.set('lockScalingX', true);\n            label.set('lockScalingY', true);\n            label.set('lockUniScaling', true);\n            label.set('hasControls', false);\n            label.set('hasBorders', false);\n            label.set('selectable', false);\n            label.setColor(dark ? this.colorService.boardBGLight.value : this.colorService.boardBGDark.value);\n            label.setCoords();\n            labels.push(label);\n            this.labels.push(label);\n          }\n          if (row == 7) {\n            let labelText = '';\n            if (this.settings.orientation == 'white') {\n              labelText = SquareNames[((7 - row) * 8) + col][0];\n            } else {\n              labelText = SquareNames[(row * 8) + col][0];\n            }\n            const label = new fabric.Text(labelText, {\n              fontSize: this.theme.labelFontSize, left: ((col + 1) * this.tileSize) - this.theme.labelFontSize + 2, top: ((row + 1) * this.tileSize) - this.theme.labelFontSize - 2, fontFamily: this.theme.labelFontFamily,\n              fontWeight: this.theme.labelFontWeight\n            });\n\n            label.set('lockMovementX', true);\n            label.set('lockMovementY', true);\n            label.set('lockRotation', true);\n            label.set('lockScalingX', true);\n            label.set('lockScalingY', true);\n            label.set('lockUniScaling', true);\n            label.set('hasControls', false);\n            label.set('hasBorders', false);\n            label.set('selectable', false);\n            label.setColor(dark ? this.colorService.boardBGLight.value : this.colorService.boardBGDark.value);\n            label.setCoords();\n            labels.push(label);\n            this.labels.push(label);\n          }\n        }\n      }\n      let objects: (fabric.Rect | fabric.Text)[] = [];\n      objects = objects.concat(tiles, labels);\n      const tileGroup = new fabric.Group(objects, {\n        left: 0,\n        top: 0,\n      });\n      tileGroup.set('left', 0);\n      tileGroup.set('top', 0);\n      tileGroup.set('lockMovementX', true);\n      tileGroup.set('lockMovementY', true);\n      tileGroup.set('lockRotation', true);\n      tileGroup.set('lockScalingX', true);\n      tileGroup.set('lockScalingY', true);\n      tileGroup.set('hasControls', false);\n      tileGroup.set('hasBorders', false);\n      tileGroup.set('lock');\n      tileGroup.set('selectable', false);\n      tileGroup.set('originX', 'left');\n      tileGroup.set('originY', 'top');\n      this.canvas.add(tileGroup);\n      this.tileGroup = tileGroup;\n      tileGroup.moveTo(-30);\n      this.canvas.requestRenderAll();\n    }\n  }\n\n  private addTile(tileData: { tile: fabric.Object; piece?: Piece }) {\n    if (this.canvas) {\n      this.canvas.add(tileData.tile);\n      tileData.tile.moveTo(-100);\n      tileData.tile.setCoords();\n    }\n  }\n\n  private loadPieces(): BehaviorSubject<number> {\n    const count = new BehaviorSubject<number>(0);\n    this.loadPieceImage('wK', count);\n    this.loadPieceImage('wB', count);\n    this.loadPieceImage('wQ', count);\n    this.loadPieceImage('wR', count);\n    this.loadPieceImage('wP', count);\n    this.loadPieceImage('wN', count);\n    this.loadPieceImage('bK', count);\n    this.loadPieceImage('bB', count);\n    this.loadPieceImage('bQ', count);\n    this.loadPieceImage('bR', count);\n    this.loadPieceImage('bP', count);\n    this.loadPieceImage('bN', count);\n    return count;\n  }\n\n  private generateBoard(): void {\n    this.clearBoard();\n    this.generateTiles();\n  }\n\n  private loadPieceImage(\n    piece: string,\n    subject: BehaviorSubject<number>\n  ): void {\n    if (this.theme?.pieceSet) {\n      if (this.theme.isSpriteSheet) {\n      } else {\n        if (this.theme.fileExtension === '.svg') {\n          fabric.loadSVGFromURL(\n            this.theme.pieceSet + piece + this.theme.fileExtension,\n            (objects, options) => {\n              const obj = fabric.util.groupSVGElements(\n                objects,\n                options\n              ) as fabric.Group;\n              obj.left = -400;\n              obj.top = 0;\n              obj.moveTo(10);\n              this.pieceMap.set(piece, obj);\n              subject.next(subject.value + 1);\n            }\n          );\n        }\n      }\n    }\n  }\n\n  private resizeBoardObjects(size: number): void {\n    this.tileSize = Math.floor(this.size / 8);\n    if (this.tileGroup) {\n      this.tileGroup.set('top', 0);\n      this.tileGroup.set('left', 0);\n      this.tileGroup.scaleToHeight(this.tileSize * 8);\n      this.tileGroup.scaleToWidth(this.tileSize * 8);\n      this.tileGroup.moveTo(-300);\n      this.tileGroup.setCoords();\n    }\n    this.pieces.forEach((pieceData) => {\n      const piece = pieceData.object;\n      if (piece.left !== undefined && piece.top !== undefined && this.canvas) {\n        const row = Math.floor(pieceData.tile / 8);\n        const col = pieceData.tile % 8;\n        const tileSizeFragment = this.tileSize / 100;\n        piece.scaleToHeight(Math.ceil(tileSizeFragment * 90));\n        const piecePadding = Math.ceil(tileSizeFragment * 3) + 1;\n        if (this.settings.orientation == 'white') {\n          piece.set('left', Math.floor(col * this.tileSize) + piecePadding);\n          piece.set('top', Math.floor((7 - row) * this.tileSize) + piecePadding);\n        } else {\n          piece.set('left', Math.floor((7 - col) * this.tileSize) + piecePadding);\n          piece.set('top', Math.floor(row * this.tileSize) + piecePadding);\n        }\n        piece.moveTo(10);\n        piece.setCoords();\n      }\n    });\n    if (this.promotionDialog) {\n      this.promotionDialog.scaleToHeight(this.size);\n      this.promotionDialog.scaleToWidth(this.size);\n      this.promotionDialog?.moveTo(500);\n\n      // knight\n      let y = this.size * 0.67 + 4;\n      let x = this.size * 0.205;\n      this.knightButton?.scaleToHeight(this.size * 0.15);\n      this.knightButton?.scaleToWidth(this.size * 0.15);\n      this.knightButton?.set('left', x);\n      this.knightButton?.set('top', y);\n      this.knightButton?.moveTo(510);\n      this.knightButton?.setCoords();\n      // bishop\n\n      x = this.size * 0.4;\n      this.bishopButton?.scaleToHeight(this.size * 0.15);\n      this.bishopButton?.scaleToWidth(this.size * 0.15);\n      this.bishopButton?.set('left', x);\n      this.bishopButton?.set('top', y);\n      this.bishopButton?.moveTo(510);\n      this.bishopButton?.setCoords();\n      // rook\n\n      x = this.size * 0.595;\n      this.rookButton?.scaleToHeight(this.size * 0.15);\n      this.rookButton?.scaleToWidth(this.size * 0.15);\n      this.rookButton?.set('left', x);\n      this.rookButton?.set('top', y);\n      this.rookButton?.moveTo(510);\n      this.rookButton?.setCoords();\n      // queen\n\n      x = this.size * 0.79;\n      this.queenButton?.scaleToHeight(this.size * 0.15);\n      this.queenButton?.scaleToWidth(this.size * 0.15);\n      this.queenButton?.set('left', x);\n      this.queenButton?.set('top', y);\n      this.queenButton?.moveTo(510);\n      this.queenButton?.setCoords();\n    }\n  }\n\n  setDarkTile(color: string): void {\n    if (this.tiles.length != 0 && this.theme) {\n      for (let index = 0; index < 64; index++) {\n        const row = Math.floor(index / 8);\n        if (row % 2 === 0) {\n          if (index % 2 === 0) {\n            const tile = this.tiles[index].tile;\n            tile.set('fill', color);\n          }\n        } else {\n          if (index % 2 !== 0) {\n            const tile = this.tiles[index].tile;\n            tile.set('fill', color);\n          }\n        }\n      }\n      if(this.labels.length) {\n        this.labels.forEach((label: fabric.Object)=>{\n          // @ts-ignore\n          if(label &&  label.get('fill') === this.theme.tileDark) {\n            label.setColor(color);\n          }\n        });\n      }\n      this.theme.tileDark = color;      \n      this.canvas?.requestRenderAll();\n    }\n  }\n\n  setLightTile(color: string): void {\n\n    if (this.tiles.length != 0 && this.theme) {\n      for (let index = 0; index < 64; index++) {\n        const row = Math.floor(index / 8);\n        if (row % 2 !== 0) {\n          if (index % 2 === 0) {\n            const tile = this.tiles[index].tile;\n            tile.set('fill', color);\n          }\n        } else {\n          if (index % 2 !== 0) {\n            const tile = this.tiles[index].tile;\n            tile.set('fill', color);\n          }\n        }\n      }\n      if(this.labels.length) {\n        this.labels.forEach((label: fabric.Object)=>{\n          // @ts-ignore\n          if(label && label.get('fill') === this.theme.tileLight) {\n            label.setColor(color);\n          }\n        });\n      }\n      this.theme.tileLight = color;      \n      this.canvas?.requestRenderAll();\n    }\n\n  }\n\n  setSize(size: number): void {\n    if (this.canvas) {\n      this.size = size;\n      this.tileSize = Math.floor(size / 8);\n      this.canvas.width = size;\n      this.canvas.height = size;\n      this.canvas.setDimensions({\n        width: size,\n        height: size,\n      });\n      this.resizeBoardObjects(size);\n      this.canvas.requestRenderAll();\n    }\n  }\n\n  setInteractive(interactive: boolean): void {\n    if (interactive) {\n      if (this.canvas) {\n      }\n    } else {\n      if (this.canvas) {\n      }\n    }\n  }\n\n  setBoardToGamePosition(): void {\n    this.clearMaterial();\n    if (this.olga.validGame()) {\n      const position = this.olga.getGame()?.getPosition();\n      if (position) {\n        for (let index = 0; index < 64; ++index) {\n          const squareData = position.square(SquareNames[index]);\n          // get the first and last of the role and color\n          if (squareData.length >= 2) {\n            this.addPiece(index, squareData[0], squareData[1].toUpperCase());\n          }\n        }\n      }\n    }\n  }\n\n  requestRedraw(): void {\n    this.clearBoard();\n    this.generateBoard();\n  }\n  \n  show(): void {\n    if(this.boardCanvas) {\n      this.boardCanvas.nativeElement.style.visibility = 'visible';\n    }\n  }\n  hide(): void {\n    if(this.boardCanvas) {\n      this.boardCanvas.nativeElement.style.visibility = 'hidden';\n    }\n  }\n}\n","<canvas #boardCanvas [style.z-index]=\"2\" resize>\n</canvas>","export const SquareNames = [\r\n    'a1',\r\n    'b1',\r\n    'c1',\r\n    'd1',\r\n    'e1',\r\n    'f1',\r\n    'g1',\r\n    'h1',\r\n    'a2',\r\n    'b2',\r\n    'c2',\r\n    'd2',\r\n    'e2',\r\n    'f2',\r\n    'g2',\r\n    'h2',\r\n    'a3',\r\n    'b3',\r\n    'c3',\r\n    'd3',\r\n    'e3',\r\n    'f3',\r\n    'g3',\r\n    'h3',\r\n    'a4',\r\n    'b4',\r\n    'c4',\r\n    'd4',\r\n    'e4',\r\n    'f4',\r\n    'g4',\r\n    'h4',\r\n    'a5',\r\n    'b5',\r\n    'c5',\r\n    'd5',\r\n    'e5',\r\n    'f5',\r\n    'g5',\r\n    'h5',\r\n    'a6',\r\n    'b6',\r\n    'c6',\r\n    'd6',\r\n    'e6',\r\n    'f6',\r\n    'g6',\r\n    'h6',\r\n    'a7',\r\n    'b7',\r\n    'c7',\r\n    'd7',\r\n    'e7',\r\n    'f7',\r\n    'g7',\r\n    'h7',\r\n    'a8',\r\n    'b8',\r\n    'c8',\r\n    'd8',\r\n    'e8',\r\n    'f8',\r\n    'g8',\r\n    'h8',\r\n  ];\r\n  \r\n  export interface Piece {\r\n    role: string;\r\n    color: string;\r\n    promoted?: boolean;\r\n  }\r\n  \r\n  export class BoardTheme {\r\n    constructor(\r\n      public tileLight: string = '',\r\n      public tileDark: string = '',\r\n      public pieceSet: string = '',\r\n      public isSpriteSheet = false,\r\n      public fileExtension = '.svg',\r\n      public labelFontSize = 14,\r\n      public labelFontFamily = 'Cambria',\r\n      public labelFontWeight = 'bold'\r\n    ) { }\r\n  }\r\n  \r\n  export type Color = 'white' | 'black';\r\n  \r\n  export class BoardSettings {\r\n    orientation: Color = 'white';\r\n  }\r\n  \r\n  export enum LabelState {\r\n    NoLabels = 0,\r\n    LeftBottom = 1,\r\n    RightBottom = 2,\r\n    LeftTop = 4,\r\n    RightTop = 8,\r\n  }\r\n  ","\r\n//@ts-ignore\r\nimport { Game as KGame, Variation as KVariation, Node as KNode, Position as KPosition, pgnRead, Database as KDatabase } from 'kokopu';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { SquareNames } from '../canvas-chessboard/types';\r\n// Game Score\r\n\r\nexport class GameScoreVariation {\r\n    variationData: GameScoreItem[];\r\n    constructor(variationData: GameScoreItem[] = []) {\r\n        this.variationData = variationData;\r\n    }\r\n}\r\n\r\nexport class GameScoreAnnotation {\r\n    annotation = '';\r\n    constructor(annotation: string = '') {\r\n        this.annotation = annotation;\r\n    }\r\n}\r\n\r\nexport class GameScoreItem {\r\n    type = 0;\r\n    move: KNode | null = null;\r\n    selection = 0;\r\n    current = false;\r\n\r\n    // flatten the variables\r\n\r\n    constructor(\r\n        protected game: ChessGame | null = null,\r\n        protected index: number,\r\n        move?: KNode\r\n    ) {\r\n        this.move = move;\r\n        this.getType();\r\n    }\r\n    getIndex(): number {\r\n        return this.index;\r\n    }\r\n    addType(type: GameScoreType): void {\r\n        this.type |= type;\r\n    }\r\n    removeType(type: GameScoreType): void {\r\n        this.type ^= type;\r\n    } \r\n    getType(): number {\r\n        if (this.move) {\r\n            const previous = this.previous();\r\n            let variations = this.move.variations();\r\n            if (previous) {\r\n                if (previous.move.moveColor() == 'w') {\r\n                    this.type |= GameScoreType.HalfPly;\r\n                    if (!previous.move.comment()) {\r\n                        this.type |= GameScoreType.Group;\r\n                    }\r\n                }\r\n            }\r\n            if (variations && variations.length > 0) {\r\n                this.type |= GameScoreType.Variation;\r\n            } else if (this.move.comment()) {\r\n                this.type |= GameScoreType.Annotation;\r\n            } else {\r\n                let comment = null;\r\n                if (previous && previous.move) {\r\n                    comment = previous.move.comment();\r\n                }\r\n                if ((!previous && this.move.moveColor() == 'w') || !comment) {\r\n                    this.type |= GameScoreType.Group;\r\n                }\r\n            }\r\n        }\r\n        return this.type;\r\n    }\r\n\r\n    next(): GameScoreItem | null {\r\n        if (this.game) {\r\n            return this.game.getNext(this.index);\r\n        }\r\n        return null;\r\n    }\r\n    previous(): GameScoreItem | null {\r\n        if (this.game) {\r\n            return this.game.getPrevious(this.index);\r\n        }\r\n        return null;\r\n    }\r\n    setSelected(select = true): void {\r\n        if (select) {\r\n            this.type = this.type | GameScoreType.Selected;\r\n        } else {\r\n            this.type = this.type ^ GameScoreType.Selected;\r\n        }\r\n    }\r\n}\r\n\r\nexport class ChessMove {\r\n    to: number = 0;\r\n    from: number = 0;\r\n    role: string = '';\r\n    color: string = '';\r\n    capture?: { role: string; color: string };\r\n    promotion?: { role: string };\r\n    castle?: {type:string, to:number, from: number};\r\n    promoteFunction?: any;\r\n    static fromNode(node: KNode): ChessMove | null {\r\n        const move = new ChessMove();\r\n        const mDescriptor = node._info.moveDescriptor;\r\n        if (mDescriptor) {\r\n            move.from = SquareNames.indexOf(mDescriptor.from());\r\n            move.to = SquareNames.indexOf(mDescriptor.to());\r\n            if (mDescriptor.isCapture()) {\r\n                move.capture = { role: mDescriptor.capturedPiece().toUpperCase(), color: mDescriptor.capturedColoredPiece()[0] };\r\n            }\r\n            if (mDescriptor.isCastling()) {\r\n                move.castle = {type: node.notation(), to: SquareNames.indexOf(mDescriptor.rookTo()), from: SquareNames.indexOf(mDescriptor.rookFrom())};\r\n            }\r\n            if (mDescriptor.isPromotion()) {\r\n                move.promotion = { role: mDescriptor.promotion() };\r\n            }\r\n            return move;\r\n        }\r\n        return null;\r\n    }\r\n}\r\nexport type GameScorePath = {active: number, paths:GameScoreItem[]};\r\n\r\nexport class ChessGame {\r\n    protected position: KPosition | null = null;\r\n    protected currentNode: KNode | null = null;\r\n    protected currentVariation: KVariation | null = null;\r\n    protected currentIndex = -1;\r\n    protected nodeMap: Array<GameScoreItem> = [];\r\n    protected gameVariations: KVariation[] = [];\r\n    protected variation: KVariation | null = null;\r\n    protected startNode: KNode | null = null;\r\n    protected lastNode: KNode | null = null;\r\n    protected isVariation = false;\r\n    public fen = '';\r\n    protected moveMap: Map<number, GameScorePath> = new Map<number,GameScorePath>();\r\n    public getNodeIndex(): number {\r\n        return this.currentIndex;\r\n    }\r\n    protected static compareKNode(left: KNode, right: KNode): boolean {\r\n        if (\r\n            left !== null &&\r\n            right !== null &&\r\n            left !== undefined &&\r\n            right !== undefined\r\n        ) {\r\n            const leftMove = left._info.moveDescriptor;\r\n            const rightMove = right._info.moveDescriptor;\r\n            return (\r\n                leftMove.from() === rightMove.from() && leftMove.to() === rightMove.to()\r\n            );\r\n        }\r\n        return false;\r\n    }\r\n\r\n    protected static compareVariation(\r\n        left: KVariation,\r\n        right: KVariation\r\n    ): boolean {\r\n        if (\r\n            left !== null &&\r\n            right !== null &&\r\n            left !== undefined &&\r\n            right !== undefined\r\n        ) {\r\n            if (ChessGame.compareKNode(left.first(), right.first())) {\r\n                return (\r\n                    left.comment() === right.comment() &&\r\n                    left.initialFullMoveNumber() === right.initialFullMoveNumber()\r\n                );\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    protected getLastNode(): KNode {\r\n        let node = this.currentNode;\r\n        while (node && node.next()) {\r\n            node = node.next();\r\n        }\r\n        return node;\r\n    }\r\n\r\n    protected setNode(node: KNode) {\r\n        this.position = node.position();\r\n        this.currentNode = node.next();\r\n        this.lastNode = this.getLastNode();\r\n        if (!this.currentNode) {\r\n            this.currentNode = this.lastNode;\r\n        }\r\n        this.fen = this.position.fen();\r\n        this.olga.redrawBoard();\r\n        this.olga.updateStatus(this.position.turn(), node);\r\n    }\r\n\r\n    public onVariant(): boolean {\r\n        return this.isVariation;\r\n    }\r\n\r\n    public getNext(index: number): GameScoreItem | null {\r\n        const next = index + 1;\r\n        if (next >= 0 && next < this.nodeMap.length) {\r\n            return this.nodeMap[next];\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public getPrevious(index: number): GameScoreItem | null {\r\n        const prev = index - 1;\r\n        if (prev >= 0 && prev < this.nodeMap.length) {\r\n            return this.nodeMap[prev];\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public performPromotion(move: ChessMove) {\r\n        if (move.promotion && move.promoteFunction) {\r\n            //const moveDesc = 1\r\n            const moveDesc = move.promoteFunction(move.promotion.role.toLowerCase());\r\n            if (this.position.play(moveDesc)) {\r\n                const node = this.variation.play(moveDesc);\r\n                if (!this.lastNode || this.lastNode == this.currentNode) {\r\n                    this.lastNode = node;\r\n                }\r\n                if (!this.startNode) {\r\n                    this.startNode = node;\r\n                }\r\n                this.currentNode = node;\r\n                this.currentNode._info.moveDescriptor = moveDesc;\r\n            }\r\n        }\r\n    }\r\n    public makeMove(move: ChessMove, fromPGN = false): void {\r\n        let lastNode = this.currentNode;\r\n        if (this.currentNode) {\r\n            let pgnMove = null;\r\n            if(this.currentNode.move) {\r\n                move = this.currentNode.move._info.moveDescriptor\r\n            } else {\r\n                pgnMove = this.currentNode._info.moveDescriptor;\r\n            }\r\n            const toSquare = SquareNames[move.to];\r\n            const fromSquare = SquareNames[move.from];\r\n            const next = this.currentNode.next();\r\n            const legal = this.position.isMoveLegal(fromSquare, toSquare);\r\n            if (pgnMove && pgnMove.from() == fromSquare && pgnMove.to() == toSquare) {\r\n                // not a variant\r\n                this.position.play(pgnMove);\r\n                if (fromPGN) {\r\n                    if (pgnMove.isPromotion()) {\r\n                        move.promoteFunction = legal;\r\n                        this.olga.showPromotionDialog(move);\r\n                    }\r\n                    if (pgnMove.isCastling()) {\r\n                        this.olga.redrawBoard();\r\n                    }\r\n                    this.olga.makeBoardMove(move);\r\n                }\r\n                this.currentNode = next;\r\n            } else {\r\n                // look for an existing variant\r\n                console.log(\r\n                    'Check Variants= ' + pgnMove.from() + ' -> ' + pgnMove.to()\r\n                );\r\n                lastNode = this.currentNode.next();\r\n                const variations = lastNode.variations();\r\n                this.isVariation = true;\r\n                // Generate methods of communicating branched variations to iteration pattern\r\n                // Adjust algorithms to account for a branched has the ability to un-branch or\r\n                // even become another \"peer\" branch all togeth0er\r\n                variations.forEach((variation: KVariation) => {\r\n                    const firstMove = variation.first();\r\n                    if (firstMove && firstMove._info.moveDescriptor) {\r\n                        const test = firstMove._info.moveDescriptor;\r\n                        if (test.to() == toSquare && test.from() == fromSquare) {\r\n                            this.variation = variation;\r\n                            this.gameVariations.push(variation);\r\n                            this.position.play(test);\r\n                            this.olga.isVariantChanged(this.isVariation);                            \r\n                            console.log('Found Existing Variation');\r\n                            console.log(variation);\r\n                            ++this.currentIndex;\r\n                            this.olga.gameScoreItemsChanged(this.generateGameScore());\r\n                        } else {\r\n                            console.log(\r\n                                'Variation checked: ' + test.from() + ' -> ' + test.to()\r\n                            );\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        if (!ChessGame.compareKNode(lastNode, this.currentNode)) {\r\n            this.olga.updateStatus(\r\n                this.position.turn(),\r\n                lastNode\r\n            );\r\n        }\r\n    }\r\n\r\n    constructor(protected olga: any, public game?: KGame) {\r\n        if (game) {\r\n            this.setGame(this.game);\r\n        }\r\n    }\r\n\r\n    public getPosition(): KPosition | null {\r\n        return this.position;\r\n    }\r\n\r\n    public generateGameScore(): GameScoreItem[] {\r\n        const items = [];\r\n        this.nodeMap = [];\r\n        let index = 0;\r\n        let currentNode = this.currentNode;\r\n        for(let i = 0; i < this.gameVariations.length; ++i) {\r\n            const variation = this.gameVariations[i];\r\n            let targetVariation: KVariation | null = null;\r\n            let targetNotation = '';\r\n            if(currentNode)\r\n            targetNotation = currentNode.notation();\r\n            if(i < this.gameVariations.length-1) {\r\n                targetVariation = this.gameVariations[i+1];\r\n            }\r\n            let nextScore = variation.first() as KNode;\r\n            let previous: GameScoreItem | null = null;\r\n            let branched = (i > 0);\r\n            while (nextScore) {\r\n                if (nextScore) {\r\n                    const gItem = new GameScoreItem(this, index, nextScore);\r\n                    const notation = nextScore.notation();\r\n                    if(targetVariation && notation == targetNotation) {\r\n                            nextScore = null;\r\n                            this.nodeMap[index] = gItem;\r\n                            previous = gItem;\r\n                            items.push(gItem);\r\n                            ++index;\r\n                            continue;\r\n                    }\r\n                    if(branched) {\r\n                        gItem.addType(GameScoreType.Branched);\r\n                        branched = false;\r\n                    }\r\n                    this.nodeMap[index] = gItem;\r\n                    previous = gItem;\r\n                    items.push(gItem);\r\n                    ++index;\r\n                    nextScore = nextScore.next();\r\n                }\r\n            }\r\n        }\r\n        this.lastNode = this.nodeMap[this.nodeMap.length - 1];\r\n        return items;\r\n    }\r\n\r\n    setGame(game: KGame): void {\r\n        this.game = game;\r\n        this.variation = this.game.mainVariation() as KVariation;\r\n        this.gameVariations.push(this.variation);\r\n        this.startNode = this.variation.first();\r\n        this.position = this.variation.initialPosition() as KPosition;\r\n        this.currentIndex = -1;\r\n        this.fen = this.position.fen();\r\n        this.currentNode = null;\r\n        this.olga.redrawBoard();\r\n    }\r\n\r\n\r\n\r\n    public navigateToNode(index: number) {\r\n        if (this.currentIndex < index) {\r\n            while (this.currentIndex < index) {\r\n                const next = this.nodeMap[++this.currentIndex] as GameScoreItem;\r\n                if (next) {\r\n                    const cmove = ChessMove.fromNode(next.move);\r\n                    if (cmove) {\r\n                        if (this.position.play(next.move._info.moveDescriptor)) {\r\n                            this.olga.makeBoardMove(cmove);\r\n                            this.currentNode = next.move;\r\n                            this.olga.updateGameScoreSelection();\r\n                            this.nodeMap[this.currentIndex] = next;\r\n                            this.olga.updateStatus(this.position.turn(), next.move);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return;\r\n        }\r\n        if (this.currentIndex > index) {\r\n            while (this.currentIndex > index && --this.currentIndex >= -1) {\r\n                const node = this.nodeMap[this.currentIndex + 1];\r\n                const previous = this.nodeMap[this.currentIndex];\r\n                if (previous) {\r\n                    const cmove = ChessMove.fromNode(node.move);\r\n                    if (cmove) {\r\n                        this.position = previous.move.position();\r\n                        this.olga.unmakeBoardMove(cmove);\r\n                        this.currentNode = previous;\r\n                        this.olga.updateGameScoreSelection();\r\n                        this.olga.updateStatus(this.position.turn(), previous.move);\r\n                    }\r\n                } else {\r\n                    this.position.reset();\r\n                    this.currentIndex = -1;\r\n                    this.currentNode = null;\r\n                    if (!this.currentNode) {\r\n                        this.currentNode = this.lastNode;\r\n                    }\r\n                    this.fen = this.position.fen();\r\n                    this.olga.redrawBoard();\r\n                    this.olga.updateStatus(this.position.turn());\r\n                    this.olga.updateGameScoreSelection();\r\n                }\r\n            }\r\n            return;\r\n        }\r\n    }\r\n\r\n    // navigation\r\n    public advance(updateBoard = true): boolean {\r\n        if (!this.isFinalPosition()) {\r\n            const next = this.currentIndex + 1;\r\n            if (next < this.nodeMap.length && next >= 0) {\r\n                this.navigateToNode(next);\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public moveToStart(): void {\r\n        while (this.previous()) {\r\n\r\n        }\r\n    }\r\n    public moveToEnd(): void {\r\n        this.navigateToNode(this.nodeMap.length - 1);\r\n    }\r\n\r\n    public previous(): boolean {\r\n        if (!this.isStartingPosition()) {\r\n            const prev = this.currentIndex - 1;\r\n            if (prev < this.nodeMap.length && prev >= -1) {\r\n                this.navigateToNode(prev);\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public isStartingPosition(): boolean {\r\n        return this.currentIndex === -1;\r\n    }\r\n\r\n    public isFinalPosition(): boolean {\r\n        return this.currentIndex === (this.nodeMap.length-1);\r\n    }\r\n    static parsePGN(olga: any, pgn: string): ChessGame[] {\r\n        const games = [];\r\n        const state = pgnRead(pgn) as KDatabase;\r\n        if(state) {\r\n            const gameCount = state.gameCount();\r\n            for(let index = 0; index < gameCount; ++index) {\r\n                games.push(new ChessGame(olga, state.game(index)));\r\n            }            \r\n        }\r\n        return games;\r\n    }\r\n}\r\n\r\nexport enum GameScoreType {\r\n    HalfPly = 1,\r\n    Group = 2,\r\n    Variation = 4,\r\n    Annotation = 8,\r\n    Selected = 16,\r\n    Branched = 32\r\n}\r\n\r\n","import { Component, OnInit, Input } from '@angular/core';\nimport { } from '@angular/material/slider';\n@Component({\n  selector: 'app-labeled-slider',\n  templateUrl: './labeled-slider.component.html',\n  styleUrls: ['./labeled-slider.component.scss']\n})\nexport class LabeledSliderComponent implements OnInit {\n  @Input() value = 18;\n  @Input() minimum = 14;\n  @Input() maximum = 24;\n  @Input() step = 1;\n  @Input() label = 'labeled slider';\n\n  constructor() { }\n\n  ngOnInit(): void {\n\n  }\n\n  inputEventCapture(event: any): void {\n    //console.log(event);\n  }\n\n}\n","<mat-slider #scoreFontSize thumbLabel class=\"ls-slider\" (input)=\"inputEventCapture($event)\" [value]=\"value\" [min]=\"minimum\" [max]=\"maximum\" [step]=\"step\"></mat-slider>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-toggle-switch',\n  templateUrl: './toggle-switch.component.html',\n  styleUrls: ['./toggle-switch.component.scss']\n})\nexport class ToggleSwitchComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>toggle-switch works!</p>\n","import { Component, OnInit, Input, AfterViewInit, SimpleChanges, OnChanges, Output, ViewChild, ElementRef } from '@angular/core';\nimport { GameScoreType, GameScoreItem } from '../../common/kokopu-engine';\nimport { OlgaService } from 'src/app/services/olga.service';\nimport { ColorService } from '../../services/colors.service';\n\n@Component({\n  selector: 'game-score-item',\n  templateUrl: './game-score-item.component.html',\n  styleUrls: ['./game-score-item.component.scss']\n})\nexport class GameScoreItemComponent implements OnInit, AfterViewInit, OnChanges {\n  @Input() @Output() data: GameScoreItem = new GameScoreItem(null, -1);\n  @Output() typeName = '';\n\n  // visual nodes\n  @Output() ply = '';\n  GameScoreType = GameScoreType;\n  @ViewChild('gsiPly') gsiPly: ElementRef | null = null;\n  constructor(public olga: OlgaService, public colors:ColorService) {\n    // use data to actually set type\n\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.data) {\n      let newData = changes.data.currentValue as GameScoreItem;\n      this.data = newData;\n      if (this.data && this.gsiPly) {\n        let showing = false;\n        if (this.isFullPly()) {\n          showing = this.olga.showingPly.value;\n        } else {\n          showing = this.olga.showingHalfPly.value;\n        }\n        if(!showing) {\n          this.gsiPly.nativeElement.remove();\n          this.gsiPly = null;\n        }else{\n          this.ply = this.data.move.fullMoveNumber().toString() + '.';\n        }\n      }\n      this.data.getType();\n      this.updateTypeName();\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this.updateTypeName();\n    if(this.gsiPly) {\n      let showing = false;\n      if (this.isFullPly()) {\n        showing = this.olga.showingPly.value;\n      } else {\n        showing = this.olga.showingHalfPly.value;\n      }\n      if(!showing) {\n        this.gsiPly.nativeElement.remove();\n        this.gsiPly = null;\n      }else{\n        window.setTimeout( ()=>{this.ply = this.data.move.fullMoveNumber().toString() + '.';},\n        10);\n      }\n    }\n  }\n\n  showPly(): boolean {\n    if (this.data) {\n      if (this.isFullPly()) {\n        return this.olga.showingPly.value;\n      }\n      return this.olga.showingHalfPly.value;\n    }\n    return false;\n  }\n  isFullPly(): boolean {\n    if (this.data) {\n      return (this.data.type & GameScoreType.HalfPly) == 0;\n    }\n    return false;\n  }\n  setSelected(select: boolean): void {\n    if (this.data) {\n      if (select) {\n        this.data.type = (this.data.type | GameScoreType.Selected);\n        this.updateTypeName();\n        return;\n      }\n      if (this.data.type >= GameScoreType.Selected) {\n        this.data.type = this.data.type ^ GameScoreType.Selected;\n      }\n      this.updateTypeName();\n    }\n  }\n\n\n  isSelected(): boolean {\n    if (this.data) {\n      return (this.data.type & GameScoreType.Selected) == GameScoreType.Selected;\n    }\n    return false;\n  }\n\n  getPly(): number {\n    if (this.data && this.data.move) {\n      return this.data.move.fullMoveNumber();\n    }\n    return -1;\n  }\n\n  isGroup(): boolean {\n    if (this.data) {\n      return (this.data.type & GameScoreType.Group) == GameScoreType.Group;\n    }\n    return false;\n  }\n\n  isAnnotation(): boolean {\n    if (this.data) {\n      return (this.data.type & GameScoreType.Annotation) == GameScoreType.Annotation;\n    }\n    return false;\n  }\n\n  clickMove(): void {\n    if (this.data.move.variations().length > 0) {\n      this.olga.displayVariations(this.data);\n      this.olga.navigateToItem(this.data);\n    } else {\n      this.olga.navigateToItem(this.data);\n    }\n  }\n\n  protected updateTypeName(): void {\n    this.typeName = '';\n    if (this.data) {\n      const value = this.data.type & GameScoreType.Selected;\n      if ((this.data.type & GameScoreType.Selected) == GameScoreType.Selected) {\n        this.typeName += ' Current';\n      }\n      if ((this.data.type & GameScoreType.Annotation) == GameScoreType.Annotation) {\n        this.typeName += ' Annotation ';\n      }\n      if ((this.data.type & GameScoreType.Group) == GameScoreType.Group) {\n        this.typeName += ' Group ';\n      }\n      if ((this.data.type & GameScoreType.HalfPly) == GameScoreType.HalfPly) {\n        this.typeName += ' HalfPly ';\n      }\n      const variations = this.data.move.variations();\n      if (variations && variations.length > 0) {\n          this.typeName += ' Variation ';\n      }\n      if ((this.data.type & GameScoreType.Branched) == GameScoreType.Branched) { // must have a variation to be branched\n          this.typeName += ' Branched';\n      }\n    }\n  }\n}\n","<!-- GameScoreGroup -->\n<div class=\"gsi-container {{typeName}}\">\n  <div class=\"gsi-ply {{typeName}}\" (click)=\"clickMove()\" #gsiPly>\n    {{ply}}</div>\n  <!-- <div class=\"gsi-move {{typeName}}\" *ngIf=\"!isGroup()\">..&nbsp;</div> -->\n  <div class=\"gsi-move {{typeName}}\" *ngIf=\"this.data.move\" (contextmenu)=\"this.olga.openVariation(data)\" (click)=\"clickMove()\">\n    {{this.data.move.notation()}}</div>\n  <div class=\"gsi-comment {{typeName}}\" *ngIf=\"this.data.move\" (click)=\"clickMove()\">\n    {{this.data.move.comment()}}</div>\n</div>\n<!-- Variation -->","import {\n  Component,\n  OnInit,\n  Input,\n  Output,\n  AfterViewInit,\n  ViewChild,\n  ElementRef,\n  ViewChildren,\n  QueryList\n} from '@angular/core';\nimport {\n  GameScoreItem,\n  GameScoreType\n} from '../common/kokopu-engine';\nimport { GameScoreItemMenu } from './menu-game-score-item/menu-game-score-item.component';\nimport { GameScoreItemComponent } from './game-score-item/game-score-item.component';\nimport { BehaviorSubject } from 'rxjs';\nimport { OlgaService } from '../services/olga.service';\nimport { LayoutService } from '../services/layout.service';\n\nexport enum ScoreViewType {\n  Table = 101,\n  Flow = 202\n};\n\n\n\n@Component({\n  selector: 'app-game-score-ux',\n  templateUrl: './game-score.ux.html',\n  styleUrls: ['./game-score.ux.scss'],\n})\nexport class GamescoreUxComponent implements OnInit, AfterViewInit {\n  // Settings For Game Score Font\n  @Input() viewType: ScoreViewType = ScoreViewType.Flow;\n\n  // View Children Handles\n  @ViewChild(GameScoreItemMenu)\n  scoreItemMenu: GameScoreItemMenu | null = null;\n  @ViewChild('resizeHandle')\n  resizeHandle: ElementRef | null = null;\n  @ViewChildren(GameScoreItemComponent) scoreItems: QueryList<GameScoreItemComponent> | null = null;\n  @ViewChild('gamescore-container') container: ElementRef | null = null;\n  @ViewChild('pgnData')\n  pgnData: ElementRef | null = null; // To Be Deleted\n  columnCount = 3;\n  rowHeight = '50px';\n  maxPlySize = 178;\n  @Output() resizing = false;\n  @Input() scoreWidth: number | null = 360;\n  GameScoreType = GameScoreType;\n  ScoreViewType = ScoreViewType;\n  public _items: GameScoreItem[] = [];\n  // Current item data and visual\n  @Output() readonly currentData = new BehaviorSubject<GameScoreItem | null>(null);\n  @Output() currentItem: GameScoreItemComponent | null = null;\n\n\n  constructor(public olga: OlgaService, public layout: LayoutService) {\n    this.resetCursor();\n\n  }\n\n  ngOnInit(): void {\n    //console.log(this.gameScore);\n  }\n\n  ngAfterViewInit(): void {\n    this.layout.resizeElement = document.getElementById('resize-handle-' + this.olga.UUID);\n  }\n\n\n  public setGameScoreItems(items: GameScoreItem[] | undefined): void {\n    if(items) {\n      this._items = items;\n      this.updateSelection();\n    } else {\n      this._items = [];\n    }\n  }\n\n  public updateSelection(): void {\n    window.setTimeout(()=>{this.selectGameScoreItem(this.olga.getNodeIndex());}, 75);\n  }\n\n  resizeScore(): void {\n    if (this.scoreWidth) {\n      this.columnCount = Math.floor(this.scoreWidth / this.maxPlySize);\n    } else {\n      this.columnCount = 3;\n    }\n  }\n\n  openItemMenu(event: MouseEvent, item: GameScoreItemComponent): void {\n    event.preventDefault();\n    event.stopPropagation();\n    console.log(item);\n    if (item.data) {\n      //item.setCurrent(!item.data.current);\n    }\n    switch (item.data.type) { // open different menus\n\n    }\n    //this.scoreItemMenu?.openAt(item);\n  }\n\n  ignoreEvent(event: MouseEvent): void {\n    event.preventDefault();\n    event.stopPropagation();\n  }\n\n  setWidth(width: number | null): void {\n    if (width) {\n      this.columnCount = Math.floor(width / this.maxPlySize);\n    }\n  }\n\n  resetResizeHandle(event: DragEvent | MouseEvent): void {\n    this.resizing = false;\n    if (this.resizeHandle && event.buttons === 0) {\n      document.body.style.cursor = 'pointer';\n      this.resizeHandle.nativeElement.style.cursor = 'pointer';\n    }\n    if (this.resizeHandleEvent) {\n      this.resizeHandleEvent(event);\n    }\n  }\n\n  setGrabCursor(event: DragEvent | MouseEvent): void {\n    this.resizing = true;\n    document.body.style.cursor = 'grab';\n    if (this.resizeHandle) {\n      this.resizeHandle.nativeElement.style.cursor = 'grab';\n    }\n  }\n\n  resetCursor(): void {\n    document.body.style.cursor = 'pointer';\n    if (this.resizeHandle) {\n      this.resizeHandle.nativeElement.style.cursor = 'pointer';\n    }\n  }\n\n  startTouch(event: TouchEvent): void {\n    const touchPoint = event.touches[0];\n    if (touchPoint) {\n      if (this.layout.resizeElement) {\n        this.resizing = true;\n      }\n    }\n  }\n\n  stopTouch(event: TouchEvent) {\n    this.resizing = false;\n  }\n\n\n\n  resizeHandleEvent(event: DragEvent | MouseEvent): void {\n    if (this.resizing) {\n      this.resizeScore();\n    }\n  }\n\n  resizeTouchEvent(event: TouchEvent): void {\n    if (this.resizing) {\n      this.resizeScore();\n    }\n  }\n\n  resizeHandleCore(event: DragEvent | MouseEvent): void {\n    event.preventDefault();\n    event.stopPropagation();\n    //document.body.style.cursor = 'grab';\n    if (this.resizeHandle) {\n      //this.resizeHandle.nativeElement.style.cursor = 'grab';\n    }\n    if (event.buttons > 0 && this.resizeHandleEvent) {\n      this.resizeHandleEvent(event);\n    }\n  }\n  selectGameScoreItem(index: number) {\n    if (this.currentItem) {\n      this.currentItem.setSelected(false);\n      this.currentItem = null;\n    }\n    if(index >= 0) {\n      // TODO: Update on on ngChanges\n      const item = this.scoreItems?.toArray()[index];\n      if (item && item != this.currentItem) {\n        item.setSelected(!item.isSelected());\n        this.currentItem = item;\n      }\n    }\n  }\n  public getPGN(): string {\n    return this.pgnData?.nativeElement.value;\n  }\n}\n","<game-score-item-menu class=\"gs-menu\" #scoreItemMenu [style.z-index]=\"scoreItemMenu.open ? 20 : -1\"\n  (click)=\"scoreItemMenu.open = false;\"></game-score-item-menu>\n<mat-card class=\"gamescore-container\">\n  <h1 class=\"score-title\">Score</h1>\n  <mat-card-content class=\"score-list\">\n    <div>\n      <game-score-item #scoreItem *ngFor=\"let item of _items; index as i;\" [data]=\"item\">\n      </game-score-item>\n    </div>\n  </mat-card-content>\n</mat-card>\n<div>\n  <input style=\"visibility: hidden; display: none;\" #pgnData value='[Event \"GMA, Wijk aan Zee NED\"]\n[Site \"?\"]\n[Date \"2003.??.??\"]\n[Round \"1\"]\n[White \"Anand,V\"]\n[Black \"Radjabov,T\"]\n[Result \"1/2\"]\n[WhiteElo \"2750\"]\n[BlackElo \"2620\"]\n[ECO \"C12\"]\n[PlyCount \"55\"]\n[Annotator \"Hathaway\"]\n\n1. e4 e6\n{ Im not terribly familiar with the style of Radjabov, so I dont know if this is his usual opening. }\n2. d4 d5 3. Nc3 Nf6 (3...Bb4\n{ The Winawer Variation is probably best, though not as easy to play. }) 4. Bg5\n{ threatens e4-e5xf6 }\n (4. e5\n{ keeps pieces on the board and avoids ...dxe4 }) 4...Bb4 (4...Be7\n{ is more common and aims to trade dark-square bishops to ease Blacks cramp }) (4...dxe4\n{ aims to avoid any cramp by bringing pieces into alignment for trading, though White does get at least one very good piece (Ne4 or Bg5) and an easier time castling queen-side, to stir up king-side threats }\n 5. Nxe4 Be7  (\n{ or Rubinsteins }\n 5...Nbd7) ) 5. e5 h6 6. Bd2 (6. Bh4 g5 7. exf6 gxh4\n{ Black seems to equalize a little easier after this as he can win Pf6 in exchange for Ph4. }) 6...Bxc3 (6...Nfd7 7. Qg4\n{ and White isnt incurring any weaknesses, but is either gaining Bb4 for Nc3 or after ...Bb4-f8 Black is cramped again }\n  (7. Nb5 $5 Bxd2+ 8. Qxd2 a6 9. Na3) ) 7. bxc3 Ne4 8. Qg4\n{ White immediately takes aim at the backward Pg7 & Rh8 and usually Pf7 & Ke8. For the moment Bd2 serves to defend Pc3 and to prevent ...Qd8-g5 (offering a queen trade to end the pressure) . }\n (\n{ While }\n 8. h4\n{ is often useful in the French Defense with this pawn structure, I dont know that its been tried in this opening on this move. }) 8...g6 9. Bd3 (9. h4\n{ could take over for Bd2 in guarding g5 and preparing a later attack by f2-f4, h4-h5 or vice versa. It also would allow Rh1 to develop to build the direct frontal threats to Pf7 & Pg6. }\n 9...c5 10. Bd3 Nxd2 11. Kxd2 Qa5 12. dxc5 Qxc5 13. Ne2 Qxf2 $4 14. Raf1 Qc5 15. Bxg6 fxg6 16. Qxg6+)  (9. Qd1\n{ Fritz7; Odd! }) 9...Nxd2 10. Kxd2 c5 11. Nf3\n{ This has been considered the main line for many years, but I wonder if White can allow ...c5-c4 and not use more pawns to fight through Blacks pawns. }\n (11. dxc5\n{ is probably still wrong because of ...Qg5+ }) (11. h4\n{ still makes sense }) 11...Bd7 (11...c4 $6\n{ The problem with this is that however much it slows White, it also limits Blacks queen-side offensive possibilities. }) (\n{ Prematurely playing }\n 11...cxd4\n{ lets White straighten-out his pawns and Black has made no real progress. }\n 12. cxd4)  (11...Qa5 $5\n{ Fritz7: with the idea of ...cxd4 }) 12. dxc5 Qe7 13. Rab1 Bc6 14. Nd4 Nd7\n{ These last few moves have been quite unusual for a French Defense, but they make sense; Qe7 defends Pf7 while Bc6 defends Pb7 and Nd7 threatens Pc5 & Pe5. }\n15. Rhe1 (15. Nxc6 bxc6 16. Rb7 Qxc5 17. Qf4 g5 18. Qd4 Qa5 19. Rb2 c5 $11\n{ Fritz7 }) 15...Nxc5 16. Re3\n{ another way of getting the rook into position, in front of the king-side pawns, to threaten Blacks king-side pawns }\n16...h5 17. Qg3 O-O-O\n{ After this it would seem Blacks pieces can handle any threats White can generate. However, black might also have ideas of winning. How might he do that? Well, ...Be8, ...Kc8-b8-a8, ...Rd8-c8, ...Nc5-a4 and Pc3 is a target (slow I know) . Another idea is to keep Kd2 from ever escaping to safety by advancing ...h5-h4-h3 to break open the king-side and open the h-file for Blacks rooks. }\n (17...h4 $15\n{ Fritz7 }) (17...Nxd3 $15\n{ Fritz7 }) 18. Ke1 Qc7 (18...h4 19. Qg4 Rh5) 19. h4\n{ Anand aims to keep the king-side perfectly safe to ensure a draw. }\n (19. Qh4\n{ Fritz7 }) 19...Qa5 20. Kf1 (20. Nxc6 bxc6 21. Kf1 Kd7 20. Qf4 Ke8 $11\n{ Fritz7 }) 20...Rd7 (\n{ Premature is }\n 20...Qxa2 21. Ree1 Qa5  (21...Ba4 $11\n{ Fritz7 })  22. Ra1 Qxc3 23. Nxc6 bxc6 24. Ba6+ $18) 21. Qf4\n{ This general activity is perfect. It threatens Pf7, defends Nd4 and in some cases prepares for Qf4-b4 to attack Kc8. }\n (21. Ree1\n{ Fritz7 }) (21. Nxc6 bxc6 22. Ree1\n{ Fritz7 }) 21...Rhd8\n{ Black is probably wondering why he organized his pieces to only defend light squares. Only Qa5 and Nc5 can get to dark squares and that makes Whites task of coordinating much easier. }\n (21...Qxa2\n{ still premature }\n 22. Nxc6 bxc6 23. Qb4 Nb7 24. Ree1)  (21...Qxc3 $4 22. Nxc6 bxc6 23. Ba6+)  (21...Rc7 $14\n{ Fritz7 }) (21...Na4 $14\n{ Fritz7 }) 22. Kg1 (22. Nxc6 bxc6 23. Qb4 Qxb4 24. cxb4 d4 25. Ree1 Na4 $11\n{ Fritz7 }) 22...Nxd3 23. Rxd3 (23. cxd3 Qxc3 24. Rg3 Rc7 $14\n{ Fritz7 }) 23...Qc5 (23...Qxa2 24. Rdd1 Qc4 $11\n{ Fritz7 }) 24. Rb4 a5 $2 (24...Rc7\n{ Mark and Fritz7 agree! }) 25. Rb1 Rc7 26. Qc1 Be8 27. Nb3 (27. Qb2\n{ If White commits too quickly to the b-file then Black might actually create some play against Ph4 and on the c-file. }\n 27...Qe7  (27...a4 $11\n{ Fritz7 })  28. Nf3 Rc4\n{ possibly preparing ...b5 }) 27...Qb6 (27...Qc4 28. Nxa5 Qxh4 $14\n{ Fritz7 }) 28. Nd4\n{ Black created the weakness (Pa5) and cant quite defend it, so Anand forces a draw. }\n1/2-1/2' class=\"input-box\" #pgnBox type=\"text\" />\n</div>\n\n<div #resizeHandle id=\"resize-handle-{{this.olga.UUID}}\" class=\"resize-handle\" (touchstart)=\"startTouch($event)\"\n  (touchend)=\"stopTouch($event)\" (mouseup)=\"resetResizeHandle($event)\" (mousedown)=\"setGrabCursor($event)\"\n  (mouseleave)=\"resetCursor()\"></div>","import { Component, OnInit, Input, ViewChild, AfterViewInit } from '@angular/core';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { GameScoreItem } from '../../common/kokopu-engine';\n\n@Component({\n  selector: 'game-score-item-menu',\n  templateUrl: './menu-game-score-item.component.html',\n  styleUrls: ['./menu-game-score-item.component.scss']\n})\n\nexport class GameScoreItemMenu implements OnInit, AfterViewInit {\n  @Input() data: GameScoreItem | null = null\n  @Input() menuTitle = 'Menu Title';\n  public open = false;\n  @ViewChild(MatMenuTrigger) matMenuTrigger: MatMenuTrigger | null = null;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  ngAfterViewInit(): void {\n    this.matMenuTrigger?.menuClosed.subscribe(() => {\n      //console.log('Menu closed');\n    });\n  }\n\n  ignoreEvent(event: MouseEvent): void {\n    //console.log('Ignoring ' + event);\n    event.preventDefault();\n    event.stopPropagation();\n  }\n\n  openAt(item: GameScoreItem): void {\n    this.data = item;\n    this.menuTitle = item.move.notation();\n    this.open = true;\n  }\n}\n","<div class=\"gs-context-menu-container\" (click)=\"open = false\">\n  <div>Variations</div>\n  <div>-> {{ menuTitle }}</div>\n  <mat-grid-list [cols]=\"2\" rowHeight=\"72px\">\n    <mat-grid-tile><button mat-button class=\"context-menu-button\">Add</button></mat-grid-tile>\n    <mat-grid-tile><button mat-button class=\"context-menu-button\">Remove</button></mat-grid-tile>\n    <mat-grid-tile><button mat-button class=\"context-menu-button\">Keep</button></mat-grid-tile>\n    <mat-grid-tile><button mat-button class=\"context-menu-button\">Delete</button></mat-grid-tile>\n  </mat-grid-list>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { OlgaService } from '../services/olga.service';\nimport { LayoutService } from '../services/layout.service';\n\n@Component({\n  selector: 'olga-controls',\n  templateUrl: './olga-controls.component.html',\n  styleUrls: ['./olga-controls.component.scss']\n})\nexport class OlgaControlsComponent implements OnInit {\n\n  constructor(public olga: OlgaService, public layout: LayoutService) { }\n  public playing = false\n  public timeLeft = 0.6;\n  ngOnInit(): void {\n  }\n\n  advance(event: MouseEvent): void {\n    event.preventDefault();\n    event.stopPropagation();\n    this.olga.advance();\n  }\n\n  moveToStart(event: MouseEvent): void {\n    event.preventDefault();\n    event.stopPropagation();\n    this.olga.moveToStart();\n  }\n\n  previous(event: MouseEvent): void {\n    event.preventDefault();\n    event.stopPropagation();\n    this.olga.previous();\n  }\n\n  moveToEnd(event: MouseEvent): void {\n    event.preventDefault();\n    event.stopPropagation();\n    this.olga.moveToEnd();\n  }\n\n  toggleAutoPlay():void {\n    this.olga.toggleAutoPlay();\n  }\n  public setTimer(time: number) {\n    this.timeLeft = time/1000;\n  }\n}\n","<div class=\"quick-actions-container\">\n        <div (click)=\"toggleAutoPlay()\" class=\"play\">\n                <svg class=\"feather-play\">\n                        <use [ngStyle]=\"{'visibility': playing ? 'visible':'hidden'}\" xlink:href=\"/assets/images/feather-sprite.svg#pause\" />\n                        <use [ngStyle]=\"{'visibility': !playing ? 'visible':'hidden'}\"  xlink:href=\"/assets/images/feather-sprite.svg#play\" />\n                </svg>\n                <div class=\"timer\">{{timeLeft}}</div>\n        </div>\n        <div (click)=\"olga.toggleGameScoreViewType()\" class=\"view\">\n                <svg class=\"feather\">\n                        <use xlink:href=\"/assets/images/feather-sprite.svg#columns\" />\n                </svg>\n        </div>\n        <div (click)=\"layout.openSettings()\" class=\"settings\">\n                <svg class=\"feather\">\n                        <use xlink:href=\"/assets/images/feather-sprite.svg#sliders\" />\n                </svg>\n        </div>\n        \n        <div (click)=\"layout.decreaseBoardSize()\" class=\"shrink\">\n                <svg class=\"feather\">\n                        <use xlink:href=\"/assets/images/feather-sprite.svg#minus\" />\n                </svg>\n        </div>\n        \n        <div (click)=\"layout.increaseBoardSize()\" class=\"grow\">\n                <svg class=\"feather\">\n                        <use xlink:href=\"/assets/images/feather-sprite.svg#plus\" />\n                </svg>\n        </div>\n        \n</div>\n<div class=\"navigation-container\">\n        <div (click)=\"moveToStart($event);\" class=\"button start\"><svg class=\"feather\">\n                        <use xlink:href=\"/assets/images/feather-sprite.svg#rewind\" /></svg></div>\n        <div (click)=\"previous($event);\" class=\"button previous\"><svg class=\"feather\">\n                        <use xlink:href=\"/assets/images/feather-sprite.svg#chevron-left\" /></svg></div>\n        <div (click)=\"advance($event);\" class=\"button next\"><svg class=\"feather\">\n                        <use xlink:href=\"/assets/images/feather-sprite.svg#chevron-right\" /></svg></div>\n        <div (click)=\"moveToEnd($event);\" class=\"button end\"><svg class=\"feather\">\n                        <use xlink:href=\"/assets/images/feather-sprite.svg#fast-forward\" /></svg></div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n//@ts-ignore\nimport { Node as KNode } from 'kokopu';\nimport { OlgaService } from '../services/olga.service';\n@Component({\n  selector: 'olga-status',\n  templateUrl: './olga-status.component.html',\n  styleUrls: ['./olga-status.component.scss']\n})\nexport class OlgaStatusComponent implements OnInit {\n  readonly status = new BehaviorSubject<string>('White to move.');\n  constructor(olga: OlgaService) {\n    olga.attachStatus(this);\n  }\n\n  ngOnInit(): void {\n  }\n\n  openEngine(): void {\n\n  }\n  updateStatus(turn: string, last?: KNode) {\n    let message = 'White';\n    let move = '';\n    if (turn === 'b') {\n      message = 'Black';\n    }\n    message += ' to move. ';\n    if (last) {\n      message += 'Last: ' + last.fullMoveNumber() + (turn === 'b' ? '.' : '..') + move + last.notation();\n    }\n    this.status.next(message);\n  }\n\n  resetStatus(): void {\n    this.status.next('White to move.');\n  }\n}\n","<div class=\"status-text\">{{status | async}}</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'olga-title',\n  templateUrl: './olga-title.component.html',\n  styleUrls: ['./olga-title.component.scss']\n})\nexport class OlgaTitleComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<font face=\"verdana,arial,helvetica\" size=\"+1\"><b><a href=\"/perl/chessplayer?pid=16860\">Alex Dunne</a></b>\n    <font color=\"#333333\">vs</font>\n    <b><a href=\"/perl/chessplayer?pid=43861\">Kiven Plesset</a></b>\n</font><br>\n<font face=\"georgia,palatino,times new roman,times\" size=\"-1\">\n    <b>\"Plesset Surprise\"</b>\n    <font size=\"-2\">(<a href=\"/perl/gamesoftheday\">game of the day</a> Sep-03-2020)</font><br>\n\n    New York State Championship (1976), Albany, NY USA\n    <br>\n    French Defense: Two Knights Variation <a href=\"/perl/chessopening?eco=C00\">(C00)</a>\n    &nbsp;<b>·</b>&nbsp; 0-1\n</font>","import { Injectable, Output, Input } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport {  BoardTheme } from '../canvas-chessboard/types';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ColorService {\n  // DEFAULTING TO DARK COLOR PALLETE\n  // Main Elements (background, sub containers, context menu)\n  @Input() @Output() readonly textColor = 'white'; // Main Text Color\n  @Input() @Output() readonly textColorAttention = 'purple'; // Attention text\n  @Input() @Output() readonly textColorRemove = 'red'; // Remove/Delete/Close\n  @Input() @Output() readonly textColorAdd = 'green'; // Add/Create/Open\n  @Input() @Output() readonly textColorActive = 'light-blue'; // Add/Create/Open\n  @Input() @Output() readonly background = '#434343'; // Main background Color\n  @Input() @Output() readonly bgContainer = '#353535'; // background of Containers\n  @Input() @Output() readonly bgMenu = '#353535'; // background of Menus\n  @Input() @Output() readonly bgItem = '#353535'; // background of containers\n\n  // Context menu\n  @Input() readonly bgContext = '#CC9966';\n  @Input() readonly textColorContext = 'white';\n  @Input() readonly borderContext = 'solid black 1px';\n  @Input() readonly overlayContextBackground = 'rgb(199,199,199)';\n  @Input() readonly overlayContextBackgroundGradient =\n    'linear-gradient(153deg, rgba(199,199,199,0.9051995798319328) 41%, rgba(249,249,249,0.8911939775910365) 83%)';\n\n  // Control Elements (Buttons, sliders, number wheels, toggle switches)\n  @Input() @Output() readonly fgItem = '#00ffffff';\n  @Input() @Output() readonly fgItemContrast = '#e25400';\n\n  // Board Colors\n  @Input() @Output() readonly boardBGDark = new BehaviorSubject<string>(\n    '#81388f'\n  );\n  @Input() @Output() readonly boardBGLight = new BehaviorSubject<string>(\n    '#e0fffb'\n  );\n  @Input() @Output() readonly boardPieceSet = new BehaviorSubject<string>(\n    '../../assets/images/pieces/merida/'\n  );\n\n  // Game Score Variables\n  @Input() @Output() readonly gsTextColor = new BehaviorSubject<string>(\n    'white'\n  );\n  @Input() @Output() readonly gsBackground = new BehaviorSubject<string>(\n    '#353535'\n  );\n  @Input() @Output() readonly gsBorder = new BehaviorSubject<string>('');\n  @Input() @Output() readonly gsTextSize = new BehaviorSubject<string>('16px');\n\n  // Game Score Highlight Colors\n  @Input() @Output() readonly gsTextColorHG = new BehaviorSubject<string>(\n    'orange'\n  );\n  @Input() @Output() readonly gsBackgroundHG = new BehaviorSubject<string>(\n    '#353535'\n  );\n  @Input() @Output() readonly gsBorderHG = new BehaviorSubject<string>(\n    ''\n  );\n\n  // Game Score Annotation Colors\n  @Input() @Output() readonly gsTextColorAN = new BehaviorSubject<string>(\n    '#AED6F1'\n  );\n  @Input() @Output() readonly gsBackgroundAN = new BehaviorSubject<string>(\n    '#333333'\n  );\n  @Input() @Output() readonly gsBorderAN = new BehaviorSubject<string>(\n    ''\n  );\n  @Input() @Output() readonly gsTextSizeAN = new BehaviorSubject<string>('16px');\n\n  // Game Score Variation Colors\n  @Input() @Output() readonly gsTextColorVA = new BehaviorSubject<string>(\n    'white'\n  );\n  @Input() @Output() readonly gsBackgroundVA = new BehaviorSubject<string>(\n    '#353535'\n  );\n  @Input() @Output() readonly gsBorderVA = new BehaviorSubject<string>(\n    'black 1px solid'\n  );\n\n  // Game Score Ply Count\n  @Input() @Output() readonly gsTextColorPC = new BehaviorSubject<string>(\n    'white'\n  );\n  @Input() @Output() readonly gsBackgroundPC = new BehaviorSubject<string>(\n    '#353535'\n  );\n  @Input() @Output() readonly gsBorderPC = new BehaviorSubject<string>(\n    ''\n  );\n\n  @Output() propertyMap = new Map<BehaviorSubject<string>, string>();\n  // Menu specific Colors\n\n  // Title Colors\n  constructor() {\n    this.propertyMap.set(this.gsTextColorPC, '--gsTextColorPC');\n    this.propertyMap.set(this.gsBackgroundPC, '--gsBackgroundPC');\n    this.propertyMap.set(this.gsBorderPC, '--gsBorderPC');\n    this.propertyMap.set(this.gsTextColorVA, '--gsTextColorVA');\n    this.propertyMap.set(this.gsBackgroundVA, '--gsBackgroundVA');\n    this.propertyMap.set(this.gsBorderVA, '--gsBorderVA');\n    this.propertyMap.set(this.gsTextColorAN, '--gsTextColorAN');\n    this.propertyMap.set(this.gsBackgroundAN, '--gsBackgroundAN');\n    this.propertyMap.set(this.gsBorderAN, '--gsBorderAN');\n    this.propertyMap.set(this.gsTextColorHG, '--gsTextColorHG');\n    this.propertyMap.set(this.gsBackgroundHG, '--gsBackgroundHG');\n    this.propertyMap.set(this.gsBorderHG, '--gsBorderHG');\n    this.propertyMap.set(this.gsTextColorHG, '--gsTextColorHG');\n    this.propertyMap.set(this.gsBackgroundHG, '--gsBackgroundHG');\n    this.propertyMap.set(this.gsBorderHG, '--gsBorderHG');\n    this.boardBGDark.subscribe((dark)=>{\n      document.documentElement.style.setProperty(\n        '--boardBGDark',\n        dark\n      );\n    });\n    this.boardBGLight.subscribe((light)=>{\n      document.documentElement.style.setProperty(\n        '--boardBGLight',\n        light\n      );\n    });\n  }\n\n\n  boardTheme(): BoardTheme {\n    return new BoardTheme(\n      this.boardBGLight.value,\n      this.boardBGDark.value,\n      this.boardPieceSet.value\n    );\n  }\n\n  setDarkColorPalette(): void { }\n\n  setLightColorPalette(): void { }\n\n  setStoredColorPalette(): void {\n    // 1.) Read User color palette sent from CG.com\n    // 2.) Look for a cookie on disk (load from disk)\n    // 3.) User default CSS Styled color palette\n  }\n\n  initializeColorPalette(): void {\n    // Main Elements\n    document.documentElement.style.setProperty('--textCoolor', this.textColor);\n    document.documentElement.style.setProperty(\n      '--itextColorAttention',\n      this.textColorAttention\n    );\n    document.documentElement.style.setProperty(\n      '--textColorRemove',\n      this.textColorRemove\n    );\n    document.documentElement.style.setProperty(\n      '--textColorAdd',\n      this.textColorAdd\n    );\n    document.documentElement.style.setProperty(\n      '--textColorActive',\n      this.textColorActive\n    );\n    document.documentElement.style.setProperty('--background', this.background);\n    document.documentElement.style.setProperty('--bgItem', this.bgItem);\n    document.documentElement.style.setProperty(\n      '--bgContainer',\n      this.bgContainer\n    );\n    document.documentElement.style.setProperty('--bgMenu', this.bgMenu);\n\n    // Context Menu\n    document.documentElement.style.setProperty('--bgContext', this.bgContext);\n    document.documentElement.style.setProperty(\n      '--overlayContextBackground',\n      this.overlayContextBackground\n    );\n    document.documentElement.style.setProperty(\n      '--textColorContext',\n      this.textColorContext\n    );\n    document.documentElement.style.setProperty('--bgContext', this.bgContext);\n    document.documentElement.style.setProperty(\n      '--overlayContextBackgroundGradient',\n      this.overlayContextBackgroundGradient\n    );\n    document.documentElement.style.setProperty(\n      '--borderContext',\n      this.borderContext\n    );\n\n    // Game Score\n    document.documentElement.style.setProperty('--gsBackground', this.gsBackground.value);\n    document.documentElement.style.setProperty(\n      '--gsTextColor',\n      this.gsTextColor.value\n    );\n    document.documentElement.style.setProperty(\n      '--gsTextSize',\n      this.gsTextSize.value\n    );\n    document.documentElement.style.setProperty(\n      '--gsBackground',\n      this.gsBackground.value\n    );\n    document.documentElement.style.setProperty(\n      '--gsBorder',\n      this.gsBorder.value\n    );\n    document.documentElement.style.setProperty(\n      '--boardBGDark',\n      this.boardBGDark.value\n    );\n    this.propertyMap.forEach((value, key) => {\n      document.documentElement.style.setProperty(\n        value,\n        key.value\n      );\n    })\n  }\n}\n","import { Injectable, ElementRef } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Olga } from '../app.component';\nimport { GamescoreUxComponent } from '../game-score/game-score.ux';\nimport { CanvasChessBoard } from '../canvas-chessboard/canvas-chessboard.component';\nimport { SettingsMenuComponent } from '../settings/settings-menu/settings-menu.component';\n\nexport declare type Layout = 'auto' | 'landscape' | 'portrait';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LayoutService {\n  readonly landscapeOrientation = new BehaviorSubject<boolean>(true);\n  readonly mobileView = new BehaviorSubject<boolean>(false);\n  readonly boardSize = new BehaviorSubject<number>(480);\n  readonly scoreSize = new BehaviorSubject<number>(340);\n  olga: Olga | null = null;\n  appContainer: ElementRef | null = null;\n  gameScore: GamescoreUxComponent | null = null;\n  board: CanvasChessBoard | null = null;\n  resizeElement: HTMLElement | null = null;\n  preferredLayout: Layout = 'auto';\n  preferredRatioLandscape = 0.3;\n  preferredRatioPortrait = 0.4;\n  public gameScoreElement: HTMLElement | null = null;\n  public boardElement: HTMLElement | null = null;\n  public controlsElement: HTMLElement | null = null;\n  public statusElement: HTMLElement | null = null;\n  public settingsMenuElement: HTMLElement | null = null;\n  public settingsMenuComponent: SettingsMenuComponent | null = null;\n  boardRatio = 1;\n  constructor() { }\n\n  private rtl(width: number, height: number, gsSize?: number) {\n    if (this.mobileView.value) {\n      // perform mobile setup\n      //this.olga.rtlComponentsMobile(width, height, gsSize)\n    } else {\n      // prepare desktop view\n      // determine the size of Olga and preferred ratio (unless we have already )\n      //this.olga.rtlComponents(width, height, gsSize)\n    }\n  }\n\n  private rtp(width: number, height: number, gsSize?: number) {\n    if (this.mobileView.value) {\n      // perform mobile setup\n      //this.olga.rtpComponentsMobile(width, height, gsSize)\n    } else {\n      // prepare desktop view\n      //this.olga.rtpComponents(width, height, gsSize)\n    }\n  }\n\n  public openSettings(): void {\n    if(this.settingsMenuComponent){\n      this.settingsMenuComponent.open();\n      // @ts-ignore\n      this.settingsMenuElement.style.visibility = 'visible';\n    }\n  }\n\n  public closeSettings(): void {\n    if(this.settingsMenuComponent){\n      this.settingsMenuComponent.close();\n      // @ts-ignore\n      this.settingsMenuElement.style.visibility = 'hidden';\n    }\n  }\n\n\n  private resizeToLandscape(width: number, height: number, gsSize?: number) {\n    if (\n      this.olga &&\n      this.gameScoreElement &&\n      this.controlsElement &&\n      this.statusElement &&\n      this.settingsMenuComponent\n    ) {\n      let boardSize = 0;\n      const titleSize = 80;\n      if (this.resizeElement) {\n        this.resizeElement.style.left = '-10px';\n        this.resizeElement.style.top = 'calc(50% - 3em)';\n        this.resizeElement.style.width = '1.2em';\n        this.resizeElement.style.height = '6em';\n      }\n      if (!gsSize) {\n        let padding = width * 0.05;\n        if (padding >= 16 || padding <= 10) {\n          padding = 12;\n        }\n        boardSize = Math.floor((1 - this.preferredRatioLandscape) * width);\n        if (boardSize > height) {\n          boardSize = height - padding / 2;\n        }\n        let controlsHeight = boardSize / 7;\n        controlsHeight = controlsHeight > 62 ? 62 : controlsHeight;\n        let gsWidth = width - boardSize - padding;\n        this.board?.setSize(boardSize);\n        let gsHeight = boardSize - 200 - controlsHeight;\n        // game score\n        this.gameScoreElement.style.left = '';\n        this.gameScoreElement.style.top = titleSize + 2 + 'px'; // 64 represents the controls ux\n        this.gameScoreElement.style.width = gsWidth + 'px';\n        this.gameScoreElement.style.height = gsHeight + 'px';\n        // controls\n        this.controlsElement.style.left = '';\n        this.controlsElement.style.top =\n          (gsHeight + (titleSize + 10)).toString() + 'px'; // 64 represents the\n        this.controlsElement.style.width = (gsWidth - 2).toString() + 'px';\n        this.controlsElement.style.height = controlsHeight + 'px';\n        this.controlsElement.style.right = '1px';\n        this.statusElement.style.left = '';\n        this.statusElement.style.top =\n          (gsHeight + titleSize + controlsHeight + 62).toString() + 'px'; // 64 represents the\n        this.statusElement.style.width = gsWidth.toString() + 'px';\n        this.statusElement.style.height = controlsHeight + 'px';\n        this.statusElement.style.right = '1px';\n        this.scoreSize.next(gsWidth);\n      } else {\n        //this.preferredRatio = width / gsSize;\n        let padding = width * 0.02;\n        if (padding < 18) {\n          padding = 18;\n        }\n        const widthAvailable = window.innerWidth - (gsSize + padding);\n        boardSize = Math.floor(widthAvailable / 8) * 8;\n        if (boardSize >= window.innerHeight) {\n          boardSize = Math.floor((window.innerHeight - 16) / 8) * 8;\n          gsSize = window.innerWidth - boardSize + padding;\n        }\n        this.board?.setSize(boardSize);\n        let controlsHeight = boardSize / 7;\n        controlsHeight = controlsHeight > 62 ? 62 : controlsHeight;\n        let gsHeight = boardSize - 200 - controlsHeight;\n        // game score\n        this.gameScoreElement.style.left = '';\n        this.gameScoreElement.style.top = titleSize + 2 + 'px'; // 64 represents the controls ux\n        this.gameScoreElement.style.width = gsSize + 'px';\n        this.gameScoreElement.style.height = gsHeight + 'px';\n        this.gameScoreElement.style.overflow = 'visible';\n        // controls\n        this.controlsElement.style.left = '';\n        this.controlsElement.style.top =\n          (gsHeight + titleSize + 34).toString() + 'px'; // 64 represents the\n        this.controlsElement.style.width = (gsSize - 2).toString() + 'px';\n        this.controlsElement.style.right = '1px';\n        this.statusElement.style.left = '';\n        this.statusElement.style.top =\n          (gsHeight + titleSize + controlsHeight + 62).toString() + 'px'; // 64 represents the\n        this.statusElement.style.width = gsSize.toString() + 'px';\n        this.statusElement.style.right = '1px';\n        this.scoreSize.next(gsSize);\n      }\n      if(this.settingsMenuComponent && this.settingsMenuComponent.visible) {\n        this.settingsMenuComponent.resize(width, height);\n      }\n      this.boardSize.next(boardSize);\n    }\n  }\n  private resizeToPortrait(width: number, height: number, gsSize?: number) {\n    if (this.olga) {\n      const boardSize = width * this.boardRatio - 6;\n      this.board?.setSize(boardSize);\n      if (this.statusElement) {\n        this.statusElement.style.top = (boardSize - 32).toString() + 'px'; // 64 represents the controls ux\n        this.statusElement.style.left = 'calc(1% - 1px)';\n        this.statusElement.style.width = '98%';\n        this.statusElement.style.height = '52px';\n      }\n      if (this.boardElement) {\n        this.boardElement.style.left =\n          width * ((1 - this.boardRatio) / 2) + 'px';\n      }\n      if (this.gameScoreElement) {\n        this.gameScoreElement.style.top = boardSize + 129 + 'px'; // 64 represents the controls ux\n        this.gameScoreElement.style.left = 'calc(1% - 1px)';\n        this.gameScoreElement.style.width = 'calc(98%  + 2px)';\n        // MUST MOVE TO DYNAMICALLY RESIZING TO GAME SCORE\n        this.gameScoreElement.style.height = height * .55 + 'px';\n        this.gameScoreElement.style.overflow = 'visible ';\n        //  (boardSize / 3 > 425 ? 425 : boardSize / 3).toString() + 'px';\n      }\n      if (this.controlsElement) {\n        this.controlsElement.style.top =\n          (boardSize + 30).toString() + 'px'; // 64 represents the controls ux\n        this.controlsElement.style.left = 'calc(1% - 1px)';\n        this.controlsElement.style.width = '98%';\n        this.controlsElement.style.height = '99px';\n      }\n      if (this.resizeElement) {\n        this.resizeElement.style.left = 'calc(50% - 3em)';\n        this.resizeElement.style.top = '-4px';\n        this.resizeElement.style.width = '6em';\n        this.resizeElement.style.height = '1.2em';\n      }\n      if(this.settingsMenuComponent && this.settingsMenuComponent.visible) {\n        this.settingsMenuComponent.resize(width, height);\n      }\n    }\n  }\n  initializeLayout(olga: Olga, autoResize = true): void {\n    this.olga = olga;\n    this.gameScore = olga.gameScoreComponent;\n    this.board = olga.canvasBoardComponent;\n    this.settingsMenuComponent = olga.settingsMenuComponent;\n    this.appContainer = olga.appContainer;\n    if (autoResize) {\n      window.removeEventListener('resize', this.resizeLayout.bind(this));\n      window.addEventListener('resize', this.resizeLayout.bind(this));\n    }\n    this.resizeLayout();\n    window.setTimeout(() => {\n      this.resizeLayout();\n    }, 250);\n  }\n\n  public increaseBoardSize(): void {\n    if(this.preferredRatioLandscape > .3) {\n      this.preferredRatioLandscape -= .025;\n    }\n    if(this.preferredRatioPortrait > .3) {\n      this.preferredRatioPortrait -= .025;\n    }\n    this.resizeLayout();\n  }\n\n  public decreaseBoardSize(): void {\n    if(this.preferredRatioLandscape < .7) {\n      this.preferredRatioLandscape += .025;\n    }\n    if(this.preferredRatioPortrait < .7) {\n      this.preferredRatioPortrait += .025;\n    }\n    this.resizeLayout();\n  }\n\n  onSliderTouch(event: TouchEvent): void {\n    if (\n      event.touches.length > 0 &&\n      this.landscapeOrientation &&\n      event &&\n      event.touches[0].clientX > 64\n    ) {\n      if (this.olga && this.appContainer) {\n        let gsSize = window.innerWidth - event.touches[0].clientX;\n        const width = this.appContainer.nativeElement.clientWidth;\n        const height = this.appContainer.nativeElement.clientHeight;\n\n        switch (this.preferredLayout) {\n          case 'auto': {\n            if (width > height) {\n              this.resizeToLandscape(width, height, gsSize);\n            } else {\n              this.resizeToPortrait(width, height, gsSize);\n            }\n            break;\n          }\n          case 'landscape': {\n            this.resizeToLandscape(width, height, gsSize);\n            break;\n          }\n          case 'portrait': {\n            this.resizeToPortrait(width, height, gsSize);\n            break;\n          }\n        }\n      }\n    } else {\n      if (\n        !this.landscapeOrientation &&\n        event &&\n        event.touches[0].clientY > 64\n      ) {\n        if (this.olga && this.appContainer) {\n          let gsSize = window.innerHeight - event.touches[0].clientY;\n          const width = this.appContainer.nativeElement.clientWidth;\n          const height = this.appContainer.nativeElement.clientHeight;\n          switch (this.preferredLayout) {\n            case 'auto': {\n              if (width > height) {\n                this.resizeToLandscape(width, height, gsSize);\n              } else {\n                this.resizeToPortrait(width, height, gsSize);\n              }\n              break;\n            }\n            case 'landscape': {\n              this.resizeToLandscape(width, height, gsSize);\n              break;\n            }\n            case 'portrait': {\n              this.resizeToPortrait(width, height, gsSize);\n              break;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  onSliderDrag(event: DragEvent): void {\n    if (this.landscapeOrientation && event && event.clientX > 64) {\n      if (this.olga && this.appContainer) {\n        let gsSize = window.innerWidth - event.clientX;\n        const width = this.appContainer.nativeElement.clientWidth;\n        const height = this.appContainer.nativeElement.clientHeight;\n\n        switch (this.preferredLayout) {\n          case 'auto': {\n            if (width > height) {\n              this.resizeToLandscape(width, height, gsSize);\n            } else {\n              this.resizeToPortrait(width, height, gsSize);\n            }\n            break;\n          }\n          case 'landscape': {\n            this.resizeToLandscape(width, height, gsSize);\n            break;\n          }\n          case 'portrait': {\n            this.resizeToPortrait(width, height, gsSize);\n            break;\n          }\n        }\n      }\n    } else {\n      if (!this.landscapeOrientation && event && event.clientY > 64) {\n        if (this.olga && this.appContainer) {\n          let gsSize = window.innerHeight - event.clientY;\n          const width = this.appContainer.nativeElement.clientWidth;\n          const height = this.appContainer.nativeElement.clientHeight;\n          switch (this.preferredLayout) {\n            case 'auto': {\n              if (width > height) {\n                this.resizeToLandscape(width, height, gsSize);\n              } else {\n                this.resizeToPortrait(width, height, gsSize);\n              }\n              break;\n            }\n            case 'landscape': {\n              this.resizeToLandscape(width, height, gsSize);\n              break;\n            }\n            case 'portrait': {\n              this.resizeToPortrait(width, height, gsSize);\n              break;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  resizeLayout(): void {\n    if (!this.appContainer) {\n      console.log('Invalid (Null) App Container %$@');\n    } else {\n      const width = this.appContainer.nativeElement.clientWidth;\n      const height = this.appContainer.nativeElement.clientHeight;\n      switch (this.preferredLayout) {\n        case 'auto': {\n          if (width > height) {\n            this.resizeToLandscape(width, height);\n          } else {\n            this.resizeToPortrait(width, height);\n          }\n          break;\n        }\n        case 'landscape': {\n          this.resizeToLandscape(width, height);\n          break;\n        }\n        case 'portrait': {\n          this.resizeToPortrait(width, height);\n          break;\n        }\n      }\n    }\n  }\n}\n","import { Injectable, Output, Input } from '@angular/core';\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { GameScoreAnnotation, GameScoreVariation, GameScoreItem, ChessGame, GameScoreType, ChessMove } from '../common/kokopu-engine';\nimport { CanvasChessBoard } from '../canvas-chessboard/canvas-chessboard.component';\nimport { GamescoreUxComponent } from '../game-score/game-score.ux';\nimport { OlgaStatusComponent } from '../olga-status/olga-status.component';\n// @ts-ignore\nimport {Node as KNode, Variation as KVariation } from 'kokopu';\nimport { SettingsMenuComponent } from '../settings/settings-menu/settings-menu.component';\nimport { OlgaControlsComponent } from '../olga-controls/olga-controls.component';\n@Injectable({\n  providedIn: 'root'\n})\nexport class OlgaService {\n  @Output() readonly annotations = new BehaviorSubject<GameScoreAnnotation[]>([]);\n  @Output() readonly showingPly = new BehaviorSubject<boolean>(true);\n  @Output() readonly showingHalfPly = new BehaviorSubject<boolean>(false);\n  protected autoIntervalID = -1;\n  protected timeLeft = 600;\n  public UUID: string = '';\n  @Input() @Output() readonly figurineNotation = new BehaviorSubject<boolean>(\n    false\n  );\n  @Output() readonly scoreFontFamily = new BehaviorSubject<string>('Caveat');\n  @Output() readonly scoreFontSize = new BehaviorSubject<number>(18);\n  @Output() readonly figurineSize = new BehaviorSubject<number>(20);\n  \n\n  private _fen = new BehaviorSubject<string>('');\n  readonly fen = this._fen.asObservable();\n\n  private _games: ChessGame[] = [];\n  private gameSubscriptions: Subscription[] = [];\n  private _game: ChessGame | null = null;\n\n  private _board: CanvasChessBoard | null = null;\n  private _score: GamescoreUxComponent | null = null;\n  private _status: OlgaStatusComponent | null = null;\n  private _controls: OlgaControlsComponent | null = null;\n  readonly isVariant = new BehaviorSubject<boolean>(false);\n\n\n  public navigateToItem(item: GameScoreItem, isBlack = false) {\n    this._game?.navigateToNode(item.getIndex());\n  }\n\n  // Visual Settings\n  constructor() { \n    this.figurineNotation.subscribe((figurineNotation: boolean) => {\n      if (figurineNotation) {\n        this.scoreFontFamily.next('FigurineSymbolT1');\n      } else {\n        this.scoreFontFamily.next('Cambria');\n      }\n    });\n  }\n\n  public moveToStart(): void {\n    if (this._game) {\n      this._game.moveToStart();\n    }\n  }\n  public advance(): void {\n    if (this._game) {\n      this._game.advance();\n    }\n  }\n  public previous(): void {\n    if (this._game) {\n      this._game.previous();\n    }\n  }\n  public moveToEnd(): void {\n    if (this._game && !this._game.isFinalPosition()) {\n      this._game.moveToEnd();\n    }\n  }\n\n  public getNodeIndex(): number {\n    if(this._game) {\n      return this._game.getNodeIndex();\n    }\n    return -1;\n  }\n  \n  protected autoAdvance():void {\n    this.timeLeft -= 100;\n    if(this._controls) {\n      this._controls.setTimer(this.timeLeft);\n    }\n    if(this.timeLeft <= 0) {\n      if(this._game && !this._game.isFinalPosition()){\n        this.advance();\n      } else {\n        this.toggleAutoPlay();\n      }\n      this.timeLeft = 600;\n    }\n  }\n\n  public toggleAutoPlay():void {\n    \n    if(this._game && !this._game.isFinalPosition() && this.autoIntervalID == -1) {\n      this.autoIntervalID = window.setInterval(this.autoAdvance.bind(this), 100);\n      if(this._controls) {\n        this._controls.playing = true;\n      }\n    } else {\n      window.clearInterval(this.autoIntervalID);\n      this.autoIntervalID = -1;\n      this.timeLeft = 600;\n      if(this._controls) {\n      this._controls.setTimer(600);\n        this._controls.playing = false;\n      }\n    }\n  }\n\n  public openEngine(): void { }\n\n  public toggleGameScoreViewType(): void {\n\n  }\n\n  public loadPGN(pgn: string) {\n    this._games = ChessGame.parsePGN(this, pgn);\n    if(this._games.length > 0){\n      const game = this._games[0];\n      this._game = game;\n      window.setTimeout( () => {\n        this._score?.setGameScoreItems(this._game?.generateGameScore());\n      }, 1);\n    }\n  }\n\n  public clearItems(): void {\n    if(this._score) {\n      this._score._items = [];\n    }\n  }\n\n  public typeToString(type: GameScoreType): string {\n    return GameScoreType[type];\n  }\n\n  public selectGame(index: number) {\n    if (index >= 0 && index <= this._games.length && this._score) {\n      this._game = this._games[index];\n      this._score._items = this._game.generateGameScore();\n    }\n  }\n\n  public initializeComponents():void{}\n\n  public attachBoard(board: CanvasChessBoard) {\n    this._board = board;\n  }\n\n  public attachScore(score: GamescoreUxComponent) {\n    this._score = score;\n  }\n\n  public attachStatus(status: OlgaStatusComponent) {\n    this._status = status;\n  }\n\n  public attachControls(controls: OlgaControlsComponent) {\n    this._controls = controls;\n  }\n\n  public editComment(data: GameScoreItem): void {\n    console.log('Editing Comment -> ' + data.move.comment());\n  }\n\n  public openVariation(data: GameScoreItem): void {\n    const variations = data.move.variations();\n    if(this._score && variations && variations.length) {\n      console.log('Editing Variations on: ' + data.move.notation());\n      console.log(variations);\n      this._score.scoreItemMenu?.openAt(data);\n    }\n  }\n\n  public displayVariations(data: GameScoreItem): void {\n    console.log('Displaying Variations');\n    console.log(data.move.notation());\n    const variations = data.move.variations();\n    variations.forEach((variation: KVariation) =>{\n      console.log(variation);\n      let current = variation.first();\n      const previous = data.previous();\n      if(current) {\n        console.log('Variation chain :');\n        let chain = current.notation();\n        if(previous) {\n          chain = previous.move.notation() + '->' + chain;\n        }\n        while(current){\n          current = current.next();\n          if(current) {\n            chain += '->'+ current.notation();\n          }\n        }\n        console.log(chain);\n      }\n    });\n    console.log(variations);\n  }\n\n\n\n  // Board interface\n\n  public redrawBoard(): void {\n    this._board?.setBoardToGamePosition();\n  }\n\n  public updateStatus(turn: string, last?: KNode): void {\n    this._status?.updateStatus(turn, last);\n  }\n\n  public isVariantChanged(isVariant: boolean): void {\n    this.isVariant.next(isVariant);\n  }\n\n  public makeBoardMove(move: ChessMove): void {\n    this._board?.makeMove(move);\n  }\n\n  public showPromotionDialog(move: ChessMove): void {\n    this._board?.showPromotionDialog(move);\n  }\n\n  public updateGameScoreSelection(): void {\n    this._score?.updateSelection();\n  }\n\n  public gameScoreItemsChanged(items: GameScoreItem[]): void {\n    this._score?.setGameScoreItems(items);\n  }\n\n  unmakeBoardMove(move: ChessMove): void {\n    this._board?.unMakeMove(move);\n  }\n\n  public validGame(): boolean {\n    return this._game !== null;\n  }\n\n  public performPromotion(move: ChessMove): void {\n    this._game?.performPromotion(move);\n  }\n\n  public getGame(): ChessGame | null{\n    return this._game;\n  }\n\n  public getBoard(): CanvasChessBoard | null {\n    return this._board;\n  }\n}\n","import { Component, OnInit, AfterViewInit, ViewChild, ElementRef } from '@angular/core';\nimport { OlgaService } from 'src/app/services/olga.service';\nimport { ColorService } from 'src/app/services/colors.service';\nimport { CanvasChessBoard } from '../../canvas-chessboard/canvas-chessboard.component';\n\n@Component({\n  selector: 'board-settings',\n  templateUrl: './settings-board.component.html',\n  styleUrls: ['./settings-board.component.scss']\n})\nexport class SettingsBoardComponent implements OnInit, AfterViewInit {\n  constructor(\n    public olga: OlgaService,\n    public colorService: ColorService\n  ) { }\n  @ViewChild(CanvasChessBoard)\n  settingsBoard: CanvasChessBoard | null = null;\n  @ViewChild('lightBGHandle', { static: true })\n  lightBGHandle: ElementRef | null = null;\n  @ViewChild('darkBGHandle', { static: true })\n  darkBGHandle: ElementRef | null = null;\n  @ViewChild('container', { static: true })\n  container: ElementRef | null = null;\n\n  ngOnInit(): void {\n    const menus = document.getElementsByClassName('settings-content');\n    this.colorService.boardBGDark.subscribe((color) => {\n      this.settingsBoard?.setDarkTile(color);\n    });\n    this.colorService.boardBGLight.subscribe((color) => {\n      this.settingsBoard?.setLightTile(color);\n    });\n  }\n\n  ngAfterViewInit(): void {\n    if (this.lightBGHandle) {\n      this.lightBGHandle.nativeElement.value = this.colorService.boardBGLight.value;\n    }\n    if (this.darkBGHandle) {\n      this.darkBGHandle.nativeElement.value = this.colorService.boardBGDark.value;\n    }\n  }\n\n  updateLight(color: string) {\n    const board = this.olga.getBoard();\n    if (board) {\n      board.setLightTile(color);\n      this.colorService.boardBGLight.next(color);\n    }\n  }\n\n  updateDark(color: string) {\n    const board = this.olga.getBoard();\n    if (board) {\n      board.setDarkTile(color);\n      this.colorService.boardBGDark.next(color);\n    }\n  }\n\n  hide():void {\n    if(this.container) {\n      this.container.nativeElement.style.visibility = 'hidden';\n      if(this.settingsBoard)\n      this.settingsBoard.hide();\n    }\n  }\n  show():void {\n    if(this.container) {\n      this.container.nativeElement.style.visibility = 'visible';\n      if(this.settingsBoard)\n      this.settingsBoard.show();\n    }\n  }\n}\n","<div class=\"settings-container\" #container>\n    <canvas-chessboard class=\"settings-board\" boardID=\"x-1232141\"\n    [theme]=\"this.colorService.boardTheme()\" [size]=640 [tileSize]=80 [interactive]=false>\n</canvas-chessboard>\n    <input #lightBGHandle type=\"color\" id=\"lightColor\" class=\"color-input\" (input)=\"updateLight(lightBGHandle.value)\"\n    (blur)=\"updateLight(lightBGHandle.value)\" />\n    <input #darkBGHandle type=\"color\" id=\"darkColor\" class=\"color-input\" (input)=\"updateDark(darkBGHandle.value)\"\n    (blur)=\"updateDark(darkBGHandle.value)\" />\n</div>","import {\n  Component,\n  OnInit,\n  Output,\n  AfterViewInit,\n  ViewChild,\n  ElementRef,\n} from '@angular/core';\nimport { ColorService } from '../../services/colors.service';\nimport { OlgaService } from 'src/app/services/olga.service';\n\n@Component({\n  selector: 'app-gamescore-settings',\n  templateUrl: './settings-gamescore.component.html',\n  styleUrls: ['./settings-gamescore.component.scss'],\n})\nexport class GamescoreSettingsComponent implements OnInit, AfterViewInit {\n  constructor(\n    public olga: OlgaService,\n    public colorService: ColorService\n  ) { }\n\n  ngOnInit(): void { }\n  ngAfterViewInit(): void {\n\n  }\n}\n","<!-- <mat-card>\n  <mat-card-title>\n    Choose Layout\n  </mat-card-title>\n  <mat-card-subtitle>\n    Settings\n  </mat-card-subtitle>\n  <mat-card-actions>\n    <button mat-raised-button color=\"primary\" >Portrait</button>\n    <button mat-raised-button color=\"primary\" >Landscape</button>\n  </mat-card-actions>\n</mat-card>\n<br/>\n<mat-card >\n  <mat-card-title>\n    Choose Size\n  </mat-card-title>\n  <mat-card-subtitle>\n    Settings\n  </mat-card-subtitle>\n  <mat-card-actions>\n    <button mat-raised-button class=\"blue-button\" >Small</button>\n    <button mat-raised-button class=\"blue-button\" >Medium</button>\n    <button mat-raised-button color=\"primary\" >Large</button>\n    <br/>\n    <label>\n      <input type=\"checkbox\" name=\"my-checkbox\" checked> Select me\n  </label>\n  <label>\n      <input type=\"checkbox\" name=\"my-checkbox\"> Select me\n  </label>\n  </mat-card-actions>\n</mat-card>\n<br/> -->\n<mat-card>\n  <mat-card-title>\n    Colors\n  </mat-card-title>\n  <mat-card-subtitle>\n    Settings\n  </mat-card-subtitle>\n  <mat-card-content>\n\n    <!-- <div>Font Size</div>\n    <mat-slider #scoreFontSize thumbLabel class=\"small-slider\" (input)=\"gameScoreService.scoreFontSize.next(($event.value ? $event.value : 18))\" value=\"18\" min=\"14\" max=\"24\" step=\"1\" color=\"primary\" ></mat-slider>\n    <br/>\n    <label class=\"switch\">\n      <input type=\"checkbox\" #figureNotation (change)=\"gameScoreService.figurineNotation.next(figureNotation.checked)\">\n      <div style=\"font-size:12px; text-align:center;\">Figurine Notation</div>\n    </label>\n    <br/>\n    Font Family\n    <select>\n      <option>Cambria</option>\n      <option>Times New Roman</option>\n    </select> -->\n  </mat-card-content>\n</mat-card>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'settings-general',\n  templateUrl: './settings-general.component.html',\n  styleUrls: ['./settings-general.component.scss']\n})\nexport class SettingsGeneralComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  hide():void {\n    // if(this.container) {\n    //   this.container.nativeElement.style.visibility = 'hidden';\n    //   if(this.settingsBoard)\n    //   this.settingsBoard.hide();\n    // }\n  }\n  show():void {\n    // if(this.container) {\n    //   this.container.nativeElement.style.visibility = 'visible';\n    //   if(this.settingsBoard)\n    //   this.settingsBoard.show();\n    // }\n  }\n}\n","<p>settings-general works!</p>\n","import { AfterViewInit, Component, ElementRef, Input, OnInit, Output, SimpleChanges, ViewChild } from '@angular/core';\n\n\n@Component({\n  selector: 'keymap-item',\n  templateUrl: './keymap-item.component.html',\n  styleUrls: ['./keymap-item.component.scss']\n})\nexport class KeymapItemComponent implements OnInit, AfterViewInit {\n  @Input() icon = '';\n  @Input() label = '';\n  @Input() key = '';\n  @ViewChild(\"svgContainer\", { read: ElementRef }) svgContainer: ElementRef | null = null;\n  @ViewChild(\"labelElement\", { read: ElementRef }) labelElement: ElementRef | null = null;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    console.log('Icon ' + this.icon);\n  }\n\n  ngAfterViewInit(): void {\n    if(this.labelElement) {\n      this.labelElement.nativeElement.innerHTML = this.label;\n    }\n    if(this.svgContainer) {\n      this.svgContainer.nativeElement.innerHTML = '<use xlink:href=\"/assets/images/feather-sprite.svg#' + this.icon + '\" />';\n    }\n  }\n  ngOnChanges(changes: SimpleChanges) {\n    if(this.svgContainer) {\n      this.svgContainer.nativeElement.innerHTML = '<use xlink:href=\"/assets/images/feather-sprite.svg#' + this.icon + '\" />';\n    }\n  }\n}\n","<div class=\"icon\">\n    <svg class=\"feather\" #svgContainer></svg>\n</div>\n<!-- <button mat-raised-button class=\"keymap-button\">{{key}}</button> -->\n<div class=\"keymap-label\" #labelElement></div>","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\n\nexport class FeatherIcons{\n  public static readonly Rewind = '/assets/images/feather-sprite.svg#rewind';\n  public static readonly Forward = '/assets/images/feather-sprite.svg#forward';\n}\n\n@Component({\n  selector: 'settings-keymap',\n  templateUrl: './settings-keymap.component.html',\n  styleUrls: ['./settings-keymap.component.scss']\n})\nexport class SettingsKeymapComponent implements OnInit {\n  public icons = FeatherIcons;\n  @ViewChild('container', {static: false}) container: ElementRef | null = null;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  hide():void {\n    if(this.container) {\n      this.container.nativeElement.style.visibility = 'hidden';\n    }\n  }\n  show():void {\n    if(this.container) {\n      this.container.nativeElement.style.visibility = 'visible';\n    }\n  }\n}\n","<div class=\"settings-container\" #container>\r\n<keymap-item icon=\"rewind\" label=\"Jump to &lt;b&gt;Start of Game&lt;/b&gt;\"></keymap-item>\r\n<keymap-item icon=\"fast-forward\" label=\"Jump to &lt;b&gt;End of Game&lt;/b&gt;\"></keymap-item>\r\n<keymap-item icon=\"chevron-left\" label=\"&lt;b&gt;Previous Move&lt;/b&gt;\"></keymap-item>\r\n</div>","import { Component, OnInit, Input, ElementRef, ViewChild, AfterViewInit } from '@angular/core';\nimport { ColorService } from '../../services/colors.service';\nimport { LayoutService } from '../../services/layout.service';\nimport { CanvasChessBoard } from '../../canvas-chessboard/canvas-chessboard.component';\nimport { MatTabChangeEvent } from '@angular/material/tabs/tab-group';\nimport { OlgaService } from '../../services/olga.service';\nimport { SettingsKeymapComponent } from '../settings-keymap/settings-keymap.component';\nimport { SettingsBoardComponent } from '../settings-board/settings-board.component';\nimport { SettingsGeneralComponent } from '../settings-general/settings-general.component';\n\n@Component({\n  selector: 'settings-menu',\n  templateUrl: './settings-menu.component.html',\n  styleUrls: ['./settings-menu.component.scss']\n})\nexport class SettingsMenuComponent implements OnInit, AfterViewInit {\n  constructor(public colorService: ColorService, public layout: LayoutService, public olga: OlgaService) { }\n  menus: HTMLCollectionOf<HTMLElement> | null = null;\n  @ViewChild(SettingsKeymapComponent)\n  keymapMenu: SettingsKeymapComponent | null = null;\n  @ViewChild(SettingsBoardComponent)\n  boardMenu: SettingsBoardComponent | null = null;\n  @ViewChild(SettingsGeneralComponent)\n  generalMenu: SettingsGeneralComponent | null = null;\n  public visible = false;\n  protected height = 360;\n  protected width = 360;\n  ngOnInit(): void {\n  }\n\n  ngAfterViewInit(): void {\n  }\n\n  open(): void {\n    this.visible = true;\n    if(this.generalMenu) {\n      this.generalMenu.show();\n    }\n    // if(this.boardMenu){\n    //   this.boardMenu.show();\n    // }\n  }\n\n  close(): void {\n    this.visible = false;\n    if(this.keymapMenu) {\n      this.keymapMenu.hide();\n    }\n    if(this.boardMenu){\n      this.boardMenu.hide();\n    }\n  }\n\n  resize(width: number, height: number): void {\n    height = Math.floor(height * .84) - 66;\n    width = Math.floor(width * .9);\n    // Landscape vs Portrait\n    const menus = document.getElementsByClassName('settings-content') as HTMLCollectionOf<HTMLElement>;\n    if (this.boardMenu && this.boardMenu.settingsBoard) {\n      const boardWidth = width * .5;\n      const boardHeight = height * .8;\n      if (boardHeight > boardWidth) {\n        this.boardMenu.settingsBoard.setSize(boardWidth);\n      } else {\n        this.boardMenu.settingsBoard.setSize(boardHeight);\n      }\n    }\n    if (menus) {\n      for (let index = 0; index < menus.length; ++index) {\n        const item = menus.item(index);\n        if (item) {\n          item.style.height = height - 2 + 'px';\n\n        }\n      }\n    }\n    this.height = height;\n    this.width = width;\n  }\n\n  ignoreInnerClicks(event: MouseEvent) {\n    event.stopPropagation();\n  }\n\n  tabChanged(event: MatTabChangeEvent): void {\n    if(this.keymapMenu) {\n      this.keymapMenu.hide();\n    }\n    if(this.boardMenu){\n      this.boardMenu.hide();\n    }\n    if(event.tab) {\n      switch(event.tab.textLabel){\n        case 'Board': {\n          if(this.boardMenu && this.boardMenu.settingsBoard) {\n            const boardWidth = this.width * .5;\n            const boardHeight = this.height * .8;\n            if (boardHeight > boardWidth) {\n              this.boardMenu.settingsBoard.setSize(boardWidth);\n            } else {\n              this.boardMenu.settingsBoard.setSize(boardHeight);\n            }\n            this.boardMenu.show();\n          }\n          break;\n        }\n        case 'Keymap': {\n          if(this.keymapMenu) {\n            this.keymapMenu.show();\n          }\n          break;\n        }\n      }\n    }\n  }\n}\n","<div class=\"settings-window\">\n    <div class=\"settings-background\" (click)=\"ignoreInnerClicks($event)\">\n        <button mat-button-raised class=\"close-button\" (click)=\"layout.closeSettings()\">X</button>\n        <h3 >Settings</h3>\n        <mat-tab-group *ngIf=\"this.visible\"   dynamicHeight=\"true\" mat-align-tabs=\"center\" animationDuration=\"500ms\"\n            (selectedTabChange)=\"tabChanged($event)\">\n            <mat-tab label=\"General\">\n            </mat-tab>\n            <mat-tab label=\"Board\">\n                <!-- <ng-template matTabContent>\n                    <div class=\"settings-content\">\n                        <canvas-chessboard class=\"settings-board\" boardID=\"x-1232141\"\n                            [theme]=\"this.colorService.boardTheme()\" [size]=640 [tileSize]=80 [interactive]=false>\n                        </canvas-chessboard>\n                    </div>\n                </ng-template> -->\n            </mat-tab>\n            <mat-tab label=\"Game Score\">\n            <!--     <ng-template matTabContent>\n                    <div class=\"settings-content\">\n                    </div>\n                </ng-template> -->\n            </mat-tab>\n            <mat-tab label=\"Keymap\">\n            </mat-tab>\n        </mat-tab-group>\n        <settings-keymap></settings-keymap>\n        <board-settings></board-settings>\n    </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"sourceRoot":"webpack:///"}