{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/common/labeled-slider/labeled-slider.component.ts","./src/app/common/labeled-slider/labeled-slider.component.html","./src/app/common/toggle-switch/toggle-switch.component.ts","./src/app/common/toggle-switch/toggle-switch.component.html","./src/app/game-score/game-score-item/game-score-item.component.ts","./src/app/game-score/game-score-item/game-score-item.component.html","./src/app/game-score/game-score.ux.ts","./src/app/game-score/game-score.ux.html","./src/app/game-score/menu-game-score-item/menu-game-score-item.component.ts","./src/app/game-score/menu-game-score-item/menu-game-score-item.component.html","./src/app/olga-board/board-canvas/board-canvas.component.ts","./src/app/olga-board/board-canvas/board-canvas.component.html","./src/app/olga-board/olga-board.component.ts","./src/app/olga-board/olga-board.component.html","./src/app/playermove/playermove.component.ts","./src/app/playermove/playermove.component.html","./src/app/services/colors.service.ts","./src/app/services/engine.service.ts","./src/app/services/game-score.service.ts","./src/app/services/layout.service.ts","./src/app/settings/settings-board/settings-board.component.ts","./src/app/settings/settings-board/settings-board.component.html","./src/app/settings/settings-gamescore/settings-gamescore.component.ts","./src/app/settings/settings-gamescore/settings-gamescore.component.html","./src/app/settings/settings-menu/settings-menu.component.ts","./src/app/settings/settings-menu/settings-menu.component.html","./src/environments/environment.ts","./src/main.ts","jsdom (ignored)","jsdom/lib/jsdom/living/generated/utils (ignored)","jsdom/lib/jsdom/utils (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import {\r\n  Component,\r\n  AfterViewInit,\r\n  ViewChild,\r\n  ElementRef,\r\n  Input,\r\n  Output,\r\n} from '@angular/core';\r\nimport { GamescoreUxComponent } from './game-score/game-score.ux';\r\nimport { OlgaBoardComponent } from './olga-board/olga-board.component';\r\nimport { ColorService } from './services/colors.service';\r\nimport { MatSliderChange } from '@angular/material/slider';\r\nimport { EngineService } from './services/engine.service';\r\nimport { Piece } from 'chessops/types';\r\nimport { LayoutService } from './services/layout.service';\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n})\r\nexport class AppComponent implements AfterViewInit {\r\n  title = 'Olga2';\r\n  @ViewChild(GamescoreUxComponent)\r\n  gameScoreUx: GamescoreUxComponent | null = null;\r\n  @ViewChild(OlgaBoardComponent)\r\n  olgaBoard: OlgaBoardComponent | null = null;\r\n  @ViewChild('olgaContainer')\r\n  olgaContainer: ElementRef | null = null;\r\n  @Input() gameScore: HTMLElement | null = null;\r\n  @Input() olgaID = '12312321';\r\n  @Output() gameScoreWidth: number | null = 389;\r\n  @Output() oldWidth: number | null = 0;\r\n  protected doneResizingScore = false;\r\n  constructor(\r\n    public layoutService: LayoutService,\r\n    public colorService: ColorService,\r\n    public chessEngine: EngineService\r\n  ) {\r\n    const date = new Date();\r\n    this.olgaID = 'OLGA-' + date.getTime().toString();\r\n    console.log('ID: ' + this.olgaID);\r\n  }\r\n\r\n  // tslint:disable-next-line: typedef\r\n  ngAfterViewInit() {\r\n    this.layoutService.initializeLayout(this.olgaContainer);\r\n    this.gameScore = document.getElementById('app-gamescore' + this.olgaID);\r\n    console.log('Got Game Score');\r\n    console.log(this.gameScoreUx);\r\n    this.colorService.initializeColorPalette();\r\n    this.resizeToScreen();\r\n    window.addEventListener('resize', this.resizeToScreen.bind(this));\r\n\r\n    if (this.gameScoreUx) {\r\n      this.gameScoreUx.resizeHandleEvent = this.resizeBoard.bind(this);\r\n    }\r\n  }\r\n  mouseMoved(event: MouseEvent): void {\r\n    if (this.gameScoreUx?.resizing) {\r\n      this.gameScoreUx?.resizeHandleEvent(event);\r\n    }\r\n    if (this.gameScoreUx && event.buttons === 0) {\r\n      this.gameScoreUx.resizing = false;\r\n    }\r\n  }\r\n\r\n  resizeToScreen(): void {\r\n    if (this.olgaBoard && this.gameScoreUx) {\r\n      if (this.layoutService.landscapeOrientation) {\r\n        let boardSize = Math.floor(window.innerWidth * 0.075) * 8;\r\n        if (boardSize >= window.innerHeight) {\r\n          boardSize = Math.floor((window.innerHeight - 8) / 8) * 8;\r\n        }\r\n        let padding = window.innerWidth * 0.05;\r\n        if (padding >= 42 || padding <= 24) {\r\n          padding = 38;\r\n        }\r\n        const gsSize = Math.floor(window.innerWidth - (boardSize + padding));\r\n        this.setBoardSize(boardSize);\r\n        this.setGameScoreSize(gsSize);\r\n      }\r\n    }\r\n  }\r\n\r\n  resizeBoard(event: DragEvent): void {\r\n    if (event && event.clientX > 64) {\r\n      if (this.olgaBoard) {\r\n        let gsSize = window.innerWidth - event.clientX;\r\n        const widthAvailable = window.innerWidth - (gsSize + 28);\r\n        let boardSize = Math.floor(widthAvailable / 8) * 8;\r\n        if (boardSize > window.innerHeight) {\r\n          boardSize = Math.floor((window.innerHeight - 16) / 8) * 8;\r\n          gsSize = window.innerWidth - boardSize + 28;\r\n        }\r\n        if (gsSize <= 100) {\r\n          boardSize -= 100 - gsSize;\r\n          gsSize = 100;\r\n        }\r\n        this.setBoardSize(boardSize);\r\n        this.setGameScoreSize(gsSize);\r\n      }\r\n    }\r\n  }\r\n  setBoardSize(size: number): void {\r\n    if (this.olgaBoard) {\r\n      this.olgaBoard.setBoardSize(size);\r\n    }\r\n  }\r\n  setGameScoreSize(size: number): void {\r\n    this.gameScoreWidth = size;\r\n    if (this.gameScoreUx) {\r\n      this.gameScoreUx.setWidth(this.gameScoreWidth);\r\n    }\r\n  }\r\n  ignoreEvent(event: MouseEvent): void {\r\n    console.log('Ignoring ' + event);\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n  }\r\n}\r\n","<div #olgaContainer id=\"{{ this.olgaID }}-olga-container\" class=\"olga-container\" (mousemove)=\"mouseMoved($event)\">\r\n  <app-olga-board #olgaBoard [UUID]=\"this.olgaID\"></app-olga-board>\r\n  <app-game-score-ux (contextmenu)=\"ignoreEvent($event)\" #gameScoreItem [style.width.px]=\"gameScoreWidth\"\r\n    [scoreWidth]=\"gameScoreWidth\">\r\n  </app-game-score-ux>\r\n  <app-gamescore-settings #gameScore></app-gamescore-settings>\r\n  <button mat-button class=\"fenbutton\" (click)=\"\r\n      olgaBoard.setFen(\r\n        'rnbqkbnr/pp1ppppp/8/2p5/4P3/5N2/PPPP1PPP/RNBQKB1R b KQkq - 1 2'\r\n      )\r\n    \">\r\n    Set Fen\r\n  </button>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { GamescoreSettingsComponent } from './settings/settings-gamescore/settings-gamescore.component';\r\nimport { GamescoreUxComponent } from './game-score/game-score.ux';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { PlayermoveComponent } from './playermove/playermove.component';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { GameScoreItemComponent } from './game-score/game-score-item/game-score-item.component';\r\nimport { ColorService } from './services/colors.service';\r\nimport { ToggleSwitchComponent } from './common/toggle-switch/toggle-switch.component';\r\nimport { LabeledSliderComponent } from './common/labeled-slider/labeled-slider.component';\r\nimport { SettingsMenuComponent } from './settings/settings-menu/settings-menu.component';\r\nimport { OlgaBoardComponent } from './olga-board/olga-board.component';\r\nimport { SettingsBoardComponent } from './settings/settings-board/settings-board.component';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MenuGameScoreItemComponent } from './game-score/menu-game-score-item/menu-game-score-item.component';\r\n\r\nimport { GameScoreService } from './services/game-score.service';\r\nimport { EngineService } from './services/engine.service';\r\nimport { LayoutService } from './services/layout.service';\r\nimport { BoardCanvasComponent } from './olga-board/board-canvas/board-canvas.component';\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    GamescoreSettingsComponent,\r\n    OlgaBoardComponent,\r\n    GamescoreUxComponent,\r\n    GameScoreItemComponent,\r\n    PlayermoveComponent,\r\n    ToggleSwitchComponent,\r\n    LabeledSliderComponent,\r\n    SettingsMenuComponent,\r\n    SettingsBoardComponent,\r\n    MenuGameScoreItemComponent,\r\n    BoardCanvasComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatDividerModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatGridListModule,\r\n    MatMenuModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatTabsModule,\r\n  ],\r\n  providers: [LayoutService, ColorService, EngineService, GameScoreService],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { Component, OnInit, Input } from '@angular/core';\nimport {  } from '@angular/material/slider';\n@Component({\n  selector: 'app-labeled-slider',\n  templateUrl: './labeled-slider.component.html',\n  styleUrls: ['./labeled-slider.component.scss']\n})\nexport class LabeledSliderComponent implements OnInit {\n  @Input() value = 18;\n  @Input() minimum = 14;\n  @Input() maximum = 24;\n  @Input() step = 1;\n  @Input() label = 'labeled slider';\n\n  constructor() { }\n\n  ngOnInit(): void {\n\n  }\n\n  inputEventCapture(event: any): void {\n    console.log(event);\n  }\n\n}\n","<mat-slider #scoreFontSize thumbLabel class=\"ls-slider\" (input)=\"inputEventCapture($event)\" [value]=\"value\" [min]=\"minimum\" [max]=\"maximum\" [step]=\"step\"></mat-slider>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-toggle-switch',\n  templateUrl: './toggle-switch.component.html',\n  styleUrls: ['./toggle-switch.component.scss']\n})\nexport class ToggleSwitchComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>toggle-switch works!</p>\n","import { Component, OnInit, Input, AfterViewInit } from '@angular/core';\nimport { GameScoreType, GameScoreService, GameScoreItem } from '../../services/game-score.service';\n\n@Component({\n  selector: 'app-game-score-item',\n  templateUrl: './game-score-item.component.html',\n  styleUrls: ['./game-score-item.component.scss']\n})\nexport class GameScoreItemComponent implements OnInit, AfterViewInit {\n  @Input() data: GameScoreItem | null = null;\n  @Input() type = GameScoreType.GameScoreGroup;\n  @Input() typeName = '';\n  constructor(public gameScoreService: GameScoreService)\n  {\n    this.typeName = this.gameScoreService.typeToString(this.type);\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngAfterViewInit(): void {\n\n  }\n\n}\n","<div class=\"gsi-container {{typeName}}\">\r\n  <div class=\"gsi-ply {{typeName}}\">{{this.data?.moveData?.ply}}</div>{{this.data?.moveData?.move}}\r\n</div>","import {\n  Component,\n  OnInit,\n  ChangeDetectionStrategy,\n  Input,\n  Output,\n  AfterViewInit,\n  ViewChild,\n  ElementRef,\n} from '@angular/core';\nimport {\n  trigger,\n  state,\n  style,\n  animate,\n  transition,\n  // ...\n} from '@angular/animations';\nimport {\n  GameScoreService,\n  GameScoreItem,\n} from '../services/game-score.service';\nimport { MenuGameScoreItemComponent } from './menu-game-score-item/menu-game-score-item.component';\ninterface Move {\n  w: string;\n  b: string;\n}\n\n@Component({\n  selector: 'app-game-score-ux',\n  templateUrl: './game-score.ux.html',\n  styleUrls: ['./game-score.ux.scss'],\n})\nexport class GamescoreUxComponent implements OnInit, AfterViewInit {\n  @ViewChild(MenuGameScoreItemComponent)\n  scoreItemMenu: MenuGameScoreItemComponent | null = null;\n  @ViewChild('resizeHandle')\n  resizeHandle: ElementRef | null = null;\n  @Input() gameScoreFontSize: number | null = 24;\n  columnCount = 3;\n  gameScore: Move[] = [];\n  rowHeight = '50px';\n  maxPlySize = 178;\n  @Output() resizing = false;\n  @Input() scoreWidth: number | null = 360;\n  protected previousCursor = 'pointer';\n  constructor(public gameScoreService: GameScoreService) {\n    this.gameScore = [\n      { w: 'd4', b: 'Qd5' },\n      { w: 'Nf3', b: 'Bf6' },\n      { w: 'Rf3', b: 'Qf6' },\n      { w: 'Kf3', b: 'f6' },\n    ];\n    this.gameScoreService.figurineNotation.subscribe((figurineNotation) => {\n      if (figurineNotation) {\n        console.log('Setting Font to : ' + 'FigurineSymbolT1');\n        this.gameScoreService.scoreFontFamily.next('FigurineSymbolT1');\n      } else {\n        console.log('Setting Font to : ' + 'Caveat');\n        this.gameScoreService.scoreFontFamily.next('Cambria');\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    console.log(this.gameScore);\n  }\n\n  ngAfterViewInit(): void {\n    this.gameScoreService.loadPGN('');\n    this.resizeScore();\n  }\n\n  resizeScore(): void {\n    if (this.scoreWidth) {\n      this.columnCount = Math.floor(this.scoreWidth / this.maxPlySize);\n    } else {\n      this.columnCount = 3;\n    }\n  }\n\n  openItemMenu(event: MouseEvent, item: GameScoreItem): void {\n    event.preventDefault();\n    event.stopPropagation();\n    console.log('Right clicked on item ' + item?.moveData?.move);\n    this.scoreItemMenu?.openAt(item);\n  }\n\n  ignoreEvent(event: MouseEvent): void {\n    console.log('Ignoring ' + event);\n    event.preventDefault();\n    event.stopPropagation();\n  }\n\n  setWidth(width: number | null): void {\n    if (width) {\n      this.columnCount = Math.floor(width / this.maxPlySize);\n    }\n  }\n\n  resetResizeHandle(event: DragEvent | MouseEvent): void {\n    this.resizing = false;\n    if (this.resizeHandle && event.buttons === 0) {\n      document.body.style.cursor = this.previousCursor;\n    }\n    if (this.resizeHandleEvent) {\n      this.resizeHandleEvent(event);\n    }\n  }\n\n  setGrabCursor(event: DragEvent | MouseEvent): void {\n    this.previousCursor = document.body.style.cursor;\n    this.resizing = true;\n    document.body.style.cursor = 'grab';\n    if (this.resizeHandle) {\n      this.resizeHandle.nativeElement.style.cursor = 'grab';\n    }\n  }\n\n  resizeHandleEvent(event: DragEvent | MouseEvent): void {\n    if (this.resizing) {\n      console.log(event);\n      this.resizeScore();\n    }\n  }\n\n  resizeHandleCore(event: DragEvent | MouseEvent): void {\n    event.preventDefault();\n    event.stopPropagation();\n    document.body.style.cursor = 'grab';\n    if (this.resizeHandle) {\n      this.resizeHandle.nativeElement.style.cursor = 'grab';\n    }\n    if (event.buttons > 0 && this.resizeHandleEvent) {\n      this.resizeHandleEvent(event);\n    }\n  }\n}\n","<app-menu-game-score-item class=\"gs-menu\" #scoreItemMenu [style.z-index]=\"scoreItemMenu.open ? 20 : -1\"\r\n  (click)=\"scoreItemMenu.open = false;\"></app-menu-game-score-item>\r\n<mat-card class=\"div-background\">\r\n  <mat-card-title>\r\n    <h1 class=\"score-title\">Score</h1>\r\n  </mat-card-title>\r\n  <mat-card-content class=\"score-list\">\r\n    <app-game-score-item *ngFor=\"let item of (gameScoreService.items | async); index as i;\" [data]=\"item\"\r\n      (contextmenu)=\"openItemMenu($event, item)\"></app-game-score-item>\r\n    <!-- <mat-grid-list  cols=\"{{this.columnCount}}\" rowHeight=\"{{this.rowHeight}}\">\r\n      <mat-grid-tile class=\"score-font\" *ngFor=\"let moves of gameScore; index as i;\">\r\n        <b class=\"score-ply\">{{i+1}}.</b> <app-playermove [move]=\"moves.w\" [black]=\"false\"></app-plSayermove>  <app-playermove [black]=\"true\" [move]=\"moves.b\"></app-playermove>\r\n      </mat-grid-tile>\r\n    </mat-grid-list> -->\r\n  </mat-card-content>\r\n</mat-card>\r\n<div #resizeHandle class=\"resize-handle\" (mouseup)=\"resetResizeHandle($event)\" (mousedown)=\"setGrabCursor($event)\">\r\n</div>","import { Component, OnInit, Input, ViewChild, AfterViewInit } from '@angular/core';\nimport { GameScoreItem } from 'src/app/services/game-score.service';\nimport { MatMenuTrigger } from '@angular/material/menu';\n\n@Component({\n  selector: 'app-menu-game-score-item',\n  templateUrl: './menu-game-score-item.component.html',\n  styleUrls: ['./menu-game-score-item.component.scss']\n})\n\nexport class MenuGameScoreItemComponent implements OnInit, AfterViewInit{\n  @Input() data: GameScoreItem | null = null\n  @Input() menuTitle = 'Menu Title';\n  public open = false;\n  @ViewChild(MatMenuTrigger) matMenuTrigger: MatMenuTrigger | null = null;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  ngAfterViewInit(): void {\n    this.matMenuTrigger?.menuClosed.subscribe(() => {\n      console.log('Menu closed');\n    });\n  }\n\n  ignoreEvent(event: MouseEvent): void {\n    console.log('Ignoring ' + event);\n    event.preventDefault();\n    event.stopPropagation();\n  }\n\n  openAt(item: GameScoreItem): void {\n    this.open = true;\n  }\n}\n","<mat-card class=\"gs-context-menu-container\" (click)=\"open = false\">\n  <mat-card-title>{{ menuTitle }}</mat-card-title>\n  <mat-card-content class=\"gs-context-menu-overaly\">\n    <button mat-button class=\"context-menu-button\">Add</button>\n    <button mat-button class=\"context-menu-button\">Remove</button>\n    <button mat-button class=\"context-menu-button\">Keep</button>\n    <button mat-button class=\"context-menu-button\">Delete</button>\n    <button mat-button class=\"context-menu-button\">Restore</button>\n  </mat-card-content>\n</mat-card>\n","import { Component, OnInit, AfterViewInit, Input, Output } from '@angular/core';\r\nimport { fabric } from 'fabric';\r\nimport { Chess } from 'chessops/chess';\r\nimport { parseFen } from 'chessops/fen';\r\nimport { ColorService } from '../../services/colors.service';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { preserveWhitespacesDefault } from '@angular/compiler';\r\nimport { Canvas } from 'fabric/fabric-impl';\r\nimport { Piece } from 'chessops/types';\r\n\r\nexport class BoardTheme {\r\n  constructor(\r\n    public tileLight: string = '',\r\n    public tileDark: string = '',\r\n    public pieceSet: string = '',\r\n    public isSpriteSheet = false,\r\n    public fileExtension = '.svg'\r\n  ) {}\r\n  static defaultTheme(cs: ColorService): BoardTheme {\r\n    return new BoardTheme(\r\n      cs.boardBGLight.value,\r\n      cs.boardBGDark.value,\r\n      cs.boardPieceSet.value\r\n    );\r\n  }\r\n}\r\n\r\nexport class BoardData {\r\n  constructor(\r\n    public fen: string = 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1'\r\n  ) {}\r\n}\r\n\r\n@Component({\r\n  selector: 'app-board-canvas',\r\n  templateUrl: './board-canvas.component.html',\r\n  styleUrls: ['./board-canvas.component.scss'],\r\n})\r\nexport class BoardCanvasComponent implements OnInit, AfterViewInit {\r\n  @Input() UUID = '';\r\n  @Input() size = 320;\r\n  @Output() tileSize = Math.floor(this.size / 8);\r\n  @Input() interactive = true;\r\n  @Input() @Output() theme: BoardTheme | null = new BoardTheme();\r\n  @Input() @Output() data: BoardData | null = new BoardData();\r\n  @Output() pieceMap = new Map<string, fabric.Group>();\r\n  @Output() pieces: { tile: number; object: fabric.Group }[] = [];\r\n  @Output() tiles: { tile: fabric.Object; piece?: Piece }[] = [];\r\n  @Output() olgaBoard: fabric.Canvas | null = null;\r\n  @Output() orientation = 'white';\r\n  @Input() @Output() selectedPiece: {\r\n    tile: number;\r\n    object: fabric.Group;\r\n  } | null = null;\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  ngAfterViewInit(): void {\r\n    fabric.Object.prototype.transparentCorners = false;\r\n    this.olgaBoard = new fabric.Canvas(this.UUID + '-board');\r\n    this.olgaBoard.selection = false;\r\n    const waitCount = this.loadPieces();\r\n    waitCount.subscribe((count) => {\r\n      if (count >= 12) {\r\n        this.generateBoard();\r\n        this.connectMouseInput();\r\n        waitCount.unsubscribe();\r\n      }\r\n    });\r\n    this.olgaBoard.hoverCursor = 'arrow';\r\n    this.setInteractive(this.interactive);\r\n  }\r\n\r\n  checkPieceCanMove(\r\n    fromData: { tile: number; object: fabric.Group; piece: Piece | undefined },\r\n    toData: { tile: number; object: fabric.Group; piece: Piece | undefined }\r\n  ): boolean {\r\n    return true;\r\n  }\r\n\r\n  private checkValidDrop(e: fabric.IEvent): void {\r\n    if (this.selectedPiece?.object) {\r\n      const event = e.e as MouseEvent;\r\n      let row = Math.ceil(event.y / this.tileSize) - 1;\r\n      let col = Math.ceil(event.x / this.tileSize) - 1;\r\n      if (this.orientation == 'white') {\r\n        row = Math.ceil((this.size - event.y) / this.tileSize) - 1;\r\n      } else {\r\n        col = Math.ceil((this.size - event.x) / this.tileSize) - 1;\r\n      }\r\n      const tile = row * 8 + col;\r\n      const piece = this.selectedPiece.object;\r\n      const pieceToTake = this.pieces[tile];\r\n      if (\r\n        event.x < 0 ||\r\n        event.x > this.size ||\r\n        event.y > this.size ||\r\n        event.y < 0\r\n      ) {\r\n        row = Math.floor(this.selectedPiece.tile / 8);\r\n        col = this.selectedPiece.tile % 8;\r\n        if (this.orientation == 'white') {\r\n          row = 7 - Math.floor(this.selectedPiece.tile / 8);\r\n        } else {\r\n          col = 7 - (this.selectedPiece.tile % 8);\r\n        }\r\n      } else {\r\n        if (\r\n          this.checkPieceCanMove(\r\n            {\r\n              tile: this.selectedPiece.tile,\r\n              object: this.selectedPiece.object,\r\n              piece: this.tiles[this.selectedPiece.tile].piece,\r\n            },\r\n            {\r\n              tile: tile,\r\n              object: pieceToTake?.object,\r\n              piece: this.tiles[tile].piece,\r\n            }\r\n          )\r\n        ) {\r\n          this.pieces.slice(this.selectedPiece.tile, 1);\r\n          this.tiles[tile].piece = this.tiles[this.selectedPiece.tile].piece;\r\n          delete this.tiles[this.selectedPiece.tile].piece;\r\n          this.pieces[tile] = this.selectedPiece;\r\n          this.selectedPiece.tile = tile;\r\n        } else {\r\n          row = Math.floor(this.selectedPiece.tile / 8);\r\n          col = this.selectedPiece.tile % 8;\r\n        }\r\n      }\r\n      if (this.orientation == 'white') {\r\n        piece.set('left', col * this.tileSize);\r\n        piece.set('top', (7 - row) * this.tileSize);\r\n      } else {\r\n        piece.set('left', (7 - col) * this.tileSize);\r\n        piece.set('top', row * this.tileSize);\r\n      }\r\n      piece.setCoords();\r\n      this.selectedPiece = null;\r\n    }\r\n  }\r\n\r\n  private selectPiece(e: fabric.IEvent): void {\r\n    if (!this.selectedPiece) {\r\n      const event = e.e as MouseEvent;\r\n      let row = Math.ceil(event.y / this.tileSize) - 1;\r\n      let col = Math.ceil(event.x / this.tileSize) - 1;\r\n      if (this.orientation == 'white') {\r\n        row = Math.ceil((this.size - event.y) / this.tileSize) - 1;\r\n      } else {\r\n        col = Math.ceil((this.size - event.x) / this.tileSize) - 1;\r\n      }\r\n      const tileIndex = row * 8 + col;\r\n      if (tileIndex >= 0 && tileIndex < 64) {\r\n        this.selectedPiece = this.pieces[tileIndex];\r\n        //this.highlightTile(tileIndex);\r\n      }\r\n    }\r\n  }\r\n\r\n  private clearBoard(): void {\r\n    this.pieces.forEach((piece) => {\r\n      this.olgaBoard?.remove(piece.object);\r\n    });\r\n    this.pieces = [];\r\n    this.tiles.forEach((tileData) => {\r\n      this.olgaBoard?.remove(tileData.tile);\r\n    });\r\n    this.tiles = [];\r\n  }\r\n\r\n  private connectMouseInput(): void {\r\n    if (this.olgaBoard) {\r\n      this.olgaBoard.on('object:moved', this.checkValidDrop.bind(this));\r\n      this.olgaBoard.on('object:moving', this.selectPiece.bind(this));\r\n    }\r\n  }\r\n\r\n  private generateTiles(): void {\r\n    if (this.olgaBoard) {\r\n      if (!this.theme) {\r\n        console.log('Cannot generate board without theme');\r\n        return;\r\n      }\r\n\r\n      let chess = null;\r\n\r\n      if (this.data && this.data.fen) {\r\n        const setup = parseFen(this.data.fen).unwrap();\r\n        chess = Chess.fromSetup(setup).unwrap();\r\n      }\r\n      let tileIndex = 0;\r\n      const padding = Math.floor((this.size - this.tileSize * 8) / 2);\r\n      for (let row = 0; row < 8; row++) {\r\n        for (let col = 0; col < 8; col++) {\r\n          // move this to clone feature, only create the tiles once.\r\n\r\n          const tile = new fabric.Rect({\r\n            width: this.tileSize,\r\n            height: this.tileSize,\r\n          });\r\n          // create piece\r\n          if (this.orientation == 'white') {\r\n            tile.set('left', col * this.tileSize + padding);\r\n            tile.set('top', row * this.tileSize + padding);\r\n          } else {\r\n            tile.set('left', col * this.tileSize + padding);\r\n            tile.set('top', row * this.tileSize + padding);\r\n          }\r\n\r\n          tile.set('lockMovementX', true);\r\n          tile.set('lockMovementY', true);\r\n          tile.set('lockRotation', true);\r\n          tile.set('lockScalingX', true);\r\n          tile.set('lockScalingY', true);\r\n          tile.set('lockUniScaling', true);\r\n          tile.set('hasControls', false);\r\n          tile.set('hasBorders', false);\r\n          tile.setCoords();\r\n          if (row % 2 === 0) {\r\n            // even row 0, 2, 4, 6\r\n            if (col % 2 === 0) {\r\n              tile.setColor(this.theme.tileDark);\r\n            } else {\r\n              tile.setColor(this.theme.tileLight);\r\n            }\r\n          } else {\r\n            // odd row 1, 3, 5, 7\r\n            if (col % 2 === 0) {\r\n              tile.setColor(this.theme.tileLight);\r\n            } else {\r\n              tile.setColor(this.theme.tileDark);\r\n            }\r\n          }\r\n          this.tiles.push({ tile: tile });\r\n          if (chess) {\r\n            let squareData = chess.board.get(tileIndex);\r\n            // get the first and last of the role and color\r\n            const color = squareData?.color[0].toLowerCase();\r\n            let role = squareData?.role[0].toUpperCase();\r\n            if (squareData?.role === 'knight') {\r\n              role = 'N';\r\n            }\r\n            if (role && color) {\r\n              const pieceImage = this.pieceMap.get(color + role);\r\n              if (pieceImage) {\r\n                pieceImage.clone((clone: fabric.Group) => {\r\n                  clone.set('lockRotation', true);\r\n                  clone.set('lockScalingX', true);\r\n                  clone.set('lockScalingY', true);\r\n                  clone.set('lockUniScaling', true);\r\n                  clone.set('hasControls', false);\r\n                  clone.set('hasBorders', false);\r\n                  if (!this.interactive) {\r\n                    clone.set('lockMovementX', true);\r\n                    clone.set('lockMovementY', true);\r\n                  } else {\r\n                    clone.hoverCursor = 'grab';\r\n                    clone.moveCursor = 'grabbing';\r\n                  }\r\n                  if (this.orientation == 'white') {\r\n                    clone.set(\r\n                      'left',\r\n                      Math.floor(col * this.tileSize) + padding\r\n                    );\r\n                    clone.set(\r\n                      'top',\r\n                      Math.floor((7 - row) * this.tileSize) + padding\r\n                    );\r\n                  } else {\r\n                    clone.set(\r\n                      'left',\r\n                      Math.floor((7 - col) * this.tileSize) + padding\r\n                    );\r\n                    clone.set('top', Math.floor(row * this.tileSize) + padding);\r\n                  }\r\n                  clone.scaleToHeight(this.tileSize);\r\n                  clone.setCoords();\r\n                  this.pieces[tileIndex] = { tile: tileIndex, object: clone };\r\n                  this.tiles[tileIndex].piece = squareData;\r\n                });\r\n              }\r\n            }\r\n          }\r\n          ++tileIndex;\r\n        }\r\n      }\r\n      this.tiles.forEach((tileData) => {\r\n        this.olgaBoard?.add(tileData.tile);\r\n      });\r\n      this.pieces.forEach((pieceObject) => {\r\n        this.olgaBoard?.add(pieceObject.object);\r\n      });\r\n    }\r\n  }\r\n\r\n  private loadPieces(): BehaviorSubject<number> {\r\n    const count = new BehaviorSubject<number>(0);\r\n    this.loadPieceImage('wK', count);\r\n    this.loadPieceImage('wB', count);\r\n    this.loadPieceImage('wQ', count);\r\n    this.loadPieceImage('wR', count);\r\n    this.loadPieceImage('wP', count);\r\n    this.loadPieceImage('wN', count);\r\n    this.loadPieceImage('bK', count);\r\n    this.loadPieceImage('bB', count);\r\n    this.loadPieceImage('bQ', count);\r\n    this.loadPieceImage('bR', count);\r\n    this.loadPieceImage('bP', count);\r\n    this.loadPieceImage('bN', count);\r\n    return count;\r\n  }\r\n\r\n  private generateBoard(): void {\r\n    this.clearBoard();\r\n    this.generateTiles();\r\n  }\r\n\r\n  private loadPieceImage(\r\n    piece: string,\r\n    subject: BehaviorSubject<number>\r\n  ): void {\r\n    if (this.theme?.pieceSet) {\r\n      if (this.theme.isSpriteSheet) {\r\n      } else {\r\n        if (this.theme.fileExtension === '.svg') {\r\n          fabric.loadSVGFromURL(\r\n            this.theme.pieceSet + piece + this.theme.fileExtension,\r\n            (objects, options) => {\r\n              console.log('loaded ' + this.theme?.pieceSet + piece);\r\n              const obj = fabric.util.groupSVGElements(\r\n                objects,\r\n                options\r\n              ) as fabric.Group;\r\n              obj.left = -400;\r\n              obj.top = 0;\r\n              this.pieceMap.set(piece, obj);\r\n              subject.next(subject.value + 1);\r\n            }\r\n          );\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private resizeBoardObjects(size: number): void {\r\n    const padding = Math.floor((this.size - this.tileSize * 8) / 2);\r\n    if (this.tiles.length > 0) {\r\n      for (let index = 0; index < 64; index++) {\r\n        const tile = this.tiles[index].tile;\r\n        const row = Math.floor(index / 8);\r\n        const col = index % 8;\r\n        tile.set('width', this.tileSize);\r\n        tile.set('height', this.tileSize);\r\n        tile.set('top', row * this.tileSize + padding);\r\n        tile.set('left', col * this.tileSize + padding);\r\n        tile.setCoords();\r\n      }\r\n    }\r\n\r\n    const difference = Math.floor(size - this.size) / 2;\r\n    this.pieces.forEach((pieceData) => {\r\n      const piece = pieceData.object;\r\n      if (\r\n        piece.left !== undefined &&\r\n        piece.top !== undefined &&\r\n        this.olgaBoard\r\n      ) {\r\n        const row = Math.floor(pieceData.tile / 8);\r\n        const col = pieceData.tile % 8;\r\n        piece.scaleToHeight(this.tileSize);\r\n        if (this.orientation == 'white') {\r\n          piece.set('left', Math.floor(col * this.tileSize) + padding);\r\n          piece.set('top', Math.floor((7 - row) * this.tileSize) + padding);\r\n        } else {\r\n          piece.set('left', Math.floor((7 - col) * this.tileSize) + padding);\r\n          piece.set('top', Math.floor(row * this.tileSize) + padding);\r\n        }\r\n        piece.setCoords();\r\n      }\r\n    });\r\n  }\r\n\r\n  setDarkTile(color: string): void {\r\n    if (this.theme) {\r\n      this.theme.tileDark = color;\r\n      for (let index = 0; index < 64; index++) {\r\n        const row = Math.floor(index / 8);\r\n        if (row % 2 === 0) {\r\n          if (index % 2 === 0) {\r\n            const tile = this.tiles[index].tile;\r\n            tile.set('fill', color);\r\n          }\r\n        } else {\r\n          if (index % 2 !== 0) {\r\n            const tile = this.tiles[index].tile;\r\n            tile.set('fill', color);\r\n          }\r\n        }\r\n      }\r\n      this.olgaBoard?.requestRenderAll();\r\n    } else {\r\n      console.log('Cannot set board-canvas tile dark with Null theme');\r\n    }\r\n  }\r\n\r\n  setLightTile(color: string): void {\r\n    if (this.theme) {\r\n      this.theme.tileLight = color;\r\n      for (let index = 0; index < 64; index++) {\r\n        const row = Math.floor(index / 8);\r\n        if (row % 2 !== 0) {\r\n          if (index % 2 === 0) {\r\n            const tile = this.tiles[index].tile;\r\n            tile.set('fill', color);\r\n          }\r\n        } else {\r\n          if (index % 2 !== 0) {\r\n            const tile = this.tiles[index].tile;\r\n            tile.set('fill', color);\r\n          }\r\n        }\r\n      }\r\n      this.olgaBoard?.requestRenderAll();\r\n    } else {\r\n      console.log('Cannot set board-canvas tile light with Null theme');\r\n    }\r\n  }\r\n\r\n  setSize(size: number): void {\r\n    if (this.olgaBoard) {\r\n      this.size = size;\r\n      this.tileSize = Math.floor(size / 8);\r\n      this.olgaBoard.width = size;\r\n      this.olgaBoard.height = size;\r\n      this.olgaBoard.setDimensions({\r\n        width: size,\r\n        height: size,\r\n      });\r\n      this.resizeBoardObjects(size);\r\n      this.olgaBoard.requestRenderAll();\r\n    }\r\n  }\r\n\r\n  setInteractive(interactive: boolean): void {\r\n    if (interactive) {\r\n      if (this.olgaBoard) {\r\n      }\r\n    } else {\r\n      if (this.olgaBoard) {\r\n      }\r\n    }\r\n  }\r\n\r\n  setFen(fen: string): void {\r\n    if (this.data) {\r\n      this.data.fen = fen;\r\n      this.clearBoard();\r\n      this.generateBoard();\r\n    }\r\n  }\r\n\r\n  requestRedraw(): void {\r\n    this.clearBoard();\r\n    this.generateBoard();\r\n  }\r\n}\r\n","<canvas id=\"{{ UUID }}-board\" style=\"position: absolute;\" [style.top]=\"0\" [style.left]=\"0\" [height]=\"size\"\r\n    [width]=\"size\" [style.width.px]=\"size\" [style.height.px]=\"size\" [style.z-index]=\"2\" resize>\r\n</canvas>","import {\r\n  Component,\r\n  OnInit,\r\n  ElementRef,\r\n  ViewChild,\r\n  AfterViewInit,\r\n  Input,\r\n  Output,\r\n} from '@angular/core';\r\nimport { fabric } from 'fabric';\r\nimport { ColorService } from '../services/colors.service';\r\nimport { EngineService } from '../services/engine.service';\r\nimport {\r\n  BoardCanvasComponent,\r\n  BoardTheme,\r\n  BoardData,\r\n} from './board-canvas/board-canvas.component';\r\nimport { Board } from 'chessops/board';\r\nimport { Role, Move, Piece } from 'chessops/types';\r\n\r\n@Component({\r\n  selector: 'app-olga-board',\r\n  templateUrl: './olga-board.component.html',\r\n  styleUrls: ['./olga-board.component.scss'],\r\n})\r\nexport class OlgaBoardComponent implements OnInit, AfterViewInit {\r\n  @Input() UUID = '';\r\n  @ViewChild(BoardCanvasComponent)\r\n  board: BoardCanvasComponent | null = null;\r\n  @Input() @Output() theme: BoardTheme | null = null;\r\n  @ViewChild('ogBoard', { static: false }) background: ElementRef | null = null;\r\n  constructor(\r\n    public colorService: ColorService,\r\n    public engineService: EngineService\r\n  ) {\r\n    this.theme = BoardTheme.defaultTheme(this.colorService);\r\n    fabric.Object.prototype.objectCaching = true;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.colorService.boardBGDark.subscribe((dark) => {\r\n      if (this.board) {\r\n        this.board.setDarkTile(dark);\r\n      }\r\n    });\r\n    this.colorService.boardBGLight.subscribe((light) => {\r\n      if (this.board) {\r\n        this.board.setLightTile(light);\r\n      }\r\n    });\r\n  }\r\n  toRole(role: string): Role {\r\n    return role as Role;\r\n  }\r\n  ngAfterViewInit(): void {\r\n    // board is legit, attach engine\r\n    if (this.board) {\r\n      this.board.checkPieceCanMove = this.engineService.makeMove.bind(this.engineService);\r\n      this.engineService.boardChanged.subscribe(this.updateBoard.bind(this));\r\n    }\r\n  }\r\n\r\n\r\n  setBoardSize(size: number): void {\r\n    this.board?.setSize(size);\r\n  }\r\n\r\n  setFen(fen: string): void {\r\n    this.board?.setFen(fen);\r\n  }\r\n\r\n  updateBoard(change: boolean): void {\r\n    if (this.board) {\r\n      this.board.setFen(this.engineService.getFen());\r\n    }\r\n  }\r\n}\r\n","<app-board-canvas [theme]=\"theme\">\r\n\r\n</app-board-canvas>","import { Component, OnInit, Input } from '@angular/core';\nimport { GameScoreService } from '../services/game-score.service';\n\n@Component({\n  selector: 'app-playermove',\n  templateUrl: './playermove.component.html',\n  styleUrls: ['./playermove.component.scss']\n})\nexport class PlayermoveComponent implements OnInit {\n  @Input() move: string = '';\n  @Input() black = false;\n  constructor(public gameScoreService: GameScoreService) { }\n\n  ngOnInit(): void {\n\n  }\n\n}\n","<div  *ngIf=\"this.move.length === 2\">\n  <a class=\"score-invismove\" [style.font-size.px]=\"gameScoreService.scoreFontSize | async\" [style.font-family]=\"gameScoreService.scoreFontFamily | async\" *ngIf=\"this.black\">Q</a>\n  <a class=\"score-move\" [style.font-size.px]=\"gameScoreService.scoreFontSize | async\"  [style.font-family]=\"gameScoreService.scoreFontFamily | async\">{{this.move}}</a>\n  <a class=\"score-invismove\" [style.font-size.px]=\"gameScoreService.scoreFontSize | async\" [style.font-family]=\"gameScoreService.scoreFontFamily | async\" *ngIf=\"!this.black\">Q</a>\n</div>\n<div  *ngIf=\"this.move.length !== 2\">\n  <a class=\"score-move\"  [style.font-size.px]=\"gameScoreService.scoreFontSize | async\" [style.font-family]=\"gameScoreService.scoreFontFamily | async\">{{this.move}}</a>\n</div>\n\n","import { Injectable, Output, Input } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ColorService {\r\n  // DEFAULTING TO DARK COLOR PALLETE\r\n  // Main Elements (background, sub containers, context menu)\r\n  @Input() @Output() readonly textColor = 'white'; // Main Text Color\r\n  @Input() @Output() readonly textColorAttention = 'purple'; // Attention text\r\n  @Input() @Output() readonly textColorRemove = 'red'; // Remove/Delete/Close\r\n  @Input() @Output() readonly textColorAdd = 'green'; // Add/Create/Open\r\n  @Input() @Output() readonly textColorActive = 'light-blue'; // Add/Create/Open\r\n  @Input() @Output() readonly background = '#434343'; // Main background Color\r\n  @Input() @Output() readonly bgContainer = '#353535'; // background of Containers\r\n  @Input() @Output() readonly bgMenu = '#353535'; // background of Menus\r\n  @Input() @Output() readonly bgItem = '#353535'; // background of containers\r\n\r\n  // Context menu\r\n  @Input() readonly bgContext = '#CC9966';\r\n  @Input() readonly textColorContext = 'white';\r\n  @Input() readonly borderContext = 'solid black 1px';\r\n  @Input() readonly overlayContextBackground = 'rgb(199,199,199)';\r\n  @Input() readonly overlayContextBackgroundGradient =\r\n    'linear-gradient(153deg, rgba(199,199,199,0.9051995798319328) 41%, rgba(249,249,249,0.8911939775910365) 83%)';\r\n\r\n  // Control Elements (Buttons, sliders, number wheels, toggle switches)\r\n  @Input() @Output() readonly fgItem = '#00ffffff';\r\n  @Input() @Output() readonly fgItemContrast = '#e25400';\r\n\r\n  // Board Colors\r\n  @Input() @Output() readonly boardBGDark = new BehaviorSubject<string>(\r\n    '#81388f'\r\n  );\r\n  @Input() @Output() readonly boardBGLight = new BehaviorSubject<string>(\r\n    '#e0fffb'\r\n  );\r\n  @Input() @Output() readonly boardPieceSet = new BehaviorSubject<string>(\r\n    '../../assets/images/pieces/merida/'\r\n  );\r\n\r\n  // Game Score Variables\r\n  @Input() @Output() readonly gsTextColor = new BehaviorSubject<string>(\r\n    'white'\r\n  );\r\n  @Input() @Output() readonly gsBackground = new BehaviorSubject<string>(\r\n    '#353535'\r\n  );\r\n  @Input() @Output() readonly gsBorder = new BehaviorSubject<string>('white 2px dotted');\r\n  @Input() @Output() readonly gsTextSize = new BehaviorSubject<string>('24px');\r\n\r\n  // Game Score Highlight Colors\r\n  @Input() @Output() readonly gsTextColorHG = new BehaviorSubject<string>(\r\n    'white'\r\n  );\r\n  @Input() @Output() readonly gsBackgroundHG = new BehaviorSubject<string>(\r\n    '#353535'\r\n  );\r\n  @Input() @Output() readonly gsBorderHG = new BehaviorSubject<string>(\r\n    'black 1px solid'\r\n  );\r\n\r\n  // Game Score Annotation Colors\r\n\r\n\r\n  // Game Score Variation Colors\r\n  @Input() @Output() readonly gsTextColorVA = new BehaviorSubject<string>(\r\n    'white'\r\n  );\r\n  @Input() @Output() readonly gsBackgroundVA = new BehaviorSubject<string>(\r\n    '#353535'\r\n  );\r\n  @Input() @Output() readonly gsBorderVA = new BehaviorSubject<string>(\r\n    'black 1px solid'\r\n  );\r\n\r\n  // Game Score Ply Count\r\n  @Input() @Output() readonly gsTextColorPC = new BehaviorSubject<string>(\r\n    'white'\r\n  );\r\n  @Input() @Output() readonly gsBackgroundPC = new BehaviorSubject<string>(\r\n    '#353535'\r\n  );\r\n  @Input() @Output() readonly gsBorderPC = new BehaviorSubject<string>(\r\n    'black 1px solid'\r\n  );\r\n\r\n  // Menu specific Colors\r\n\r\n  // Title Colors\r\n  constructor() { }\r\n\r\n  setDarkColorPalette(): void { }\r\n\r\n  setLightColorPalette(): void { }\r\n\r\n  setStoredColorPalette(): void {\r\n    // 1.) Read User color palette sent from CG.com\r\n    // 2.) Look for a cookie on disk (load from disk)\r\n    // 3.) User default CSS Styled color palette\r\n  }\r\n\r\n  initializeColorPalette(): void {\r\n    console.log('Setting primary color to ' + this.fgItem);\r\n    // Main Elements\r\n    document.documentElement.style.setProperty('--textCoolor', this.textColor);\r\n    document.documentElement.style.setProperty(\r\n      '--itextColorAttention',\r\n      this.textColorAttention\r\n    );\r\n    document.documentElement.style.setProperty(\r\n      '--textColorRemove',\r\n      this.textColorRemove\r\n    );\r\n    document.documentElement.style.setProperty(\r\n      '--textColorAdd',\r\n      this.textColorAdd\r\n    );\r\n    document.documentElement.style.setProperty(\r\n      '--textColorActive',\r\n      this.textColorActive\r\n    );\r\n    document.documentElement.style.setProperty('--background', this.background);\r\n    document.documentElement.style.setProperty('--bgItem', this.bgItem);\r\n    document.documentElement.style.setProperty(\r\n      '--bgContainer',\r\n      this.bgContainer\r\n    );\r\n    document.documentElement.style.setProperty('--bgMenu', this.bgMenu);\r\n\r\n    // Context Menu\r\n    document.documentElement.style.setProperty('--bgContext', this.bgContext);\r\n    document.documentElement.style.setProperty(\r\n      '--overlayContextBackground',\r\n      this.overlayContextBackground\r\n    );\r\n    document.documentElement.style.setProperty(\r\n      '--textColorContext',\r\n      this.textColorContext\r\n    );\r\n    document.documentElement.style.setProperty('--bgContext', this.bgContext);\r\n    document.documentElement.style.setProperty(\r\n      '--overlayContextBackgroundGradient',\r\n      this.overlayContextBackgroundGradient\r\n    );\r\n    document.documentElement.style.setProperty(\r\n      '--borderContext',\r\n      this.borderContext\r\n    );\r\n\r\n    // Game Score\r\n    document.documentElement.style.setProperty('--gsBackground', this.gsBackground.value);\r\n    document.documentElement.style.setProperty(\r\n      '--gsTextColor',\r\n      this.gsTextColor.value\r\n    );\r\n    document.documentElement.style.setProperty(\r\n      '--gsTextSize',\r\n      this.gsTextSize.value\r\n    );\r\n    document.documentElement.style.setProperty(\r\n      '--gsBackground',\r\n      this.gsBackground.value\r\n    );\r\n    document.documentElement.style.setProperty(\r\n      '--gsBorder',\r\n      this.gsBorder.value\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { parseFen, makeFen, parsePiece } from 'chessops/fen';\r\nimport { makeSan, makeSanAndPlay } from 'chessops/san';\r\nimport { Chess, Position } from 'chessops/chess';\r\nimport { Piece, Move, ROLES } from 'chessops/types';\r\nimport { transformBoard } from 'chessops/transform';\r\nimport { makeSquare } from 'chessops/util';\r\n//import { Chess, Position } from 'chessops/variant'\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { SquareSet } from 'chessops/squareSet';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class EngineService {\r\n  chessEngine: Position = Chess.default();\r\n  readonly boardChanged = new BehaviorSubject<boolean>(false);\r\n  readonly abreviatedSan = new BehaviorSubject<boolean>(false);\r\n  constructor() {\r\n    // this.chessEngine.board = transformBoard(this.chessEngine.board, (s: SquareSet) => { console.log(s); return s; });\r\n    this.boardChanged.next(true);\r\n  }\r\n  private generateSAN(fromData: { tile: number; object: fabric.Group; piece: Piece | undefined }, toData: { tile: number; object: fabric.Group; piece: Piece | undefined }): string {\r\n    if (this.abreviatedSan.value) {\r\n      return ''; // abreviated\r\n    }\r\n    return ''// non abreviated\r\n  }\r\n  makeMove(fromData: { tile: number; object: fabric.Group; piece: Piece | undefined }, toData: { tile: number; object: fabric.Group; piece: Piece | undefined }): boolean {\r\n    if (fromData.piece) {\r\n      this.chessEngine.epSquare = fromData.tile;\r\n      console.log('from: ' + makeSquare(fromData.tile));\r\n      console.log(this.chessEngine.board.get(fromData.tile));\r\n      console.log('to: ' + makeSquare(toData.tile));\r\n      console.log(this.chessEngine.board.get(toData.tile));\r\n      const move = { from: fromData.tile, to: toData.tile } as Move;\r\n      if (this.chessEngine.isLegal(move)) {\r\n        if (toData.object) {\r\n          toData.object.remove();\r\n        }\r\n        const san = makeSanAndPlay(this.chessEngine, move);\r\n        //const piece = {role:'', color:''} as Piece;\r\n        //this.chessEngine.board.set(fromData.tile, piece);\r\n        this.boardChanged.next(!this.boardChanged.value);\r\n        // add san to game score\r\n        console.log(san);\r\n        return true;\r\n      }\r\n      const san = makeSan(this.chessEngine, { role: fromData.piece.role, to: toData.tile } as Move);\r\n      if (san.search('@') >= 0) {\r\n\r\n      }\r\n      console.log('Attempting to make invalid move ' + san);\r\n      console.log('board believes tile has:');\r\n      console.log(this.chessEngine.board.get(toData.tile));\r\n    }\r\n    return false;\r\n  };\r\n\r\n  checkPosition(row: string, rank: string): Piece | undefined {\r\n    return this.chessEngine?.board.get(0);\r\n  }\r\n  getFen(): string {\r\n    return makeFen(this.chessEngine.toSetup());\r\n  }\r\n}\r\n","import { Injectable, Input, Output } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n\r\nexport class GameScoreMove {\r\n  move = '';\r\n  ply = 1;\r\n  constructor(move = '', ply = 1) { this.move = move; this.ply = ply; }\r\n}\r\n\r\nexport class GameScoreVariation {\r\n  variationData: GameScoreItem[];\r\n  constructor(variationData: GameScoreItem[] = []) { this.variationData = variationData; }\r\n}\r\n\r\nexport class GameScoreAnnotation {\r\n  annotation = '';\r\n  constructor(annotation: string = '') { this.annotation = annotation; }\r\n}\r\n\r\n\r\nexport class GameScoreItem {\r\n  type: GameScoreType | null = null;\r\n  moveData: GameScoreMove | null = null;\r\n  annotationData: GameScoreAnnotation | null = null;\r\n  variationData: GameScoreVariation | null = null;\r\n  constructor(type: GameScoreType, moveData: GameScoreMove | null = null,\r\n    annotationData: GameScoreAnnotation | null = null, variationData: GameScoreVariation | null = null) {\r\n    this.type = type;\r\n    this.moveData = moveData;\r\n    this.annotationData = annotationData;\r\n    this.variationData = variationData;\r\n  }\r\n}\r\n\r\nexport enum GameScoreType {\r\n  GameScoreGroup = 121,\r\n  Variation\r\n}\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GameScoreService {\r\n  //\r\n  @Input() @Output() readonly figurineNotation = new BehaviorSubject<boolean>(false);\r\n  @Output() readonly items = new BehaviorSubject<GameScoreItem[]>([]);\r\n  @Output() readonly annotations = new BehaviorSubject<GameScoreAnnotation[]>([]);\r\n  @Output() readonly variation = new BehaviorSubject<GameScoreVariation[]>([]);\r\n\r\n  // Visual Settings\r\n  @Output() readonly scoreFontFamily = new BehaviorSubject<string>('Caveat');\r\n  @Output() readonly scoreFontSize = new BehaviorSubject<number>(18);\r\n  constructor() { }\r\n\r\n  public loadPGN(pgn: string) {\r\n    const testmove = new GameScoreMove('ex4');\r\n    const testItem = new GameScoreItem(GameScoreType.GameScoreGroup, testmove);\r\n    this.items.next([testItem]);\r\n  }\r\n  public clearItems(): void {\r\n\r\n  }\r\n  public typeToString(type: GameScoreType): string {\r\n    return GameScoreType[type];\r\n  }\r\n\r\n}\r\n","import { Injectable, ElementRef } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LayoutService {\n  readonly landscapeOrientation = new BehaviorSubject<boolean>(true);\n  appContainer: ElementRef | null = null;\n  constructor() {}\n\n  initializeLayout(appContainer: ElementRef | null): void {\n    if (!appContainer) {\n      console.log('Invalid App Container %$@');\n      console.log(appContainer);\n      this.appContainer = appContainer;\n    } else {\n      const width = appContainer.nativeElement.style.width;\n      const height = appContainer.nativeElement.style.height;\n      if (width > height) {\n        console.log('Initializing Olga with Landscape layout');\n      } else {\n        console.log('Initializing Olga with Portrait layout');\n      }\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-settings-board',\n  templateUrl: './settings-board.component.html',\n  styleUrls: ['./settings-board.component.scss']\n})\nexport class SettingsBoardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>settings-board works!</p>\n","import {\n  Component,\n  OnInit,\n  Output,\n  AfterViewInit,\n  ViewChild,\n  ElementRef,\n} from '@angular/core';\nimport { GameScoreService } from '../../services/game-score.service';\nimport { ColorService } from '../../services/colors.service';\nimport { MatSliderChange } from '@angular/material/slider';\n\n@Component({\n  selector: 'app-gamescore-settings',\n  templateUrl: './settings-gamescore.component.html',\n  styleUrls: ['./settings-gamescore.component.scss'],\n})\nexport class GamescoreSettingsComponent implements OnInit, AfterViewInit {\n  constructor(\n    public gameScoreService: GameScoreService,\n    public colorService: ColorService\n  ) {}\n  @ViewChild('lightBGHandle', { static: true })\n  lightBGHandle: ElementRef | null = null;\n   @ViewChild('darkBGHandle', { static: true })\n  darkBGHandle: ElementRef | null = null;\n\n  ngOnInit(): void {}\n  ngAfterViewInit(): void {\n    if (this.lightBGHandle) {\n      this.lightBGHandle.nativeElement.value = this.colorService.boardBGLight.value;\n    }\n    if (this.darkBGHandle) {\n      this.darkBGHandle.nativeElement.value = this.colorService.boardBGDark.value;\n    }\n  }\n}\n","<!-- <mat-card>\n  <mat-card-title>\n    Choose Layout\n  </mat-card-title>\n  <mat-card-subtitle>\n    Settings\n  </mat-card-subtitle>\n  <mat-card-actions>\n    <button mat-raised-button color=\"primary\" >Portrait</button>\n    <button mat-raised-button color=\"primary\" >Landscape</button>\n  </mat-card-actions>\n</mat-card>\n<br/>\n<mat-card >\n  <mat-card-title>\n    Choose Size\n  </mat-card-title>\n  <mat-card-subtitle>\n    Settings\n  </mat-card-subtitle>\n  <mat-card-actions>\n    <button mat-raised-button class=\"blue-button\" >Small</button>\n    <button mat-raised-button class=\"blue-button\" >Medium</button>\n    <button mat-raised-button color=\"primary\" >Large</button>\n    <br/>\n    <label>\n      <input type=\"checkbox\" name=\"my-checkbox\" checked> Select me\n  </label>\n  <label>\n      <input type=\"checkbox\" name=\"my-checkbox\"> Select me\n  </label>\n  </mat-card-actions>\n</mat-card>\n<br/> -->\n<mat-card>\n  <mat-card-title>\n    Colors\n  </mat-card-title>\n  <mat-card-subtitle>\n    Settings\n  </mat-card-subtitle>\n  <mat-card-content>\n    <div>Light Background</div>\n    <input\n      #lightBGHandle\n      matInput\n      type=\"color\"\n      id=\"lightColor\"\n      class=\"color-input\"\n      (input)=\"colorService.boardBGLight.next(lightBGHandle.value)\"\n    />\n    <div>Dark Background</div>\n    <input\n      #darkBGHandle\n      matInput\n      type=\"color\"\n      id=\"darkColor\"\n      class=\"color-input\"\n      (input)=\"colorService.boardBGDark.next(darkBGHandle.value)\"\n    />\n    <br />\n    <!-- <div>Font Size</div>\n    <mat-slider #scoreFontSize thumbLabel class=\"small-slider\" (input)=\"gameScoreService.scoreFontSize.next(($event.value ? $event.value : 18))\" value=\"18\" min=\"14\" max=\"24\" step=\"1\" color=\"primary\" ></mat-slider>\n    <br/>\n    <label class=\"switch\">\n      <input type=\"checkbox\" #figureNotation (change)=\"gameScoreService.figurineNotation.next(figureNotation.checked)\">\n      <div style=\"font-size:12px; text-align:center;\">Figurine Notation</div>\n    </label>\n    <br/>\n    Font Family\n    <select>\n      <option>Cambria</option>\n      <option>Times New Roman</option>\n    </select> -->\n  </mat-card-content>\n</mat-card>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-settings-menu',\n  templateUrl: './settings-menu.component.html',\n  styleUrls: ['./settings-menu.component.scss']\n})\nexport class SettingsMenuComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"settings-window\">\n    <app-gamescore-settings></app-gamescore-settings>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"sourceRoot":"webpack:///"}