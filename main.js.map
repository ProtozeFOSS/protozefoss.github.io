{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/canvas-chessboard/canvas-chessboard.component.ts","./src/app/canvas-chessboard/canvas-chessboard.component.html","./src/app/common/labeled-slider/labeled-slider.component.ts","./src/app/common/labeled-slider/labeled-slider.component.html","./src/app/common/toggle-switch/toggle-switch.component.ts","./src/app/common/toggle-switch/toggle-switch.component.html","./src/app/game-score/game-score-item/game-score-item.component.ts","./src/app/game-score/game-score-item/game-score-item.component.html","./src/app/game-score/game-score.ux.ts","./src/app/game-score/game-score.ux.html","./src/app/game-score/menu-game-score-item/menu-game-score-item.component.ts","./src/app/game-score/menu-game-score-item/menu-game-score-item.component.html","./src/app/olga-controls/olga-controls.component.ts","./src/app/olga-controls/olga-controls.component.html","./src/app/olga-status/olga-status.component.ts","./src/app/olga-status/olga-status.component.html","./src/app/services/colors.service.ts","./src/app/services/game.service.ts","./src/app/services/layout.service.ts","./src/app/services/olga.service.ts","./src/app/settings/settings-board/settings-board.component.ts","./src/app/settings/settings-board/settings-board.component.html","./src/app/settings/settings-gamescore/settings-gamescore.component.ts","./src/app/settings/settings-gamescore/settings-gamescore.component.html","./src/app/settings/settings-menu/settings-menu.component.ts","./src/app/settings/settings-menu/settings-menu.component.html","./src/environments/environment.ts","./src/main.ts","jsdom (ignored)","jsdom/lib/jsdom/living/generated/utils (ignored)","jsdom/lib/jsdom/utils (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import {\n  Component,\n  AfterViewInit,\n  ViewChild,\n  ElementRef,\n  Input,\n  Output,\n} from '@angular/core';\nimport { GamescoreUxComponent } from './game-score/game-score.ux';\nimport { CanvasChessBoard } from './canvas-chessboard/canvas-chessboard.component';\nimport { ColorService } from './services/colors.service';\nimport { LayoutService } from './services/layout.service';\nimport { GameService, ChessGame } from './services/game.service';\nimport { OlgaService } from './services/olga.service';\nimport { SettingsMenuComponent } from './settings/settings-menu/settings-menu.component';\n\n@Component({\n  selector: 'olga',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class Olga implements AfterViewInit {\n  title = 'Olga PGN Viewer 2.0';\n  @ViewChild(GamescoreUxComponent)\n  gameScoreComponent: GamescoreUxComponent | null = null;\n  @ViewChild(CanvasChessBoard)\n  canvasBoardComponent: CanvasChessBoard | null = null;\n  @ViewChild('olgaContainer')\n  appContainer: ElementRef | null = null;\n  @ViewChild(SettingsMenuComponent)\n  settingsMenuComponent: SettingsMenuComponent | null = null;\n  @Output() gameScoreElement: HTMLElement | null = null;\n  @Output() boardElement: HTMLElement | null = null;\n  @Output() controlsElement: HTMLElement | null = null;\n  @Output() statusElement: HTMLElement | null = null;\n  @Input() pgnString = '';\n  @Input() olgaID = '12312321';\n  @Output() gameScoreWidth: number | null = 389;\n  @Output() oldWidth: number | null = 0;\n  protected doneResizingScore = false;\n  constructor(\n    public olga: OlgaService,\n    public colorService: ColorService,\n    public gameService: GameService,\n    public layoutService: LayoutService,\n  ) {\n    const date = new Date();\n    this.olgaID = 'OLGA-' + date.getTime().toString();\n    console.log('ID: ' + this.olgaID);\n    // this.gameService..subscribe((game) => {\n    //   this.currentGame = game;\n    //   //this.gameScoreComponent.setGame(game);\n    //   //this.canvasBoarComponent.setGame(game);\n    //   //this.layoutService.updateLayout();\n    // })\n  }\n\n  // tslint:disable-next-line: typedef\n  ngAfterViewInit() {\n    this.gameScoreElement = document.getElementById('app-gamescore' + this.olgaID);\n    this.boardElement = document.getElementById(this.olgaID + '-ccb');\n    this.controlsElement = document.getElementById('olga-controls' + this.olgaID);\n    this.statusElement = document.getElementById('olga-status' + this.olgaID);\n    this.colorService.initializeColorPalette();\n    this.colorService.boardBGDark.subscribe((bgDark) => {\n      this.canvasBoardComponent?.setDarkTile(bgDark);\n    })\n    this.layoutService.initializeLayout(this);\n    if (this.canvasBoardComponent) {\n      this.gameService.attachBoard(this.canvasBoardComponent);\n    }\n    if (this.gameScoreComponent) {\n      this.gameService.attachScore(this.gameScoreComponent);\n      this.gameScoreComponent.resizeHandleEvent = this.layoutService.onSliderDrag.bind(this.layoutService);\n      this.gameScoreComponent.resizeTouchEvent = this.layoutService.onSliderTouch.bind(this.layoutService);\n    }\n\n    if (this.canvasBoardComponent) {\n      this.gameService.attachBoard(this.canvasBoardComponent);\n    }\n\n    this.colorService.boardBGLight.subscribe((light) => {\n      if (this.canvasBoardComponent) {\n        console.log('setting light board tile');\n        this.canvasBoardComponent.setLightTile(light);\n      }\n    });\n    this.colorService.boardBGDark.subscribe((dark) => {\n      if (this.canvasBoardComponent) {\n        console.log('setting Dark board tile');\n        this.canvasBoardComponent.setDarkTile(dark);\n      }\n    });\n  }\n  mouseMoved(event: MouseEvent): void {\n    if (this.gameScoreComponent && this.gameScoreComponent.resizing) {\n      this.gameScoreComponent.resizeHandleEvent(event);\n      if (event.buttons === 0) {\n        this.gameScoreComponent.resizing = false;\n      }\n    }\n  }\n\n  touchMoved(event: TouchEvent): void {\n    if (this.gameScoreComponent && this.gameScoreComponent.resizing) {\n      this.gameScoreComponent.resizeTouchEvent(event);\n    }\n  }\n\n  loadPGN(pgn: string) {\n    this.gameService.loadPGN(pgn);\n  }\n\n  setBoardSize(size: number): void {\n    if (this.canvasBoardComponent) {\n      this.canvasBoardComponent.setSize(size);\n    }\n  }\n  setGameScoreSize(size: number): void {\n    this.gameScoreWidth = size;\n    if (this.canvasBoardComponent) {\n      this.canvasBoardComponent.setSize(this.gameScoreWidth);\n    }\n  }\n\n  setMenuSize(size: number): void {\n    this.settingsMenuComponent?.resize(size, size);\n  }\n\n  ignoreEvent(event: MouseEvent): void {\n    //console.log('Ignoring ' + event);\n    event.preventDefault();\n    event.stopPropagation();\n  }\n}\n","<div #olgaContainer id=\"{{ this.olgaID }}-olga-container\" class=\"olga-container\" (touchmove)=\"touchMoved($event)\"\n  (mousemove)=\"mouseMoved($event)\">\n  <canvas-chessboard (touchstart)=\"canvasBoardComponent.touchStart($event)\" #canvasBoardComponent\n    id=\"{{this.olgaID}}-ccb\" [UUID]=\"this.olgaID\" [theme]=\"this.colorService.boardTheme()\">\n  </canvas-chessboard>\n  <app-game-score-ux id=\"app-gamescore{{this.olgaID}}\" (contextmenu)=\"ignoreEvent($event)\" [UUID]=\"this.olgaID\">\n  </app-game-score-ux>\n  <olga-controls id=\"olga-controls{{this.olgaID}}\"></olga-controls>\n  <!-- <app-gamescore-settings #gameScore></app-gamescore-settings>\n  <button mat-button class=\"fenbutton\" (click)=\"\n      olgaBoard.setFen(\n        'rnbqkbnr/pp1ppppp/8/2p5/4P3/5N2/PPPP1PPP/RNBQKB1R b KQkq - 1 2'\n      )\n    \">\n    Set Fen\n  </button> -->\n  <olga-status id=\"olga-status{{this.olgaID}}\"></olga-status>\n  <settings-menu #settingsMenuComponent id=\"settings-menu{{this.olgaID}}\"></settings-menu>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { Olga } from './app.component';\nimport { GamescoreSettingsComponent } from './settings/settings-gamescore/settings-gamescore.component';\nimport { GamescoreUxComponent } from './game-score/game-score.ux';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { GameScoreItemComponent } from './game-score/game-score-item/game-score-item.component';\nimport { ColorService } from './services/colors.service';\nimport { ToggleSwitchComponent } from './common/toggle-switch/toggle-switch.component';\nimport { LabeledSliderComponent } from './common/labeled-slider/labeled-slider.component';\nimport { SettingsMenuComponent } from './settings/settings-menu/settings-menu.component';\nimport { SettingsBoardComponent } from './settings/settings-board/settings-board.component';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MenuGameScoreItemComponent } from './game-score/menu-game-score-item/menu-game-score-item.component';\n\nimport { OlgaService } from './services/olga.service';\nimport { GameService } from './services/game.service';\nimport { LayoutService } from './services/layout.service';\nimport { CanvasChessBoard } from './canvas-chessboard/canvas-chessboard.component';\nimport { OlgaControlsComponent } from './olga-controls/olga-controls.component';\nimport { OlgaStatusComponent } from './olga-status/olga-status.component';\n\n@NgModule({\n  declarations: [\n    Olga,\n    GamescoreSettingsComponent,\n    GamescoreUxComponent,\n    GameScoreItemComponent,\n    ToggleSwitchComponent,\n    LabeledSliderComponent,\n    SettingsMenuComponent,\n    SettingsBoardComponent,\n    MenuGameScoreItemComponent,\n    CanvasChessBoard,\n    OlgaControlsComponent,\n    OlgaStatusComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatCardModule,\n    MatDividerModule,\n    MatIconModule,\n    MatInputModule,\n    MatGridListModule,\n    MatMenuModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatTabsModule,\n  ],\n  providers: [LayoutService, ColorService, GameService, OlgaService],\n  bootstrap: [Olga],\n})\nexport class AppModule { }\n","import { Component, OnInit, AfterViewInit, Input, Output } from '@angular/core';\nimport { fabric } from 'fabric';\nimport { BehaviorSubject } from 'rxjs';\nimport { ChessMove, GameService } from '../services/game.service';\nimport { ColorService } from '../services/colors.service';\n\nexport const SquareNames = ['a1', 'b1', 'c1', 'd1', 'e1', 'f1', 'g1', 'h1', 'a2', 'b2', 'c2', 'd2', 'e2', 'f2', 'g2', 'h2', 'a3', 'b3', 'c3', 'd3', 'e3', 'f3', 'g3', 'h3', 'a4', 'b4', 'c4', 'd4', 'e4', 'f4', 'g4', 'h4', 'a5', 'b5', 'c5', 'd5', 'e5', 'f5', 'g5', 'h5', 'a6', 'b6', 'c6', 'd6', 'e6', 'f6', 'g6', 'h6', 'a7', 'b7', 'c7', 'd7', 'e7', 'f7', 'g7', 'h7', 'a8', 'b8', 'c8', 'd8', 'e8', 'f8', 'g8', 'h8'];\n\nexport interface Piece {\n  role: string;\n  color: string;\n  promoted?: boolean;\n}\n\nexport class BoardTheme {\n  constructor(\n    public tileLight: string = '',\n    public tileDark: string = '',\n    public pieceSet: string = '',\n    public isSpriteSheet = false,\n    public fileExtension = '.svg'\n  ) { }\n}\n\nexport type Color = 'white' | 'black';\n\nexport class BoardSettings {\n  orientation: Color = 'white';\n};\n\n\n@Component({\n  selector: 'canvas-chessboard',\n  templateUrl: './canvas-chessboard.component.html',\n  styleUrls: ['./canvas-chessboard.component.scss'],\n})\nexport class CanvasChessBoard implements OnInit, AfterViewInit {\n  @Input() UUID = '';\n  @Input() size = 320;\n  @Input() @Output() tileSize = Math.floor(this.size / 8);\n  @Input() interactive = true;\n  protected promotionDialog: fabric.Group | null = null;\n  protected knightButton: fabric.Group | null = null;\n  protected bishopButton: fabric.Group | null = null;\n  protected rookButton: fabric.Group | null = null;\n  protected queenButton: fabric.Group | null = null;\n  @Input() @Output() theme: BoardTheme | null = new BoardTheme();\n  @Input() @Output() settings: BoardSettings = new BoardSettings();\n  @Output() pieceMap = new Map<string, fabric.Group>();\n  @Output() pieces: { tile: number; object: fabric.Group }[] = [];\n  @Output() tileGroup: fabric.Group | null = null;\n  @Output() tiles: { tile: fabric.Object, piece?: Piece }[] = [];\n  @Output() canvas: fabric.Canvas | null = null;\n  @Input() @Output() selectedPiece: { tile: number; object: fabric.Group } | null = null;\n  @Output() touching = false;\n  @Output() midPromotion = false;\n  constructor(public gameService: GameService, public colorService: ColorService) {\n    if (this.gameService.game.value !== null) {\n      this.setBoardToGamePosition();\n    }\n  }\n\n  ngOnInit(): void { }\n\n  ngAfterViewInit(): void {\n    fabric.Object.prototype.transparentCorners = false;\n    this.canvas = new fabric.Canvas(this.UUID + '-canvas');\n    this.canvas.selection = false;\n    const waitCount = this.loadPieces();\n    waitCount.subscribe((count) => {\n      if (count >= 12) {\n        this.generateBoard();\n        this.connectMouseInput();\n        this.setBoardToGamePosition();\n        waitCount.unsubscribe();\n        this.resizeBoardObjects(this.size);\n      }\n    });\n    this.canvas.hoverCursor = 'arrow';\n    this.canvas.allowTouchScrolling = true;\n    this.setInteractive(this.interactive);\n  }\n  addPiece(tile: number, color: string, role: string) {\n    const col = tile % 8;\n    const row = Math.floor(tile / 8);\n    const padding = Math.floor((this.size - this.tileSize * 8) / 2);\n    if (role && color) {\n      const pieceImage = this.pieceMap.get(color + role);\n      if (pieceImage) {\n        pieceImage.clone((pieceObject: fabric.Group) => {\n          pieceObject.set('lockRotation', true);\n          pieceObject.set('lockScalingX', true);\n          pieceObject.set('lockScalingY', true);\n          pieceObject.set('lockUniScaling', true);\n          pieceObject.set('hasControls', false);\n          pieceObject.set('hasBorders', false);\n          if (!this.interactive) {\n            pieceObject.set('lockMovementX', true);\n            pieceObject.set('lockMovementY', true);\n          } else {\n            pieceObject.hoverCursor = 'grab';\n            pieceObject.moveCursor = 'grabbing';\n          }\n          if (this.settings.orientation == 'white') {\n            pieceObject.set('left', Math.floor(col * this.tileSize) + padding);\n            pieceObject.set('top', Math.floor((7 - row) * this.tileSize) + padding);\n          } else {\n            pieceObject.set('left', Math.floor((7 - col) * this.tileSize) + padding);\n            pieceObject.set('top', Math.floor(row * this.tileSize) + padding);\n          }\n          pieceObject.scaleToHeight(this.tileSize);\n          pieceObject.setCoords();\n          this.pieces[tile] = { tile: tile, object: pieceObject };\n          this.tiles[tile].piece = { role, color } as Piece;\n          if (this.canvas) {\n            this.canvas?.add(pieceObject);\n            pieceObject.moveTo(10);\n          }\n        });\n      }\n    }\n  }\n\n  removePiece(tile: number) {\n    const object = this.pieces[tile].object;\n    delete this.pieces[tile];\n    this.canvas?.remove(object);\n    delete this.tiles[tile].piece;\n  }\n\n  protected performPromotion(move: ChessMove): void {\n    if (move.promotion) {\n      console.log('Promoting to ' + move.promotion.role);\n      console.log('@ ' + SquareNames[move.to]);\n      // remove old piece\n      this.removePiece(move.to);\n      this.addPiece(move.to, move.color, move.promotion.role);\n      if (this.gameService.game.value) {\n        this.gameService.game.value.performPromotion(move);\n        this.closePromotionDialog();\n      }\n    }\n  }\n  protected closePromotionDialog() {\n    if (this.knightButton) {\n      this.canvas?.remove(this.knightButton);\n    }\n    if (this.bishopButton) {\n      this.canvas?.remove(this.bishopButton);\n    }\n    if (this.rookButton) {\n      this.canvas?.remove(this.rookButton);\n    }\n    if (this.queenButton) {\n      this.canvas?.remove(this.queenButton);\n    }\n    if (this.promotionDialog) {\n      this.canvas?.remove(this.promotionDialog);\n    }\n    this.knightButton = null;\n    this.bishopButton = null;\n    this.rookButton = null;\n    this.queenButton = null;\n    this.promotionDialog = null;\n  }\n  protected createPromotionDialog(move: ChessMove) {\n    // pull items out of chess move\n    const tileIndex = move.to;\n    if (move.role && move.color && tileIndex >= 0 && tileIndex < 64) {\n      const group = [];\n\n      if (this.settings.orientation == 'white') {\n        // translate tileIndex\n      }\n      // Create the background overlay (semi-transparent square)\n      const overlay = new fabric.Rect({ width: this.size, height: this.size, left: 0, top: 0 });\n      overlay.set('lockMovementX', true);\n      overlay.set('lockMovementY', true);\n      overlay.set('lockRotation', true);\n      overlay.set('lockScalingX', true);\n      overlay.set('lockScalingY', true);\n      overlay.set('lockUniScaling', true);\n      overlay.set('hasControls', false);\n      overlay.set('hasBorders', false);\n      overlay.set('selectable', false);\n      overlay.set('opacity', .65);\n      overlay.setCoords();\n      overlay.setColor('#0a0a0a');\n      group.push(overlay);\n\n      // Create the background square (rounded rectangle 80% width 64% height vertically and horizontally centered)\n      const height = .60 * this.size;\n      const width = .8 * this.size;\n\n      const bg = new fabric.Rect({\n        height: height, width: width, fill: this.colorService.bgMenu, left: (this.size - width) / 2, top: (this.size - height) / 2,\n        rx: width * .02, ry: width * .02\n      });\n      bg.setColor(this.colorService.bgMenu);\n      bg.set('lockMovementX', true);\n      bg.set('lockMovementY', true);\n      bg.set('lockRotation', true);\n      bg.set('lockScalingX', true);\n      bg.set('lockScalingY', true);\n      bg.set('lockUniScaling', true);\n      bg.set('hasControls', false);\n      bg.set('hasBorders', false);\n      bg.set('selectable', false);\n      bg.set('strokeWidth', 1);\n      bg.set('stroke', 'white');\n      bg.setCoords();\n      group.push(bg);\n      let pieceImage = null;\n      // Create the title text \"Promotion\" - white, subtle\n      const title = new fabric.Text('Promotion', { fontWeight: '100', fontSize: this.size * .07, fontFamily: 'Courier New' })\n      title.set('lockMovementX', true);\n      title.set('lockMovementY', true);\n      title.set('lockRotation', true);\n      title.set('lockScalingX', true);\n      title.set('lockScalingY', true);\n      title.set('lockUniScaling', true);\n      title.set('hasControls', false);\n      title.set('hasBorders', false);\n      title.set('selectable', false);\n      title.setColor('white');\n      title.set('originX', 'center');\n      title.set('originY', 'center');\n      title.set('left', this.size * .5);\n      title.set('top', this.size * .235);\n      title.setCoords();\n      group.push(title);\n      // Clone the promoted piece and tile and display them horizontally centered below title\n      let x = this.size / 2;\n      let y = (this.size * .38) + 4;\n      const tileSize = this.size * .2;\n      // Tile Clone\n      const tileToClone = this.tiles[tileIndex];\n      if (tileToClone) {\n        tileToClone.tile.clone(((promotionTile: fabric.Object) => {\n          promotionTile.set('top', y);\n          promotionTile.set('left', x);\n          promotionTile.set('originX', 'center');\n          promotionTile.set('originY', 'center');\n          promotionTile.scaleToHeight(tileSize);\n          promotionTile.setCoords();\n          group.push(promotionTile);\n        }));\n        pieceImage = this.pieceMap.get(move.color + move.role);\n        if (pieceImage) {\n          pieceImage.clone((pieceObject: fabric.Group) => {\n            pieceObject.set('originX', 'center');\n            pieceObject.set('originY', 'center');\n            pieceObject.set('top', y);\n            pieceObject.set('left', x);\n            pieceObject.scaleToHeight(tileSize);\n            pieceObject.setCoords();\n            group.push(pieceObject);\n          });\n        }\n\n      }\n      pieceImage = null;\n      // Create text \"{Color} has triggered at \" below tile and piece clone\n      // Create the title text \"Promotion\" - white, subtle\n      let color = 'White';\n      if (move.color === 'b') {\n        color = 'Black';\n      }\n      const prompt = new fabric.Text(color + ' has triggered promotion at', { fontSize: this.size * .04 })\n      prompt.set('lockMovementX', true);\n      prompt.set('lockMovementY', true);\n      prompt.set('lockRotation', true);\n      prompt.set('lockScalingX', true);\n      prompt.set('lockScalingY', true);\n      prompt.set('lockUniScaling', true);\n      prompt.set('hasControls', false);\n      prompt.set('hasBorders', false);\n      prompt.set('selectable', false);\n      prompt.setColor('white');\n      prompt.set('originX', 'center');\n      prompt.set('originY', 'center');\n      prompt.set('left', (this.size * .5) - 24);\n      prompt.set('top', this.size * .53);\n      prompt.setCoords();\n      group.push(prompt);\n\n      // Create text to right of triggered text with move\n      const atText = new fabric.Text(SquareNames[tileIndex], { fontSize: this.size * .055 })\n      atText.set('lockMovementX', true);\n      atText.set('lockMovementY', true);\n      atText.set('lockRotation', true);\n      atText.set('lockScalingX', true);\n      atText.set('lockScalingY', true);\n      atText.set('lockUniScaling', true);\n      atText.set('hasControls', false);\n      atText.set('hasBorders', false);\n      atText.set('selectable', false);\n      const bgColor = tileToClone.tile.get('fill');\n      atText.setColor(bgColor ? bgColor.toString() : 'white');\n      atText.set('originX', 'center');\n      atText.set('originY', 'center');\n      const promptWidth = prompt.get('width');\n      const promptLeft = prompt.get('left');\n\n      atText.set('left', (promptLeft ? promptLeft : this.size * .2) + ((promptWidth !== undefined ? promptWidth : 20) / 2) + this.size * .035);\n      atText.set('top', this.size * .53);\n      atText.setCoords();\n      group.push(atText);\n      // Create 4 clones of tiles, 4 clones of pieces (Knight, Bishop, Rook, And King)\n\n      // Create the four tiles\n      y = (this.size * .67) + 4\n      x = (this.size * .205);\n      const choiceSize = tileSize * .75;\n      if (tileToClone) {\n        let buttonGroup: fabric.Object[] = [];\n        tileToClone.tile.clone(((tile: fabric.Object) => {\n          tile.set('originX', 'left');\n          tile.set('originY', 'top');\n          tile.set('stroke', this.colorService.gsTextColorHG.value);\n          tile.set('strokeWidth', 2);\n          tile.set('top', 0);\n          tile.set('left', 0);\n          tile.scaleToHeight(choiceSize);\n          tile.setCoords();\n          buttonGroup.push(tile);\n        }));\n\n        // Knight button\n        pieceImage = this.pieceMap.get(move.color + 'N');\n        if (pieceImage) {\n          pieceImage.clone((obj: fabric.Group) => {\n            obj.set('originX', 'left');\n            obj.set('originY', 'top');\n            obj.set('top', 0);\n            obj.set('left', 0);\n            obj.scaleToHeight(choiceSize);\n            obj.setCoords();\n            buttonGroup.push(obj);\n          });\n        }\n        if (buttonGroup.length >= 2) {\n          this.knightButton = new fabric.Group(buttonGroup);\n          this.knightButton.set('originX', 'center');\n          this.knightButton.set('originY', 'center');\n          this.knightButton.set('top', y);\n          this.knightButton.set('left', x);\n          this.knightButton.set('selectable', true);\n          this.knightButton.set('lockMovementX', true);\n          this.knightButton.set('lockMovementY', true);\n          this.knightButton.set('lockRotation', true);\n          this.knightButton.set('lockScalingX', true);\n          this.knightButton.set('lockScalingY', true);\n          this.knightButton.set('lockUniScaling', true);\n          this.knightButton.set('hasControls', false);\n          this.knightButton.set('hasBorders', false);\n          this.knightButton.scaleToHeight(choiceSize);\n          this.knightButton.setCoords();\n          this.knightButton.on('selected', () => {\n            move.promotion = { role: 'N' };\n            this.performPromotion(move);\n          });\n        }\n        let buttonGroup2: fabric.Object[] = [];\n        // Bishop Button\n        x = (this.size * .4);\n        tileToClone.tile.clone(((tile: fabric.Object) => {\n          tile.set('originX', 'left');\n          tile.set('originY', 'top');\n          tile.set('stroke', this.colorService.gsTextColorHG.value);\n          tile.set('strokeWidth', 2);\n          tile.set('top', 0);\n          tile.set('left', 0);\n          tile.scaleToHeight(choiceSize);\n          tile.setCoords();\n          buttonGroup2.push(tile);\n        }));\n        pieceImage = this.pieceMap.get(move.color + 'B');\n        if (pieceImage) {\n          pieceImage.clone((piece: fabric.Group) => {\n            piece.set('originX', 'left');\n            piece.set('originY', 'top');\n            piece.set('top', 0);\n            piece.set('left', 0);\n            piece.scaleToHeight(choiceSize);\n            piece.setCoords();\n            buttonGroup2.push(piece)\n          });\n        }\n        if (buttonGroup2.length >= 2) {\n          this.bishopButton = new fabric.Group(buttonGroup2);\n          this.bishopButton.set('originX', 'center');\n          this.bishopButton.set('originY', 'center');\n          this.bishopButton.set('top', y);\n          this.bishopButton.set('left', x);\n          this.bishopButton.set('selectable', true);\n          this.bishopButton.set('lockMovementX', true);\n          this.bishopButton.set('lockMovementY', true);\n          this.bishopButton.set('lockRotation', true);\n          this.bishopButton.set('lockScalingX', true);\n          this.bishopButton.set('lockScalingY', true);\n          this.bishopButton.set('lockUniScaling', true);\n          this.bishopButton.set('hasControls', false);\n          this.bishopButton.set('hasBorders', false);\n          this.bishopButton.scaleToHeight(choiceSize);\n          this.bishopButton.setCoords();\n          this.bishopButton.on('selected', () => {\n            move.promotion = { role: 'B' };\n            this.performPromotion(move);\n          });\n        }\n\n        // Rook Button\n        x = (this.size * .595);\n        let buttonGroup3: fabric.Object[] = [];\n        tileToClone.tile.clone(((tile: fabric.Object) => {\n          tile.set('originX', 'left');\n          tile.set('originY', 'top');\n          tile.set('stroke', this.colorService.gsTextColorHG.value);\n          tile.set('strokeWidth', 2);\n          tile.set('top', 0);\n          tile.set('left', 0);\n          tile.scaleToHeight(choiceSize);\n          tile.setCoords();\n          buttonGroup3.push(tile);\n        }));\n        pieceImage = this.pieceMap.get(move.color + 'R');\n        if (pieceImage) {\n          pieceImage.clone((piece: fabric.Group) => {\n            piece.set('originX', 'left');\n            piece.set('originY', 'top');\n            piece.set('top', 0);\n            piece.set('left', 0);\n            piece.scaleToHeight(choiceSize);\n            piece.setCoords();\n            buttonGroup3.push(piece)\n          });\n        }\n        if (buttonGroup3.length >= 2) {\n          this.rookButton = new fabric.Group(buttonGroup3);\n          this.rookButton.set('originX', 'center');\n          this.rookButton.set('originY', 'center');\n          this.rookButton.set('top', y);\n          this.rookButton.set('left', x);\n          this.rookButton.set('selectable', true);\n          this.rookButton.set('lockMovementX', true);\n          this.rookButton.set('lockMovementY', true);\n          this.rookButton.set('lockRotation', true);\n          this.rookButton.set('lockScalingX', true);\n          this.rookButton.set('lockScalingY', true);\n          this.rookButton.set('lockUniScaling', true);\n          this.rookButton.set('hasControls', false);\n          this.rookButton.set('hasBorders', false);\n          this.rookButton.scaleToHeight(choiceSize);\n          this.rookButton.setCoords();\n          this.rookButton.on('selected', () => {\n            move.promotion = { role: 'R' };\n            this.performPromotion(move);\n          });\n        }\n        // Queen\n        x = (this.size * .79);\n        let buttonGroup4: fabric.Object[] = [];\n        tileToClone.tile.clone(((tile: fabric.Object) => {\n          tile.set('originX', 'left');\n          tile.set('originY', 'top');\n          tile.set('stroke', this.colorService.gsTextColorHG.value);\n          tile.set('strokeWidth', 2);\n          tile.set('top', 0);\n          tile.set('left', 0);\n          tile.scaleToHeight(choiceSize);\n          tile.setCoords();\n          buttonGroup4.push(tile);\n        }));\n        pieceImage = this.pieceMap.get(move.color + 'Q');\n        if (pieceImage) {\n          pieceImage.clone((piece: fabric.Group) => {\n            piece.set('originX', 'left');\n            piece.set('originY', 'top');\n            piece.set('top', 0);\n            piece.set('left', 0);\n            piece.scaleToHeight(choiceSize);\n            piece.setCoords();\n            buttonGroup4.push(piece)\n          });\n        }\n        if (buttonGroup4.length >= 2) {\n          this.queenButton = new fabric.Group(buttonGroup4);\n          this.queenButton.set('originX', 'center');\n          this.queenButton.set('originY', 'center');\n          this.queenButton.set('top', y);\n          this.queenButton.set('left', x);\n          this.queenButton.set('selectable', true);\n          this.queenButton.set('lockMovementX', true);\n          this.queenButton.set('lockMovementY', true);\n          this.queenButton.set('lockRotation', true);\n          this.queenButton.set('lockScalingX', true);\n          this.queenButton.set('lockScalingY', true);\n          this.queenButton.set('lockUniScaling', true);\n          this.queenButton.set('hasControls', false);\n          this.queenButton.set('hasBorders', false);\n          this.queenButton.scaleToHeight(choiceSize);\n          this.queenButton.setCoords();\n          this.queenButton.on('selected', () => {\n            move.promotion = { role: 'Q' };\n            this.performPromotion(move);\n          });\n        }\n      }\n\n      this.promotionDialog = new fabric.Group(group, { left: 0, top: 0, width: this.size, height: this.size });\n\n      this.promotionDialog.set('lockMovementX', true);\n      this.promotionDialog.set('lockMovementY', true);\n      this.promotionDialog.set('lockRotation', true);\n      this.promotionDialog.set('lockScalingX', true);\n      this.promotionDialog.set('lockScalingY', true);\n      this.promotionDialog.set('lockUniScaling', true);\n      this.promotionDialog.set('hasControls', false);\n      this.promotionDialog.set('hasBorders', false);\n      this.promotionDialog.set('selectable', false);\n      this.promotionDialog.scaleToHeight(this.size);\n      this.promotionDialog.scaleToWidth(this.size);\n      this.canvas?.add(this.promotionDialog);\n      this.promotionDialog.moveTo(500);\n      if (this.knightButton) {\n        this.canvas?.add(this.knightButton);\n        this.knightButton.moveTo(510);\n      }\n      if (this.bishopButton) {\n        this.canvas?.add(this.bishopButton);\n        this.bishopButton.moveTo(510);\n      }\n      if (this.rookButton) {\n        this.canvas?.add(this.rookButton);\n        this.rookButton.moveTo(510);\n      }\n      if (this.queenButton) {\n        this.canvas?.add(this.queenButton);\n        this.queenButton.moveTo(510);\n      }\n      this.canvas?.requestRenderAll();\n    }\n  }\n\n  showPromotionDialog(move: ChessMove) {\n    if (!this.promotionDialog) {\n      const object = this.pieces[move.from].object;\n      if (object) {\n        object.set('lockMovementX', true);\n        object.set('lockMovementY', true);\n        object.set('selectable', false);\n      }\n      this.createPromotionDialog(move);\n      this.midPromotion = true;\n      return;\n    }\n  }\n\n  makeMove(move: ChessMove): void {\n    if (this.pieces[move.from]) {\n      const piece = this.pieces[move.from];\n      delete this.pieces[move.from];\n      delete this.tiles[move.from].piece;\n      if (piece.object) {\n        const row = Math.floor(move.to / 8);\n        const col = move.to % 8;\n        if (this.settings.orientation == 'white') {\n          piece.object.set('left', col * this.tileSize);\n          piece.object.set('top', (7 - row) * this.tileSize);\n        } else {\n          piece.object.set('left', (7 - col) * this.tileSize);\n          piece.object.set('top', row * this.tileSize);\n        }\n        const to = (row * 8) + col;\n        const capture = this.pieces[to];\n        if (capture) {\n          this.canvas?.remove(capture.object);\n        }\n        piece.tile = to;\n        this.pieces[to] = piece;\n        this.tiles[to].piece = { color: move.color, role: move.role };\n        // piece.object.moveTo(10);\n        // this.promotionDialog?.moveTo(500);\n        piece.object.setCoords();\n      }\n    }\n    this.canvas?.requestRenderAll();\n  }\n  unMakeMove(move: ChessMove) {\n    if (this.pieces[move.to]) {\n      const piece = this.pieces[move.to];\n      delete this.pieces[move.to];\n      delete this.tiles[move.to].piece;\n      if (piece.object) {\n        const row = Math.floor(move.from / 8);\n        const col = move.from % 8;\n        if (this.settings.orientation == 'white') {\n          piece.object.set('left', col * this.tileSize);\n          piece.object.set('top', (7 - row) * this.tileSize);\n        } else {\n          piece.object.set('left', (7 - col) * this.tileSize);\n          piece.object.set('top', row * this.tileSize);\n        }\n        const from = (row * 8) + col;\n        const capture = move.capture;\n        if (capture) {\n\n          this.addPiece(move.to, capture.color, capture.role);\n        }\n        piece.tile = from;\n        this.pieces[from] = piece;\n        this.tiles[from].piece = { color: move.color, role: move.role };\n        piece.object.moveTo(10);\n        piece.object.setCoords();\n        this.promotionDialog?.moveTo(500);\n      }\n    }\n    this.canvas?.requestRenderAll();\n  }\n\n  private resetMove(move: ChessMove): void {\n    const piece = this.pieces[move.from].object;\n    if (piece) {\n      const row = Math.floor(move.from / 8);\n      const col = move.from % 8;\n      if (this.settings.orientation == 'white') {\n        piece.set('left', col * this.tileSize);\n        piece.set('top', (7 - row) * this.tileSize);\n      } else {\n        piece.set('left', (7 - col) * this.tileSize);\n        piece.set('top', row * this.tileSize);\n      }\n      piece.moveTo(10);\n      this.promotionDialog?.moveTo(500);\n      piece.setCoords();\n    }\n  }\n  // Move to just board functions\n  // movePiece(to, from);\n  // removePiece(tile);\n  // addPiece(tile, piece);\n  // clearPieces();\n  // \n\n  checkPieceCanMove(fromData: { tile: number; object: fabric.Group; piece: Piece | undefined }, toData: { tile: number; object: fabric.Group; piece: Piece | undefined }): boolean { return true; }\n\n  public isValidDrop(from: number, to: number): boolean {\n    if (this.gameService.game.value !== null) {\n      const position = this.gameService.game.value.getPosition();\n      const legal = position.isMoveLegal(SquareNames[from], SquareNames[to]);\n      return legal !== false;\n    }\n    return false;\n  }\n\n  private checkValidDrop(e: fabric.IEvent): void {\n    if (this.selectedPiece?.object) {\n      let x = 0;\n      let y = 0;\n      if (this.touching) {\n        const event = e.e as TouchEvent;\n        if (event.changedTouches.length) {\n          x = event.changedTouches[0].clientX;\n          y = event.changedTouches[0].clientY;\n        }\n        this.touching = false;\n      } else {\n        const event = e.e as MouseEvent;\n        x = event.x;\n        y = event.y;\n      }\n      let row = Math.ceil(y / this.tileSize) - 1;\n      let col = Math.ceil(x / this.tileSize) - 1;\n      if (this.settings.orientation == 'white') {\n        row = Math.ceil((this.size - y) / this.tileSize) - 1;\n      } else {\n        col = Math.ceil((this.size - x) / this.tileSize) - 1;\n      }\n      const tile = ((row * 8) + col);\n      const move = new ChessMove();\n      move.from = this.selectedPiece.tile;\n      move.to = tile;\n      const piece = this.tiles[move.from].piece;\n      if (piece) {\n        move.color = piece.color;\n        move.role = piece.role;\n      }\n      if (x < 0 || x > this.size || y > this.size || y < 0) {\n        this.resetMove(move);\n      } else {\n        if (this.isValidDrop(this.selectedPiece.tile, tile) && this.gameService.game.value !== null) {\n          this.gameService.game.value.makeMove(move);\n          this.makeMove(move);\n        } else {\n          this.resetMove(move);\n        }\n      }\n      this.selectedPiece = null;\n    }\n  }\n\n\n\n  touchStart(event: TouchEvent): void {\n    if (event.touches.length) {\n      const point = event.touches[0];\n      let row = Math.ceil(point.clientY / this.tileSize) - 1;\n      let col = Math.ceil(point.clientX / this.tileSize) - 1;\n      if (this.settings.orientation == 'white') {\n        row = Math.ceil((this.size - point.clientY) / this.tileSize) - 1;\n      } else {\n        col = Math.ceil((this.size - point.clientX) / this.tileSize) - 1;\n      }\n      const tileIndex = ((row * 8) + col);\n      if (tileIndex >= 0 && tileIndex < 64) {\n        this.touching = true;\n        this.selectedPiece = this.pieces[tileIndex];\n        //this.highlightTile(tileIndex);\n      }\n    }\n  }\n\n\n  private selectPiece(e: fabric.IEvent): void {\n    let x = 0;\n    let y = 0;\n    const event = e.e as MouseEvent;\n    x = event.x;\n    y = event.y;\n    if (x === undefined || y === undefined) {\n      const event = e.e as TouchEvent;\n      if (event.touches.length) {\n        x = event.touches[0].clientX;\n        y = event.touches[0].clientY;\n      }\n    }\n    let row = Math.ceil(y / this.tileSize) - 1;\n    let col = Math.ceil(x / this.tileSize) - 1;\n    if (this.settings.orientation == 'white') {\n      row = Math.ceil((this.size - y) / this.tileSize) - 1;\n    } else {\n      col = Math.ceil((this.size - x) / this.tileSize) - 1;\n    }\n    const tileIndex = ((row * 8) + col);\n    if (tileIndex >= 0 && tileIndex < 64) {\n      this.selectedPiece = this.pieces[tileIndex];\n      //this.highlightTile(tileIndex);\n    } else {\n      this.canvas?.discardActiveObject();\n      this.selectedPiece = null;\n    }\n\n  }\n\n  private clearBoard(): void {\n    this.pieces.forEach((piece) => {\n      this.canvas?.remove(piece.object);\n    });\n    this.pieces = [];\n    this.tiles.forEach((tileData) => {\n      this.canvas?.remove(tileData.tile);\n    });\n    this.tiles = [];\n  }\n\n  public clearMaterial(): void {\n    this.pieces.forEach((piece) => {\n      this.canvas?.remove(piece.object);\n    });\n    this.pieces = [];\n  }\n\n  private connectMouseInput(): void {\n    if (this.canvas) {\n      this.canvas.on('object:moved', this.checkValidDrop.bind(this));\n      this.canvas.on('mouse:down', this.selectPiece.bind(this));\n    }\n  }\n\n  private generateTiles(): void {\n    if (this.canvas) {\n      if (!this.theme) {\n        console.log('Cannot generate board without theme');\n        return;\n      }\n      const tiles = [];\n      const padding = Math.floor((this.size - this.tileSize * 8) / 2);\n      for (let row = 7; row >= 0; row--) {\n        for (let col = 0; col < 8; col++) {\n          // move this to clone feature, only create the tiles once.\n\n          const tile = new fabric.Rect({\n            width: this.tileSize,\n            height: this.tileSize\n          });\n\n          // create piece\n          if (this.settings.orientation == 'white') {\n            tile.set('left', col * this.tileSize + padding);\n            tile.set('top', row * this.tileSize + padding);\n          } else {\n            tile.set('left', col * this.tileSize + padding);\n            tile.set('top', row * this.tileSize + padding);\n          }\n\n          tile.set('lockMovementX', true);\n          tile.set('lockMovementY', true);\n          tile.set('lockRotation', true);\n          tile.set('lockScalingX', true);\n          tile.set('lockScalingY', true);\n          tile.set('lockUniScaling', true);\n          tile.set('hasControls', false);\n          tile.set('hasBorders', false);\n          tile.set('selectable', false);\n          tile.setCoords();\n          if (row % 2 === 0) {\n            // even row 0, 2, 4, 6\n            if (col % 2 === 0) {\n              tile.setColor(this.theme.tileLight);\n            } else {\n              tile.setColor(this.theme.tileDark);\n            }\n          } else {\n            // odd row 1, 3, 5, 7\n            if (col % 2 === 0) {\n              tile.setColor(this.theme.tileDark);\n            } else {\n              tile.setColor(this.theme.tileLight);\n            }\n          }\n          this.tiles.push({ tile: tile });\n          tiles.push(tile);\n        }\n      }\n      const tileGroup = new fabric.Group(tiles, {\n        left: 0, top: 0\n      });\n      tileGroup.set('left', 0);\n      tileGroup.set('top', 0);\n      tileGroup.set('lockMovementX', true);\n      tileGroup.set('lockMovementY', true);\n      tileGroup.set('lockRotation', true);\n      tileGroup.set('lockScalingX', true);\n      tileGroup.set('lockScalingY', true);\n      tileGroup.set('hasControls', false);\n      tileGroup.set('hasBorders', false);\n      tileGroup.set('lock')\n      tileGroup.set('selectable', false);\n      tileGroup.set('originX', 'left');\n      tileGroup.set('originY', 'top');\n      this.canvas.add(tileGroup);\n      this.tileGroup = tileGroup;\n      tileGroup.moveTo(-30);\n      this.canvas.requestRenderAll();\n    }\n  }\n\n  private addTile(tileData: { tile: fabric.Object, piece?: Piece }) {\n    if (this.canvas) {\n      this.canvas.add(tileData.tile);\n      tileData.tile.moveTo(-100);\n      tileData.tile.setCoords();\n    }\n  }\n\n  private loadPieces(): BehaviorSubject<number> {\n    const count = new BehaviorSubject<number>(0);\n    this.loadPieceImage('wK', count);\n    this.loadPieceImage('wB', count);\n    this.loadPieceImage('wQ', count);\n    this.loadPieceImage('wR', count);\n    this.loadPieceImage('wP', count);\n    this.loadPieceImage('wN', count);\n    this.loadPieceImage('bK', count);\n    this.loadPieceImage('bB', count);\n    this.loadPieceImage('bQ', count);\n    this.loadPieceImage('bR', count);\n    this.loadPieceImage('bP', count);\n    this.loadPieceImage('bN', count);\n    return count;\n  }\n\n  private generateBoard(): void {\n    this.clearBoard();\n    this.generateTiles();\n  }\n\n  private loadPieceImage(\n    piece: string,\n    subject: BehaviorSubject<number>\n  ): void {\n    if (this.theme?.pieceSet) {\n      if (this.theme.isSpriteSheet) {\n      } else {\n        if (this.theme.fileExtension === '.svg') {\n          fabric.loadSVGFromURL(\n            this.theme.pieceSet + piece + this.theme.fileExtension,\n            (objects, options) => {\n              const obj = fabric.util.groupSVGElements(\n                objects,\n                options\n              ) as fabric.Group;\n              obj.left = -400;\n              obj.top = 0;\n              obj.moveTo(10);\n              this.pieceMap.set(piece, obj);\n              subject.next(subject.value + 1);\n            }\n          );\n        }\n      }\n    }\n  }\n\n  private resizeBoardObjects(size: number): void {\n    this.tileSize = Math.floor(this.size / 8);\n    const padding = Math.floor((this.size - (this.tileSize * 8)) / 2);\n    if (this.tileGroup) {\n      const border = padding / 2;\n      this.tileGroup.set('top', border);\n      this.tileGroup.set('left', border);\n      this.tileGroup.scaleToHeight((this.tileSize * 8) + border);\n      this.tileGroup.scaleToWidth((this.tileSize * 8) + border);\n      this.tileGroup.moveTo(-300);\n      this.tileGroup.setCoords();\n    }\n    // if (this.tiles.length > 0) {\n    //   for (let index = 0; index < 64; index++) {\n    //     const tile = this.tiles[index].tile;\n    //     const row = Math.floor(index / 8);\n    //     const col = index % 8;\n    //     tile.set('originX', 'left');\n    //     tile.set('originY', 'top');\n    //     tile.set('width', this.tileSize);\n    //     tile.set('height', this.tileSize);\n    //     tile.set('top', row * this.tileSize);\n    //     tile.set('left', col * this.tileSize);\n    //     tile.setCoords();\n    //   }\n    // }\n\n    this.pieces.forEach((pieceData) => {\n      const piece = pieceData.object;\n      if (\n        piece.left !== undefined &&\n        piece.top !== undefined &&\n        this.canvas\n      ) {\n        const row = Math.floor(pieceData.tile / 8);\n        const col = pieceData.tile % 8;\n        piece.scaleToHeight(this.tileSize);\n        if (this.settings.orientation == 'white') {\n          piece.set('left', Math.floor(col * this.tileSize) + padding);\n          piece.set('top', Math.floor((7 - row) * this.tileSize) + padding);\n        } else {\n          piece.set('left', Math.floor((7 - col) * this.tileSize) + padding);\n          piece.set('top', Math.floor(row * this.tileSize) + padding);\n        }\n        piece.moveTo(10);\n        piece.setCoords();\n      }\n    });\n    if (this.promotionDialog) {\n      this.promotionDialog.scaleToHeight(this.size);\n      this.promotionDialog.scaleToWidth(this.size);\n      this.promotionDialog?.moveTo(500);\n\n      // knight\n      let y = (this.size * .67) + 4\n      let x = (this.size * .205);\n      this.knightButton?.scaleToHeight(this.size * .15);\n      this.knightButton?.scaleToWidth(this.size * .15);\n      this.knightButton?.set('left', x);\n      this.knightButton?.set('top', y);\n      this.knightButton?.moveTo(510);\n      this.knightButton?.setCoords()\n      // bishop\n\n      x = (this.size * .4);\n      this.bishopButton?.scaleToHeight(this.size * .15);\n      this.bishopButton?.scaleToWidth(this.size * .15);\n      this.bishopButton?.set('left', x);\n      this.bishopButton?.set('top', y);\n      this.bishopButton?.moveTo(510);\n      this.bishopButton?.setCoords()\n      // rook\n\n      x = (this.size * .595);\n      this.rookButton?.scaleToHeight(this.size * .15);\n      this.rookButton?.scaleToWidth(this.size * .15);\n      this.rookButton?.set('left', x);\n      this.rookButton?.set('top', y);\n      this.rookButton?.moveTo(510);\n      this.rookButton?.setCoords()\n      // queen\n\n      x = (this.size * .79);\n      this.queenButton?.scaleToHeight(this.size * .15);\n      this.queenButton?.scaleToWidth(this.size * .15);\n      this.queenButton?.set('left', x);\n      this.queenButton?.set('top', y);\n      this.queenButton?.moveTo(510);\n      this.queenButton?.setCoords()\n    }\n  }\n\n  setDarkTile(color: string): void {\n    if (this.theme && this.tiles.length != 0) {\n      this.theme.tileDark = color;\n      for (let index = 0; index < 64; index++) {\n        const row = Math.floor(index / 8);\n        if (row % 2 === 0) {\n          if (index % 2 === 0) {\n            const tile = this.tiles[index].tile;\n            tile.set('fill', color);\n          }\n        } else {\n          if (index % 2 !== 0) {\n            const tile = this.tiles[index].tile;\n            tile.set('fill', color);\n          }\n        }\n      }\n      this.canvas?.requestRenderAll();\n    } else {\n      console.log('Cannot set board-canvas tile dark with Null theme');\n    }\n  }\n\n  setLightTile(color: string): void {\n    if (this.theme && this.tiles.length != 0) {\n      this.theme.tileLight = color;\n      for (let index = 0; index < 64; index++) {\n        const row = Math.floor(index / 8);\n        if (row % 2 !== 0) {\n          if (index % 2 === 0) {\n            const tile = this.tiles[index].tile;\n            tile.set('fill', color);\n          }\n        } else {\n          if (index % 2 !== 0) {\n            const tile = this.tiles[index].tile;\n            tile.set('fill', color);\n          }\n        }\n      }\n      this.canvas?.requestRenderAll();\n    } else {\n      console.log('Cannot set board-canvas tile light with Null theme');\n    }\n  }\n\n  setSize(size: number): void {\n    if (this.canvas) {\n      this.size = size;\n      this.tileSize = Math.floor(size / 8);\n      this.canvas.width = size;\n      this.canvas.height = size;\n      this.canvas.setDimensions({\n        width: size,\n        height: size,\n      });\n      this.resizeBoardObjects(size);\n      this.canvas.requestRenderAll();\n    }\n  }\n\n  setInteractive(interactive: boolean): void {\n    if (interactive) {\n      if (this.canvas) {\n      }\n    } else {\n      if (this.canvas) {\n      }\n    }\n  }\n\n  setBoardToGamePosition(): void {\n    this.clearMaterial();\n    if (this.gameService.game.value !== null) {\n      const position = this.gameService.game.value.getPosition();\n      if (position) {\n        for (let index = 0; index < 64; ++index) {\n          const squareData = position.square(SquareNames[index]);\n          // get the first and last of the role and color\n          if (squareData.length >= 2) {\n            this.addPiece(index, squareData[0], squareData[1].toUpperCase());\n          }\n        }\n      }\n    }\n  }\n\n  requestRedraw(): void {\n    this.clearBoard();\n    this.generateBoard();\n  }\n}\n","<canvas id=\"{{ UUID }}-canvas\" style=\"position: absolute;\" [style.top]=\"0\" [style.left]=\"0\" [height]=\"size\"\n    [width]=\"size\" [style.width.px]=\"size\" [style.height.px]=\"size\" [style.z-index]=\"2\" resize>\n</canvas>","import { Component, OnInit, Input } from '@angular/core';\nimport { } from '@angular/material/slider';\n@Component({\n  selector: 'app-labeled-slider',\n  templateUrl: './labeled-slider.component.html',\n  styleUrls: ['./labeled-slider.component.scss']\n})\nexport class LabeledSliderComponent implements OnInit {\n  @Input() value = 18;\n  @Input() minimum = 14;\n  @Input() maximum = 24;\n  @Input() step = 1;\n  @Input() label = 'labeled slider';\n\n  constructor() { }\n\n  ngOnInit(): void {\n\n  }\n\n  inputEventCapture(event: any): void {\n    //console.log(event);\n  }\n\n}\n","<mat-slider #scoreFontSize thumbLabel class=\"ls-slider\" (input)=\"inputEventCapture($event)\" [value]=\"value\" [min]=\"minimum\" [max]=\"maximum\" [step]=\"step\"></mat-slider>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-toggle-switch',\n  templateUrl: './toggle-switch.component.html',\n  styleUrls: ['./toggle-switch.component.scss']\n})\nexport class ToggleSwitchComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>toggle-switch works!</p>\n","import { Component, OnInit, Input, AfterViewInit, SimpleChanges, OnChanges, Output } from '@angular/core';\nimport { GameScoreType, GameService, GameScoreItem } from '../../services/game.service';\nimport { OlgaService } from 'src/app/services/olga.service';\n\n@Component({\n  selector: 'app-game-score-item',\n  templateUrl: './game-score-item.component.html',\n  styleUrls: ['./game-score-item.component.scss']\n})\nexport class GameScoreItemComponent implements OnInit, AfterViewInit, OnChanges {\n  @Input() @Output() data: GameScoreItem = new GameScoreItem(null, -1);\n  @Output() typeName = '';\n\n  // visual nodes\n  public plyOn = false;\n  public ply = '';\n  GameScoreType = GameScoreType;\n  constructor(public olga: OlgaService, public gameService: GameService) {\n    // use data to actually set type\n\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.data) {\n      let newData = changes.data.currentValue as GameScoreItem;\n      this.data = newData;\n      if (this.data) {\n        if (this.isFullPly()) {\n          this.plyOn = this.olga.showingPly.value;\n        } else {\n          this.plyOn = this.olga.showingHalfPly.value;\n        }\n      }\n      this.ply = this.data.move.fullMoveNumber().toString() + '.';\n      this.data.getType();\n      this.updateTypeName();\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this.updateTypeName();\n  }\n\n  showPly(): boolean {\n    if (this.data) {\n      if (this.isFullPly()) {\n        return this.olga.showingPly.value;\n      }\n      return this.olga.showingHalfPly.value;\n    }\n    return false;\n  }\n  isFullPly(): boolean {\n    if (this.data) {\n      return (this.data.type & GameScoreType.HalfPly) == 0;\n    }\n    return false;\n  }\n  setCurrent(current: boolean): void {\n    if (this.data) {\n      this.updateTypeName(current);\n    }\n  }\n  getPly(): number {\n    if (this.data && this.data.move) {\n      return this.data.move.fullMoveNumber();\n    }\n    return -1;\n  }\n\n  isGroup(): boolean {\n    if (this.data) {\n      return (this.data.type & GameScoreType.Group) == 1;\n    }\n    return false;\n  }\n\n  isAnnotation(): boolean {\n    if (this.data) {\n      return (this.data.type & GameScoreType.Annotation) == 1;\n    }\n    return false;\n  }\n\n  clickMove(): void {\n    if (this.data.move.variations().length > 0) {\n      this.gameService.displayVariations(this.data);\n    }\n  }\n\n  protected updateTypeName(current = false): void {\n    //this.typeName = '';\n    if (this.data) {\n      if ((this.data.type & GameScoreType.Annotation) == 1) {\n        this.typeName += 'Annotation ';\n      }\n      if ((this.data.type & GameScoreType.Group) == 1) {\n        this.typeName += 'Group ';\n      }\n      if ((this.data.type & GameScoreType.HalfPly) == 1) {\n        this.typeName += 'HalfPly ';\n      }\n      const variations = this.data.move.variations();\n      if (variations && variations.length > 0) {\n        this.typeName += 'Variation ';\n      } else {\n        console.log('No Variations found -> ' + this.data.move.notation())\n      }\n    }\n  }\n}\n","<!-- GameScoreGroup -->\n<div class=\"gsi-container {{typeName}}\">\n  <div class=\"gsi-ply\" *ngIf=\"this.plyOn\">\n    {{ply}}</div>\n  <!-- <div class=\"gsi-move {{typeName}}\" *ngIf=\"!isGroup()\">..&nbsp;</div> -->\n  <div class=\"gsi-move\" *ngIf=\"this.data.move\" (click)=\"clickMove()\">\n    {{this.data.move.notation()}}</div>\n  <div class=\"gsi-comment\" *ngIf=\"this.data.move\" (contextmenu)=\"this.gameService.editComment(data)\">\n    {{this.data.move.comment()}}</div>\n</div>\n<!-- Variation -->","import {\n  Component,\n  OnInit,\n  Input,\n  Output,\n  AfterViewInit,\n  ViewChild,\n  ElementRef,\n  ViewChildren,\n  QueryList,\n} from '@angular/core';\nimport {\n  trigger,\n  state,\n  style,\n  animate,\n  transition,\n  // ...\n} from '@angular/animations';\nimport {\n  GameService,\n  GameScoreItem,\n  GameScoreType,\n  GameScoreAnnotation,\n  GameScoreVariation\n} from '../services/game.service';\nimport { MenuGameScoreItemComponent } from './menu-game-score-item/menu-game-score-item.component';\nimport { GameScoreItemComponent } from './game-score-item/game-score-item.component';\nimport { BehaviorSubject } from 'rxjs';\nimport { OlgaService } from '../services/olga.service';\nimport { LayoutService } from '../services/layout.service';\ninterface Move {\n  w: string;\n  b: string;\n};\n\nexport enum ScoreViewType {\n  Table = 101,\n  Flow = 202\n};\n\n@Component({\n  selector: 'app-game-score-ux',\n  templateUrl: './game-score.ux.html',\n  styleUrls: ['./game-score.ux.scss'],\n})\nexport class GamescoreUxComponent implements OnInit, AfterViewInit {\n  @Output() readonly scoreFontFamily = new BehaviorSubject<string>('Caveat');\n  @Output() readonly scoreFontSize = new BehaviorSubject<number>(18);\n  @ViewChild(MenuGameScoreItemComponent)\n  scoreItemMenu: MenuGameScoreItemComponent | null = null;\n  @ViewChild('resizeHandle')\n  resizeHandle: ElementRef | null = null;\n  @ViewChild('pgnData')\n  pgnData: ElementRef | null = null;\n  @ViewChild('gamescore-container') container: ElementRef | null = null;\n  @Input() gameScoreFontSize: number | null = 24;\n  @Input() UUID = '';\n  columnCount = 3;\n  gameScore: Move[] = [];\n  rowHeight = '50px';\n  maxPlySize = 178;\n  @Output() resizing = false;\n  @Input() scoreWidth: number | null = 360;\n  @Input() viewType: ScoreViewType = ScoreViewType.Flow;\n  protected previousCursor = 'pointer';\n  GameScoreType = GameScoreType;\n  ScoreViewType = ScoreViewType;\n\n  // Settings\n  @Output() readonly currentItem = new BehaviorSubject<GameScoreItem | null>(null);\n\n  @ViewChildren(GameScoreItemComponent) scoreItems: QueryList<GameScoreItemComponent> | null = null;\n  @Output() currentScoreItem: GameScoreItemComponent | null = null;\n  constructor(public olga: OlgaService, public gameService: GameService, public layoutService: LayoutService) {\n    this.gameService.figurineNotation.subscribe((figurineNotation) => {\n      if (figurineNotation) {\n        this.scoreFontFamily.next('FigurineSymbolT1');\n      } else {\n        this.scoreFontFamily.next('Cambria');\n      }\n    });\n    // this.gameService.currentItem.subscribe((item) => {\n    //   if (this.currentScoreItem) {\n    //     this.currentScoreItem.setCurrent(false);\n    //   }\n    //   if (this.scoreItems) {\n    //     this.scoreItems.forEach((scoreItem) => {\n    //       if (scoreItem.data === item) {\n    //         scoreItem.setCurrent(true);\n    //         this.currentScoreItem = scoreItem;\n    //       }\n    //     });\n    //   }\n    //   // move to manually updating the elements\n    // })\n  }\n\n  ngOnInit(): void {\n    //console.log(this.gameScore);\n  }\n\n  ngAfterViewInit(): void {\n    if (this.pgnData) {\n      this.gameService.loadPGN(this.pgnData.nativeElement.value);\n      this.layoutService.resizeElement = document.getElementById('resize-handle-' + this.UUID);\n      //console.log(this.scoreItems);\n      window.setTimeout(() => {\n        if (this.scoreItems) {\n          this.currentScoreItem = this.scoreItems.first;\n        }\n      }, 300);\n    }\n    this.resizeScore();\n  }\n\n  resizeScore(): void {\n    if (this.scoreWidth) {\n      this.columnCount = Math.floor(this.scoreWidth / this.maxPlySize);\n    } else {\n      this.columnCount = 3;\n    }\n  }\n\n  openItemMenu(event: MouseEvent, item: GameScoreItemComponent): void {\n    event.preventDefault();\n    event.stopPropagation();\n    console.log(item);\n    if (item.data) {\n      //item.setCurrent(!item.data.current);\n    }\n    switch (item.data.type) { // open different menus\n\n    }\n    //this.scoreItemMenu?.openAt(item);\n  }\n\n  ignoreEvent(event: MouseEvent): void {\n    event.preventDefault();\n    event.stopPropagation();\n  }\n\n  setWidth(width: number | null): void {\n    if (width) {\n      this.columnCount = Math.floor(width / this.maxPlySize);\n    }\n  }\n\n  resetResizeHandle(event: DragEvent | MouseEvent): void {\n    this.resizing = false;\n    if (this.resizeHandle && event.buttons === 0) {\n      document.body.style.cursor = this.previousCursor;\n    }\n    if (this.resizeHandleEvent) {\n      this.resizeHandleEvent(event);\n    }\n  }\n\n  setGrabCursor(event: DragEvent | MouseEvent): void {\n    this.previousCursor = document.body.style.cursor;\n    this.resizing = true;\n    document.body.style.cursor = 'grab';\n    if (this.resizeHandle) {\n      this.resizeHandle.nativeElement.style.cursor = 'grab';\n    }\n  }\n\n  startTouch(event: TouchEvent): void {\n    this.previousCursor = document.body.style.cursor;\n    const touchPoint = event.touches[0];\n    if (touchPoint) {\n      if (this.layoutService.resizeElement) {\n        this.resizing = true;\n      }\n    }\n  }\n\n  stopTouch(event: TouchEvent) {\n    this.resizing = false;\n  }\n\n  loadPGN(pgn: string) {\n    this.gameService.loadPGN(pgn);\n    this.ngOnInit();\n  }\n\n  resizeHandleEvent(event: DragEvent | MouseEvent): void {\n    if (this.resizing) {\n      this.resizeScore();\n    }\n  }\n\n  resizeTouchEvent(event: TouchEvent): void {\n    if (this.resizing) {\n      this.resizeScore();\n    }\n  }\n\n  resizeHandleCore(event: DragEvent | MouseEvent): void {\n    event.preventDefault();\n    event.stopPropagation();\n    document.body.style.cursor = 'grab';\n    if (this.resizeHandle) {\n      this.resizeHandle.nativeElement.style.cursor = 'grab';\n    }\n    if (event.buttons > 0 && this.resizeHandleEvent) {\n      this.resizeHandleEvent(event);\n    }\n  }\n}\n","<app-menu-game-score-item class=\"gs-menu\" #scoreItemMenu [style.z-index]=\"scoreItemMenu.open ? 20 : -1\"\n  (click)=\"scoreItemMenu.open = false;\"></app-menu-game-score-item>\n<mat-card class=\"gamescore-container\">\n  <h1 class=\"score-title\">Score</h1>\n  <mat-card-content *ngIf=\"viewType === ScoreViewType.Flow\" class=\"score-list\">\n    <app-game-score-item #scoreItem *ngFor=\"let item of (gameService._items | async); index as i;\" [data]=\"item\">\n    </app-game-score-item>\n  </mat-card-content>\n</mat-card>\n<div><input style=\"visibility:hidden;display: none;\" #pgnData value='[Event \"GMA, Wijk aan Zee NED\"]\n[Site \"?\"]\n[Date \"2003.??.??\"]\n[Round \"1\"]\n[White \"Anand,V\"]\n[Black \"Radjabov,T\"]\n[Result \"1/2\"]\n[WhiteElo \"2750\"]\n[BlackElo \"2620\"]\n[ECO \"C12\"]\n[PlyCount \"55\"]\n[Annotator \"Hathaway\"]\n\n1. e4 e6 \n{ Im not terribly familiar with the style of Radjabov, so I dont know if this is his usual opening. }\n2. d4 d5 3. Nc3 Nf6 (3...Bb4 \n{ The Winawer Variation is probably best, though not as easy to play. }) 4. Bg5\n{ threatens e4-e5xf6 }\n (4. e5 \n{ keeps pieces on the board and avoids ...dxe4 }) 4...Bb4 (4...Be7 \n{ is more common and aims to trade dark-square bishops to ease Blacks cramp }) (4...dxe4 \n{ aims to avoid any cramp by bringing pieces into alignment for trading, though White does get at least one very good piece (Ne4 or Bg5) and an easier time castling queen-side, to stir up king-side threats }\n 5. Nxe4 Be7  (\n{ or Rubinsteins }\n 5...Nbd7) ) 5. e5 h6 6. Bd2 (6. Bh4 g5 7. exf6 gxh4 \n{ Black seems to equalize a little easier after this as he can win Pf6 in exchange for Ph4. }) 6...Bxc3 (6...Nfd7 7. Qg4 \n{ and White isnt incurring any weaknesses, but is either gaining Bb4 for Nc3 or after ...Bb4-f8 Black is cramped again }\n  (7. Nb5 $5 Bxd2+ 8. Qxd2 a6 9. Na3) ) 7. bxc3 Ne4 8. Qg4\n{ White immediately takes aim at the backward Pg7 & Rh8 and usually Pf7 & Ke8. For the moment Bd2 serves to defend Pc3 and to prevent ...Qd8-g5 (offering a queen trade to end the pressure) . }\n (\n{ While }\n 8. h4 \n{ is often useful in the French Defense with this pawn structure, I dont know that its been tried in this opening on this move. }) 8...g6 9. Bd3 (9. h4 \n{ could take over for Bd2 in guarding g5 and preparing a later attack by f2-f4, h4-h5 or vice versa. It also would allow Rh1 to develop to build the direct frontal threats to Pf7 & Pg6. }\n 9...c5 10. Bd3 Nxd2 11. Kxd2 Qa5 12. dxc5 Qxc5 13. Ne2 Qxf2 $4 14. Raf1 Qc5 15. Bxg6 fxg6 16. Qxg6+)  (9. Qd1 \n{ Fritz7; Odd! }) 9...Nxd2 10. Kxd2 c5 11. Nf3\n{ This has been considered the main line for many years, but I wonder if White can allow ...c5-c4 and not use more pawns to fight through Blacks pawns. }\n (11. dxc5 \n{ is probably still wrong because of ...Qg5+ }) (11. h4 \n{ still makes sense }) 11...Bd7 (11...c4 $6 \n{ The problem with this is that however much it slows White, it also limits Blacks queen-side offensive possibilities. }) (\n{ Prematurely playing }\n 11...cxd4 \n{ lets White straighten-out his pawns and Black has made no real progress. }\n 12. cxd4)  (11...Qa5 $5 \n{ Fritz7: with the idea of ...cxd4 }) 12. dxc5 Qe7 13. Rab1 Bc6 14. Nd4 Nd7\n{ These last few moves have been quite unusual for a French Defense, but they make sense; Qe7 defends Pf7 while Bc6 defends Pb7 and Nd7 threatens Pc5 & Pe5. }\n15. Rhe1 (15. Nxc6 bxc6 16. Rb7 Qxc5 17. Qf4 g5 18. Qd4 Qa5 19. Rb2 c5 $11 \n{ Fritz7 }) 15...Nxc5 16. Re3\n{ another way of getting the rook into position, in front of the king-side pawns, to threaten Blacks king-side pawns }\n16...h5 17. Qg3 O-O-O\n{ After this it would seem Blacks pieces can handle any threats White can generate. However, black might also have ideas of winning. How might he do that? Well, ...Be8, ...Kc8-b8-a8, ...Rd8-c8, ...Nc5-a4 and Pc3 is a target (slow I know) . Another idea is to keep Kd2 from ever escaping to safety by advancing ...h5-h4-h3 to break open the king-side and open the h-file for Blacks rooks. }\n (17...h4 $15 \n{ Fritz7 }) (17...Nxd3 $15 \n{ Fritz7 }) 18. Ke1 Qc7 (18...h4 19. Qg4 Rh5) 19. h4\n{ Anand aims to keep the king-side perfectly safe to ensure a draw. }\n (19. Qh4 \n{ Fritz7 }) 19...Qa5 20. Kf1 (20. Nxc6 bxc6 21. Kf1 Kd7 20. Qf4 Ke8 $11 \n{ Fritz7 }) 20...Rd7 (\n{ Premature is }\n 20...Qxa2 21. Ree1 Qa5  (21...Ba4 $11 \n{ Fritz7 })  22. Ra1 Qxc3 23. Nxc6 bxc6 24. Ba6+ $18) 21. Qf4\n{ This general activity is perfect. It threatens Pf7, defends Nd4 and in some cases prepares for Qf4-b4 to attack Kc8. }\n (21. Ree1 \n{ Fritz7 }) (21. Nxc6 bxc6 22. Ree1 \n{ Fritz7 }) 21...Rhd8\n{ Black is probably wondering why he organized his pieces to only defend light squares. Only Qa5 and Nc5 can get to dark squares and that makes Whites task of coordinating much easier. }\n (21...Qxa2 \n{ still premature }\n 22. Nxc6 bxc6 23. Qb4 Nb7 24. Ree1)  (21...Qxc3 $4 22. Nxc6 bxc6 23. Ba6+)  (21...Rc7 $14 \n{ Fritz7 }) (21...Na4 $14 \n{ Fritz7 }) 22. Kg1 (22. Nxc6 bxc6 23. Qb4 Qxb4 24. cxb4 d4 25. Ree1 Na4 $11 \n{ Fritz7 }) 22...Nxd3 23. Rxd3 (23. cxd3 Qxc3 24. Rg3 Rc7 $14 \n{ Fritz7 }) 23...Qc5 (23...Qxa2 24. Rdd1 Qc4 $11 \n{ Fritz7 }) 24. Rb4 a5 $2 (24...Rc7 \n{ Mark and Fritz7 agree! }) 25. Rb1 Rc7 26. Qc1 Be8 27. Nb3 (27. Qb2 \n{ If White commits too quickly to the b-file then Black might actually create some play against Ph4 and on the c-file. }\n 27...Qe7  (27...a4 $11 \n{ Fritz7 })  28. Nf3 Rc4 \n{ possibly preparing ...b5 }) 27...Qb6 (27...Qc4 28. Nxa5 Qxh4 $14 \n{ Fritz7 }) 28. Nd4\n{ Black created the weakness (Pa5) and cant quite defend it, so Anand forces a draw. }\n1/2-1/2' class=\"input-box\" #pgnBox type=\"text\" (click)=\"loadPGN(pgnBox.value)\" (change)=\"loadPGN(pgnBox.value)\"></div>\n\n<div #resizeHandle id=\"resize-handle-{{UUID}}\" class=\"resize-handle\" (touchstart)=\"startTouch($event)\"\n  (touchend)=\"stopTouch($event)\" (mouseup)=\"resetResizeHandle($event)\" (mousedown)=\"setGrabCursor($event)\">\n</div>","import { Component, OnInit, Input, ViewChild, AfterViewInit } from '@angular/core';\nimport { GameScoreItem } from 'src/app/services/game.service';\nimport { MatMenuTrigger } from '@angular/material/menu';\n\n@Component({\n  selector: 'app-menu-game-score-item',\n  templateUrl: './menu-game-score-item.component.html',\n  styleUrls: ['./menu-game-score-item.component.scss']\n})\n\nexport class MenuGameScoreItemComponent implements OnInit, AfterViewInit {\n  @Input() data: GameScoreItem | null = null\n  @Input() menuTitle = 'Menu Title';\n  public open = false;\n  @ViewChild(MatMenuTrigger) matMenuTrigger: MatMenuTrigger | null = null;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  ngAfterViewInit(): void {\n    this.matMenuTrigger?.menuClosed.subscribe(() => {\n      //console.log('Menu closed');\n    });\n  }\n\n  ignoreEvent(event: MouseEvent): void {\n    //console.log('Ignoring ' + event);\n    event.preventDefault();\n    event.stopPropagation();\n  }\n\n  openAt(item: GameScoreItem): void {\n    this.open = true;\n  }\n}\n","<mat-card class=\"gs-context-menu-container\" (click)=\"open = false\">\n  <mat-card-title>{{ menuTitle }}</mat-card-title>\n  <mat-card-content class=\"gs-context-menu-overaly\">\n    <button mat-button class=\"context-menu-button\">Add</button>\n    <button mat-button class=\"context-menu-button\">Remove</button>\n    <button mat-button class=\"context-menu-button\">Keep</button>\n    <button mat-button class=\"context-menu-button\">Delete</button>\n    <button mat-button class=\"context-menu-button\">Restore</button>\n  </mat-card-content>\n</mat-card>\n","import { Component, OnInit } from '@angular/core';\nimport { GameService } from 'src/app/services/game.service';\n\n@Component({\n  selector: 'olga-controls',\n  templateUrl: './olga-controls.component.html',\n  styleUrls: ['./olga-controls.component.scss']\n})\nexport class OlgaControlsComponent implements OnInit {\n\n  constructor(public gameService: GameService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"quick-actions-container\">\n        <div (click)=\"gameService.togglePlay()\" class=\"button play\">\n                <svg class=\"feather\">\n                        <use xlink:href=\"/assets/images/feather-sprite.svg#play\" />\n                </svg>\n        </div>\n        <div (click)=\"gameService.openEngine()\" class=\"button engine\">\n                <svg class=\"feather\">\n                        <use xlink:href=\"/assets/images/feather-sprite.svg#cpu\" />\n                </svg>\n        </div>\n</div>\n<div class=\"navigation-container\">\n        <div (click)=\"gameService.moveToStart();\" class=\"button start\"><svg class=\"feather\">\n                        <use xlink:href=\"/assets/images/feather-sprite.svg#chevrons-left\" /></svg></div>\n        <div (click)=\"gameService.previous();\" class=\"button previous\"><svg class=\"feather\">\n                        <use xlink:href=\"/assets/images/feather-sprite.svg#chevron-left\" /></svg></div>\n        <div (click)=\"gameService.advance();\" class=\"button next\"><svg class=\"feather\">\n                        <use xlink:href=\"/assets/images/feather-sprite.svg#chevron-right\" /></svg></div>\n        <div (click)=\"gameService.moveToEnd();\" class=\"button end\"><svg class=\"feather\">\n                        <use xlink:href=\"/assets/images/feather-sprite.svg#chevrons-right\" /></svg></div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { GameService, ChessMove } from '../services/game.service';\n\n//@ts-ignore\nimport { Node as KNode } from 'kokopu';\n@Component({\n  selector: 'olga-status',\n  templateUrl: './olga-status.component.html',\n  styleUrls: ['./olga-status.component.scss']\n})\nexport class OlgaStatusComponent implements OnInit {\n  readonly status = new BehaviorSubject<string>('White to move.');\n  constructor(gameService: GameService) {\n    gameService.attachStatus(this);\n  }\n\n  ngOnInit(): void {\n  }\n\n  openEngine(): void {\n\n  }\n  updateStatus(turn: string, last?: KNode) {\n    let message = 'White';\n    let move = '';\n    if (turn === 'b') {\n      message = 'Black';\n    }\n    message += ' to move. ';\n    if (last) {\n      message += 'Last: ' + last.fullMoveNumber() + (turn === 'b' ? '.' : '..') + move + last.notation();\n    }\n    this.status.next(message);\n  }\n\n  resetStatus(): void {\n    this.status.next('White to move.');\n  }\n}\n","<div class=\"status-text\">{{status | async}}</div>\n<div (click)=\"openEngine()\" class=\"button\"><svg class=\"feather\">\n        <use xlink:href=\"/assets/images/feather-sprite.svg#cpu\" />\n    </svg>\n    <div class=\"buttontext\">Engine</div>\n</div>","import { Injectable, Output, Input } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { BoardTheme } from '../canvas-chessboard/canvas-chessboard.component';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ColorService {\n  // DEFAULTING TO DARK COLOR PALLETE\n  // Main Elements (background, sub containers, context menu)\n  @Input() @Output() readonly textColor = 'white'; // Main Text Color\n  @Input() @Output() readonly textColorAttention = 'purple'; // Attention text\n  @Input() @Output() readonly textColorRemove = 'red'; // Remove/Delete/Close\n  @Input() @Output() readonly textColorAdd = 'green'; // Add/Create/Open\n  @Input() @Output() readonly textColorActive = 'light-blue'; // Add/Create/Open\n  @Input() @Output() readonly background = '#434343'; // Main background Color\n  @Input() @Output() readonly bgContainer = '#353535'; // background of Containers\n  @Input() @Output() readonly bgMenu = '#353535'; // background of Menus\n  @Input() @Output() readonly bgItem = '#353535'; // background of containers\n\n  // Context menu\n  @Input() readonly bgContext = '#CC9966';\n  @Input() readonly textColorContext = 'white';\n  @Input() readonly borderContext = 'solid black 1px';\n  @Input() readonly overlayContextBackground = 'rgb(199,199,199)';\n  @Input() readonly overlayContextBackgroundGradient =\n    'linear-gradient(153deg, rgba(199,199,199,0.9051995798319328) 41%, rgba(249,249,249,0.8911939775910365) 83%)';\n\n  // Control Elements (Buttons, sliders, number wheels, toggle switches)\n  @Input() @Output() readonly fgItem = '#00ffffff';\n  @Input() @Output() readonly fgItemContrast = '#e25400';\n\n  // Board Colors\n  @Input() @Output() readonly boardBGDark = new BehaviorSubject<string>(\n    '#81388f'\n  );\n  @Input() @Output() readonly boardBGLight = new BehaviorSubject<string>(\n    '#e0fffb'\n  );\n  @Input() @Output() readonly boardPieceSet = new BehaviorSubject<string>(\n    '../../assets/images/pieces/merida/'\n  );\n\n  // Game Score Variables\n  @Input() @Output() readonly gsTextColor = new BehaviorSubject<string>(\n    'white'\n  );\n  @Input() @Output() readonly gsBackground = new BehaviorSubject<string>(\n    '#353535'\n  );\n  @Input() @Output() readonly gsBorder = new BehaviorSubject<string>('');\n  @Input() @Output() readonly gsTextSize = new BehaviorSubject<string>('16px');\n\n  // Game Score Highlight Colors\n  @Input() @Output() readonly gsTextColorHG = new BehaviorSubject<string>(\n    'orange'\n  );\n  @Input() @Output() readonly gsBackgroundHG = new BehaviorSubject<string>(\n    '#353535'\n  );\n  @Input() @Output() readonly gsBorderHG = new BehaviorSubject<string>(\n    ''\n  );\n\n  // Game Score Annotation Colors\n  @Input() @Output() readonly gsTextColorAN = new BehaviorSubject<string>(\n    '#AED6F1'\n  );\n  @Input() @Output() readonly gsBackgroundAN = new BehaviorSubject<string>(\n    '#333333'\n  );\n  @Input() @Output() readonly gsBorderAN = new BehaviorSubject<string>(\n    ''\n  );\n  @Input() @Output() readonly gsTextSizeAN = new BehaviorSubject<string>('16px');\n\n  // Game Score Variation Colors\n  @Input() @Output() readonly gsTextColorVA = new BehaviorSubject<string>(\n    'white'\n  );\n  @Input() @Output() readonly gsBackgroundVA = new BehaviorSubject<string>(\n    '#353535'\n  );\n  @Input() @Output() readonly gsBorderVA = new BehaviorSubject<string>(\n    'black 1px solid'\n  );\n\n  // Game Score Ply Count\n  @Input() @Output() readonly gsTextColorPC = new BehaviorSubject<string>(\n    'white'\n  );\n  @Input() @Output() readonly gsBackgroundPC = new BehaviorSubject<string>(\n    '#353535'\n  );\n  @Input() @Output() readonly gsBorderPC = new BehaviorSubject<string>(\n    ''\n  );\n\n  @Output() propertyMap = new Map<BehaviorSubject<string>, string>();\n  // Menu specific Colors\n\n  // Title Colors\n  constructor() {\n    this.propertyMap.set(this.gsTextColorPC, '--gsTextColorPC');\n    this.propertyMap.set(this.gsBackgroundPC, '--gsBackgroundPC');\n    this.propertyMap.set(this.gsBorderPC, '--gsBorderPC');\n    this.propertyMap.set(this.gsTextColorVA, '--gsTextColorVA');\n    this.propertyMap.set(this.gsBackgroundVA, '--gsBackgroundVA');\n    this.propertyMap.set(this.gsBorderVA, '--gsBorderVA');\n    this.propertyMap.set(this.gsTextColorAN, '--gsTextColorAN');\n    this.propertyMap.set(this.gsBackgroundAN, '--gsBackgroundAN');\n    this.propertyMap.set(this.gsBorderAN, '--gsBorderAN');\n    this.propertyMap.set(this.gsTextColorHG, '--gsTextColorHG');\n    this.propertyMap.set(this.gsBackgroundHG, '--gsBackgroundHG');\n    this.propertyMap.set(this.gsBorderHG, '--gsBorderHG');\n    this.propertyMap.set(this.gsTextColorHG, '--gsTextColorHG');\n    this.propertyMap.set(this.gsBackgroundHG, '--gsBackgroundHG');\n    this.propertyMap.set(this.gsBorderHG, '--gsBorderHG');\n  }\n\n\n  boardTheme(): BoardTheme {\n    return new BoardTheme(\n      this.boardBGLight.value,\n      this.boardBGDark.value,\n      this.boardPieceSet.value\n    );\n  }\n\n  setDarkColorPalette(): void { }\n\n  setLightColorPalette(): void { }\n\n  setStoredColorPalette(): void {\n    // 1.) Read User color palette sent from CG.com\n    // 2.) Look for a cookie on disk (load from disk)\n    // 3.) User default CSS Styled color palette\n  }\n\n  initializeColorPalette(): void {\n    // Main Elements\n    document.documentElement.style.setProperty('--textCoolor', this.textColor);\n    document.documentElement.style.setProperty(\n      '--itextColorAttention',\n      this.textColorAttention\n    );\n    document.documentElement.style.setProperty(\n      '--textColorRemove',\n      this.textColorRemove\n    );\n    document.documentElement.style.setProperty(\n      '--textColorAdd',\n      this.textColorAdd\n    );\n    document.documentElement.style.setProperty(\n      '--textColorActive',\n      this.textColorActive\n    );\n    document.documentElement.style.setProperty('--background', this.background);\n    document.documentElement.style.setProperty('--bgItem', this.bgItem);\n    document.documentElement.style.setProperty(\n      '--bgContainer',\n      this.bgContainer\n    );\n    document.documentElement.style.setProperty('--bgMenu', this.bgMenu);\n\n    // Context Menu\n    document.documentElement.style.setProperty('--bgContext', this.bgContext);\n    document.documentElement.style.setProperty(\n      '--overlayContextBackground',\n      this.overlayContextBackground\n    );\n    document.documentElement.style.setProperty(\n      '--textColorContext',\n      this.textColorContext\n    );\n    document.documentElement.style.setProperty('--bgContext', this.bgContext);\n    document.documentElement.style.setProperty(\n      '--overlayContextBackgroundGradient',\n      this.overlayContextBackgroundGradient\n    );\n    document.documentElement.style.setProperty(\n      '--borderContext',\n      this.borderContext\n    );\n\n    // Game Score\n    document.documentElement.style.setProperty('--gsBackground', this.gsBackground.value);\n    document.documentElement.style.setProperty(\n      '--gsTextColor',\n      this.gsTextColor.value\n    );\n    document.documentElement.style.setProperty(\n      '--gsTextSize',\n      this.gsTextSize.value\n    );\n    document.documentElement.style.setProperty(\n      '--gsBackground',\n      this.gsBackground.value\n    );\n    document.documentElement.style.setProperty(\n      '--gsBorder',\n      this.gsBorder.value\n    );\n    document.documentElement.style.setProperty(\n      '--boardBGDark',\n      this.boardBGDark.value\n    );\n    this.propertyMap.forEach((value, key) => {\n      document.documentElement.style.setProperty(\n        value,\n        key.value\n      );\n    })\n  }\n}\n","import { Injectable, Input, Output, APP_INITIALIZER } from '@angular/core';\n\n//@ts-ignore\nimport { Game as KGame, pgnRead, Database as KDatabase, Variation as KVariation, Node as KNode, Position as KPosition } from 'kokopu';\nimport { BehaviorSubject, onErrorResumeNext } from 'rxjs';\nimport { OlgaService } from './olga.service';\nimport { CanvasChessBoard, SquareNames, Piece } from '../canvas-chessboard/canvas-chessboard.component';\nimport { GamescoreUxComponent } from '../game-score/game-score.ux';\nimport { OlgaStatusComponent } from '../olga-status/olga-status.component';\nimport { getSupportedInputTypes } from '@angular/cdk/platform';\nimport { ɵallowPreviousPlayerStylesMerge } from '@angular/animations/browser';\n\n// Game Score\n\n\nexport class GameScoreVariation {\n  variationData: GameScoreItem[];\n  constructor(variationData: GameScoreItem[] = []) { this.variationData = variationData; }\n}\n\nexport class GameScoreAnnotation {\n  annotation = '';\n  constructor(annotation: string = '') { this.annotation = annotation; }\n}\n\nexport class GameScoreItem {\n  type = 0;\n  move: KNode | null = null;\n  selection = 0;\n  current = false;\n\n  // flatten the variables\n\n  constructor(protected game: ChessGame | null = null, protected index: number, move?: KNode) {\n    this.move = move;\n    this.getType();\n  }\n\n  getType(): number {\n    this.type = 0;\n    if (this.move) {\n      const previous = this.previous();\n      const notation = this.move.notation();\n      let variations = this.move.variations();\n      if (previous) {\n        if (previous.move.moveColor() == 'w') {\n          this.type += GameScoreType.HalfPly;\n          if (!previous.move.comment()) {\n            this.type += GameScoreType.Group;\n          }\n        }\n      }\n      if (variations && variations.length > 0) {\n        this.type += GameScoreType.Variation;\n      } else if (this.move.comment()) {\n        this.type += GameScoreType.Annotation;\n      } else {\n        let comment = null;\n        if (previous && previous.move) {\n          comment = previous.move.comment();\n        }\n        if ((!previous && this.move.moveColor() == 'w') || !comment) {\n          this.type += GameScoreType.Group;\n        }\n      }\n    }\n    return this.type;\n  }\n\n  next(): GameScoreItem | null {\n    if (this.game) {\n      return this.game.getNext(this.index);\n    }\n    return null;\n  }\n  previous(): GameScoreItem | null {\n    if (this.game) {\n      return this.game.getPrevious(this.index);\n    }\n    return null;\n  }\n  select(): void {\n\n  }\n}\n\nexport class ChessMove {\n  to: number = 0;\n  from: number = 0;\n  role: string = '';\n  color: string = '';\n  capture?: { role: string, color: string };\n  promotion?: { role: string };\n  promoteFunction?: any;\n}\n\n\nexport class ChessGame {\n  protected position: KPosition | null = null;\n  protected currentNode: KNode | null = null;\n  protected currentVariation: KVariation | null = null;\n  protected currentIndex = -1;\n  protected nodeMap: Array<KNode | KVariation> = [];\n  readonly score = new BehaviorSubject<GameScoreItem[] | null>(null);\n  protected moveMap: KNode | KVariation[] = [];\n  protected gameVariations: KVariation[] = [];\n  protected variation: KVariation | null = null;\n  protected startNode: KNode | null = null;\n  protected lastNode: KNode | null = null;\n  protected isVariation = false;\n  public fen = '';\n\n  protected static compareKNode(left: KNode, right: KNode): boolean {\n    if (left !== null && right !== null && left !== undefined && right !== undefined) {\n      const leftMove = left._info.moveDescriptor;\n      const rightMove = right._info.moveDescriptor;\n      return (leftMove.from() === rightMove.from() && leftMove.to() === rightMove.to());\n    }\n    return false;\n  }\n\n  protected static compareVariation(left: KVariation, right: KVariation): boolean {\n    if (left !== null && right !== null && left !== undefined && right !== undefined) {\n      if (ChessGame.compareKNode(left.first(), right.first())) {\n        return (left.comment() === right.comment() && left.initialFullMoveNumber() === right.initialFullMoveNumber());\n      }\n    }\n    return false;\n  }\n\n  protected getLastNode(): KNode {\n    let node = this.currentNode;\n    while (node && node.next()) {\n      node = node.next();\n    }\n    return node;\n  }\n\n  protected setNode(node: KNode) {\n    this.position = node.position();\n    this.currentNode = node.next();\n    this.lastNode = this.getLastNode();\n    if (!this.currentNode) {\n      this.currentNode = this.lastNode;\n    }\n    this.fen = this.position.fen();\n    this.gameService.board.value?.setBoardToGamePosition();\n    this.gameService.status.value?.updateStatus(this.position.turn(), node);\n  }\n\n  public onVariant(): boolean {\n    return this.isVariation;\n  }\n\n  public getNext(index: number): GameScoreItem | null {\n    const next = index + 1;\n    if (next >= 0 && next < this.nodeMap.length) {\n      return this.nodeMap[next];\n    }\n    return null;\n  }\n\n  public getPrevious(index: number): GameScoreItem | null {\n    const prev = index - 1;\n    if (prev >= 0 && prev < this.nodeMap.length) {\n      return this.nodeMap[prev];\n    }\n    return null;\n  }\n\n  public performPromotion(move: ChessMove) {\n    if (move.promotion && move.promoteFunction) {\n      //const moveDesc = 1\n      const moveDesc = move.promoteFunction(move.promotion.role.toLowerCase());\n      if (this.position.play(moveDesc)) {\n        const node = this.variation.play(moveDesc);\n        if (!this.lastNode || this.lastNode == this.currentNode) {\n          this.lastNode = node;\n        }\n        if (!this.startNode) {\n          this.startNode = node;\n        }\n        this.currentNode = node;\n        this.currentNode._info.moveDescriptor = moveDesc;\n      }\n    }\n  }\n  public makeMove(move: ChessMove, fromPGN = false): void {\n    const lastNode = this.currentNode;\n    if (this.currentNode) {\n      const pgnMove = this.currentNode._info.moveDescriptor;\n      const toSquare = SquareNames[move.to];\n      const fromSquare = SquareNames[move.from];\n      const next = this.currentNode.next();\n      const legal = this.position.isMoveLegal(fromSquare, toSquare);\n      if (pgnMove && pgnMove.from() == fromSquare && pgnMove.to() == toSquare) { // not a variant\n        this.position.play(pgnMove);\n        if (fromPGN) {\n          if (pgnMove.isPromotion()) {\n            move.promoteFunction = legal;\n            this.gameService.board.value?.showPromotionDialog(move);\n          }\n          if (pgnMove.isCastling()) {\n            this.gameService.board.value?.setBoardToGamePosition();\n          }\n          this.gameService.board.value?.makeMove(move);\n        }\n        this.currentNode = next;\n\n\n\n\n\n        // const move = new ChessMove();\n        // move.from = SquareNames.indexOf(this.currentNode._info.moveDescriptor.from());\n        // move.to = SquareNames.indexOf(this.currentNode._info.moveDescriptor.to());\n        // let newTo = move.to;\n        // let newFrom = move.from;\n        // if (this.currentNode._info.moveDescriptor._to >= 64) {\n        //   let rowFrom = Math.ceil(newFrom / 8);\n        //   let colFrom = newFrom % 8;\n        //   newFrom = (rowFrom * 8) - colFrom;\n\n        //   let rowTo = Math.floor(newTo / 8);\n        //   let colTo = newTo % 8;\n\n        //   newTo = (rowTo * 8) - colTo;\n        //   console.log(SquareNames[newFrom]);\n        //   console.log(SquareNames[newTo]);\n        // }\n        // if (fromPGN && this.gameService.board.value !== null) {\n        //   this.gameService.board.value.makeMove(move);\n        // }\n        // this.gameService.status.value?.updateStatus(this.position.turn(), this.currentNode);\n      } else {\n        // look for an existing variant\n        console.log('Check Variants= ' + pgnMove.from() + ' -> ' + pgnMove.to());\n        const variations = this.currentNode.variations();\n        this.isVariation = true;\n        this.gameService.isVariant.next(this.isVariation);\n        variations.forEach((variation: KVariation) => {\n          const firstMove = variation.first();\n          if (firstMove && firstMove._info.moveDescriptor) {\n            const test = firstMove._info.moveDescriptor;\n            if (test.to() == toSquare && test.from() == fromSquare) {\n              this.variation = variation;\n              this.startNode = firstMove;\n              this.position.play(test);\n              this.currentNode = firstMove.next();\n              if (this.currentNode == null) {\n                this.currentNode = this.lastNode = this.startNode;\n              }\n              if (this.position.play(this.currentNode.notation())) {\n                const node = this.variation.play(this.currentNode.notation());\n                if (node) {\n                  if (!this.lastNode || this.lastNode == this.currentNode) {\n                    this.lastNode = node;\n                  }\n                  if (!this.startNode) {\n                    this.startNode = node;\n                  }\n                  this.currentNode = node;\n                  this.currentNode._info.moveDescriptor = this.currentNode.notation();\n                  this.gameService.board.value?.setBoardToGamePosition();\n                }\n              }\n            } else {\n              console.log('Variation checked: ' + test.from() + ' -> ' + test.to());\n            }\n          }\n        });\n      }\n    }\n    if (!ChessGame.compareKNode(lastNode, this.currentNode)) {\n      this.gameService.status.value?.updateStatus(this.position.turn(), lastNode);\n    }\n  }\n\n  constructor(protected gameService: GameService, public game?: KGame) {\n    if (game) {\n      this.setGame(this.game)\n    }\n  }\n\n  public getPosition(): KPosition | null {\n    return this.position;\n  }\n\n  setGame(game: KGame): void {\n    this.game = game;\n    this.variation = this.game.mainVariation() as KVariation;\n    this.gameVariations = [];\n    this.gameVariations.push(this.variation);\n    this.position = this.variation.initialPosition() as KPosition;\n    this.fen = this.position.fen();\n    this.currentNode = this.startNode = this.variation.first() as KNode;\n    if (this.gameService.board.value) {\n      this.gameService.board.value.setBoardToGamePosition();\n    }\n    const items = [];\n    this.nodeMap = [];\n    let nextScore = this.startNode as KNode;\n    let index = 0;\n    let previous: GameScoreItem | null = null;\n    while (nextScore) {\n      if (nextScore) {\n        const gItem = new GameScoreItem(this, index, nextScore);\n        this.nodeMap[index] = gItem;\n        previous = gItem;\n        //this.insertVariation(index, gItem);\n        nextScore = nextScore.next();\n        items.push(gItem);\n        ++index;\n      }\n    }\n    this.score.next(items);\n    console.log(this.nodeMap);\n  }\n\n\n  // navigation\n  public advance(updateBoard = true): boolean {\n    if (!this.isFinalPosition()) {\n      const next = this.currentIndex + 1;\n      const node = this.nodeMap[next]\n      if (node) { // next exists\n        this.navigateToNode(node);\n        return true;\n      }\n\n    }\n    // if (this.position) {\n    //   if (this.currentNode && (this.position.isMoveLegal(this.currentNode._info.moveDescriptor.from(), this.currentNode._info.moveDescriptor.to()) !== false)) {\n    //     const move = new ChessMove();\n    //     move.from = SquareNames.indexOf(this.currentNode._info.moveDescriptor.from());\n    //     move.to = SquareNames.indexOf(this.currentNode._info.moveDescriptor.to());\n    //     let newTo = move.to;\n    //     let newFrom = move.from;\n    //     if (this.currentNode._info.moveDescriptor._to >= 64) {\n    //       let rowFrom = Math.ceil(newFrom / 8);\n    //       let colFrom = newFrom % 8;\n    //       newFrom = (rowFrom * 8) - colFrom;\n\n    //       let rowTo = Math.floor(newTo / 8);\n    //       let colTo = newTo % 8;\n\n    //       newTo = (rowTo * 8) - colTo;\n    //     }\n    //     this.makeMove(move, true);\n    //     return true;\n    //   }\n    // }\n    return false;\n  }\n\n  public navigateToNode(node: GameScoreItem, variation?: KVariation) {\n    if (variation == null || ChessGame.compareVariation(this.variation, variation)) {\n      let searchNode = this.startNode;\n      let notFound = true;\n      while (searchNode && notFound) {\n        if (ChessGame.compareKNode(node, searchNode)) {\n          notFound = false;\n        } else {\n          searchNode = searchNode.next();\n        }\n      }\n      if (!notFound) {\n        this.setNode(searchNode);\n      }\n    }\n  }\n\n  public moveToStart(): void {\n    this.position = this.game.initialPosition();\n    this.variation = this.game.mainVariation();\n    this.startNode = this.currentNode = this.variation.first();\n    this.lastNode = this.getLastNode();\n    if (!this.currentNode) {\n      this.currentNode = this.lastNode;\n    }\n    this.fen = this.position.fen();\n    this.gameService.board.value?.setBoardToGamePosition();\n    this.gameService.status.value?.updateStatus(this.position.turn());\n  }\n  public moveToEnd(): void {\n    this.setNode(this.lastNode);\n    // if (this.currentNode && this.position && this.currentNode.next() && this.gameService.board.value) {\n    //   while (this.advance()) { }\n    // }\n  }\n\n  public previous(): boolean {\n    if (!this.isStartingPosition() && this.gameService.board.value) {\n      if (!ChessGame.compareKNode(this.startNode, this.currentNode)) {\n        let currentNode = this.startNode;\n        let previous = null;\n        while (currentNode.next() && !ChessGame.compareKNode(currentNode.next(), this.currentNode)) {\n          previous = currentNode;\n          currentNode = currentNode.next();\n        }\n        const move = currentNode._info.moveDescriptor;\n        if (this.gameService.board.value) {\n          const unmove = new ChessMove();\n          unmove.to = SquareNames.indexOf(move.to());\n          unmove.from = SquareNames.indexOf(move.from());\n          if (move.isCapture()) {\n            const piece = move.capturedPiece();\n            const color = move.color();\n            if (piece && color) {\n              unmove.capture = { role: piece.toUpperCase(), color: color === 'w' ? 'b' : 'w' };\n            }\n          }\n          this.gameService.board.value.unMakeMove(unmove);\n        }\n        this.position = currentNode.positionBefore();\n        this.gameService.status.value?.updateStatus(this.position.turn(), previous);\n        this.fen = this.position.fen();\n        this.currentNode = currentNode;\n        if (move.isCastling()) {\n          this.gameService.board.value.setBoardToGamePosition();\n        }\n        return true;\n      }\n    }\n    return false;\n  }\n  public isStartingPosition(): boolean {\n    return ChessGame.compareKNode(this.variation.first(), this.currentNode);\n  }\n\n  public isFinalPosition(): boolean {\n    return (!this.currentNode || this.currentNode.next() === null);\n  }\n\n  public createScoreItems(): GameScoreItem[] {\n    return [];\n  }\n\n}\n\nexport enum GameScoreType {\n  HalfPly = 1,\n  Group = 2,\n  Variation = 4,\n  Annotation = 8,\n  Selected = 16\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GameService {\n  @Input() @Output() readonly figurineNotation = new BehaviorSubject<boolean>(false);\n  public _items = new BehaviorSubject<GameScoreItem[]>([]);\n  private scoreData: { items: GameScoreItem[] } = { items: [] };\n  readonly currentScore = this._items.asObservable();\n\n  private _fen = new BehaviorSubject<string>('');\n  readonly fen = this._fen.asObservable();\n\n  private _games = new BehaviorSubject<ChessGame[]>([]);\n  private gamesData: { games: ChessGame[] } = { games: [] };\n  readonly games = this._games.asObservable();\n\n  private state: KDatabase | null = null;\n\n  // current\n  private _game: ChessGame | null = null;\n  readonly game = new BehaviorSubject<ChessGame | null>(null);\n\n\n  private _board: CanvasChessBoard | null = null;\n  readonly board = new BehaviorSubject<CanvasChessBoard | null>(null);\n\n\n  private _score: GamescoreUxComponent | null = null;\n  readonly score = new BehaviorSubject<GamescoreUxComponent | null>(null);\n\n\n  private _status: OlgaStatusComponent | null = null;\n  readonly status = new BehaviorSubject<OlgaStatusComponent | null>(null);\n\n  readonly isVariant = new BehaviorSubject<boolean>(false);\n\n  private parsePGN(pgn: string) {\n    const gameCount = 1;\n    if (gameCount == 1) {\n      this.state = pgnRead(pgn) as KDatabase;\n      const first = this.state.game(0) as KGame;\n      const game = new ChessGame(this);\n      this.gamesData.games.push(game);\n      this._games.next(Object.assign({}, this.gamesData).games)\n      this._game = game;\n      this.game.next(game);\n      this._game.setGame(first);\n      if (this._game.score.value !== null) {\n        this._items.next(this._game.score.value);\n      }\n    }\n  }\n\n\n  public navigateToItem(item: GameScoreItem, isBlack = false) {\n    //this._game?.navigateToNode(isBlack ? item.blackMove : item.whiteMove, item.variation);\n    console.log('Navigating to item -> ' + item.move.notation());\n  }\n\n  // Visual Settings\n  constructor(public olga: OlgaService) { }\n  public moveToStart(): void {\n    if (this._game) {\n      this._game.moveToStart();\n    }\n  }\n  public advance(): void {\n    if (this._game && !this._game.isFinalPosition()) {\n      this._game.advance();\n    }\n  }\n  public previous(): void {\n    if (this._game) {\n      this._game.previous();\n    }\n  }\n  public moveToEnd(): void {\n    if (this._game && !this._game.isFinalPosition()) {\n      this._game.moveToEnd();\n    }\n  }\n\n  public togglePlay(): void {\n\n  }\n\n  public openEngine(): void {\n\n  }\n\n  public loadPGN(pgn: string) {\n    // parse potential multiple games\n    console.log('Loading PGN: ');\n    console.log(pgn);\n    this.gamesData.games = [];\n    this._games.next([]);\n    this.parsePGN(pgn);\n  }\n\n  public clearItems(): void {\n    this.scoreData.items = [];\n    this._items.next(Object.assign({}, this.scoreData).items);\n  }\n\n  public typeToString(type: GameScoreType): string {\n    return GameScoreType[type];\n  }\n\n  public selectGame(index: number) {\n    if (index >= 0 && index <= this.gamesData.games.length) {\n      this._game = this.gamesData.games[index];\n      this.scoreData.items = this._game.createScoreItems();\n      this.game.next(this._game);\n    }\n  }\n\n  public attachBoard(board: CanvasChessBoard) {\n    this._board = board;\n    this.board.next(board);\n  }\n\n  public attachScore(score: GamescoreUxComponent) {\n    this._score = score;\n    this.score.next(score);\n  }\n\n  public attachStatus(status: OlgaStatusComponent) {\n    this._status = status;\n    this.status.next(status);\n  }\n\n\n  public editComment(data: GameScoreItem): void {\n    console.log('Editing Comment -> ' + data.move.comment());\n  }\n\n  public displayVariations(data: GameScoreItem): void {\n    console.log('Displaying Variations');\n    console.log(data.move.notation());\n    const variations = data.move.variations();\n    console.log(variations);\n  }\n\n\n\n}\n","import { Injectable, ElementRef } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Olga } from '../app.component';\nimport { GamescoreUxComponent } from '../game-score/game-score.ux';\nimport { CanvasChessBoard } from '../canvas-chessboard/canvas-chessboard.component';\n\n\nexport declare type Layout = 'auto' | 'landscape' | 'portrait';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LayoutService {\n  readonly landscapeOrientation = new BehaviorSubject<boolean>(true);\n  readonly boardSize = new BehaviorSubject<number>(480);\n  readonly scoreSize = new BehaviorSubject<number>(340);\n  olga: Olga | null = null;\n  appContainer: ElementRef | null = null;\n  gameScore: GamescoreUxComponent | null = null;\n  board: CanvasChessBoard | null = null;\n  resizeElement: HTMLElement | null = null;\n  preferredLayout: Layout = 'auto';\n  preferredRatio = .3;\n  boardRatio = 1;\n  constructor() { }\n  private resizeToLandscape(width: number, height: number, gsSize?: number) {\n    if (this.olga && this.olga.gameScoreElement && this.olga.controlsElement && this.olga.statusElement && this.olga.settingsMenuComponent) {\n      let boardSize = 0;\n      const titleSize = 80;\n      if (this.resizeElement) {\n        this.resizeElement.style.left = \"-10px\";\n        this.resizeElement.style.top = \"calc(50% - 3em)\";\n        this.resizeElement.style.width = \"1.2em\";\n        this.resizeElement.style.height = \"6em\";\n      }\n      if (!gsSize) {\n        let padding = width * 0.05;\n        if (padding >= 16 || padding <= 10) {\n          padding = 12;\n        }\n        let boardSize = Math.floor((1 - this.preferredRatio) * width);\n        if (boardSize > height) {\n          boardSize = height - (padding / 2);\n        }\n        let controlsHeight = boardSize / 7;\n        controlsHeight = controlsHeight > 62 ? 62 : controlsHeight;\n        let gsWidth = (width - boardSize) - padding;\n        this.board?.setSize(boardSize);\n        let gsHeight = (boardSize - 200) - controlsHeight;\n        // game score\n        this.olga.gameScoreElement.style.top = titleSize + 2 + 'px'; // 64 represents the controls ux\n        this.olga.gameScoreElement.style.width = gsWidth + 'px';\n        this.olga.gameScoreElement.style.height = gsHeight + 'px';\n        // controls\n        this.olga.controlsElement.style.left = '';\n        this.olga.controlsElement.style.top = (gsHeight + (titleSize + 10)).toString() + 'px'; // 64 represents the \n        this.olga.controlsElement.style.width = (gsWidth - 2).toString() + 'px';\n        this.olga.controlsElement.style.height = controlsHeight + 'px';\n        this.olga.controlsElement.style.right = '1px';\n        this.olga.statusElement.style.left = '';\n        this.olga.statusElement.style.top = (gsHeight + titleSize + controlsHeight + 62).toString() + 'px'; // 64 represents the \n        this.olga.statusElement.style.width = gsWidth.toString() + 'px';\n        this.olga.statusElement.style.height = controlsHeight + 'px';\n        this.olga.statusElement.style.right = '1px';\n        this.scoreSize.next(gsWidth);\n      } else {\n        this.preferredRatio = width / gsSize;\n        let padding = width * 0.02;\n        if (padding < 18) {\n          padding = 18;\n        }\n        const widthAvailable = window.innerWidth - (gsSize + padding);\n        let boardSize = Math.floor(widthAvailable / 8) * 8;\n        if (boardSize >= window.innerHeight) {\n          boardSize = Math.floor((window.innerHeight - 16) / 8) * 8;\n          gsSize = window.innerWidth - boardSize + padding;\n        }\n        this.board?.setSize(boardSize);\n        let controlsHeight = boardSize / 7;\n        controlsHeight = controlsHeight > 62 ? 62 : controlsHeight;\n        let gsHeight = (boardSize - 200) - controlsHeight;\n        // game score\n        this.olga.gameScoreElement.style.top = titleSize + 2 + 'px'; // 64 represents the controls ux\n        this.olga.gameScoreElement.style.width = gsSize + 'px';\n        this.olga.gameScoreElement.style.height = gsHeight + 'px';\n        // controls\n        this.olga.controlsElement.style.left = '';\n        this.olga.controlsElement.style.top = (gsHeight + titleSize + 34).toString() + 'px'; // 64 represents the \n        this.olga.controlsElement.style.width = (gsSize - 2).toString() + 'px';\n        this.olga.controlsElement.style.right = '1px';\n        this.olga.statusElement.style.left = '';\n        this.olga.statusElement.style.top = (gsHeight + titleSize + controlsHeight + 62).toString() + 'px'; // 64 represents the \n        this.olga.statusElement.style.width = gsSize.toString() + 'px';\n        this.olga.statusElement.style.right = '1px';\n        this.scoreSize.next(gsSize);\n      }\n      this.olga.settingsMenuComponent.resize(width, height);\n      this.boardSize.next(boardSize);\n    }\n  }\n  private resizeToPortrait(width: number, height: number, gsSize?: number) {\n    if (this.olga) {\n      const boardSize = (width * this.boardRatio) - 6;\n      this.board?.setSize(boardSize);\n      if (this.olga.boardElement) {\n        this.olga.boardElement.style.left = (width * ((1 - this.boardRatio) / 2)) + 'px';\n      }\n      if (this.olga.gameScoreElement) {\n        this.olga.gameScoreElement.style.top = (boardSize + 108 + 'px'); // 64 represents the controls ux\n        this.olga.gameScoreElement.style.width = '100%';\n        this.olga.gameScoreElement.style.height = (boardSize / 3 > 425 ? 425 : boardSize / 3).toString() + 'px';\n      }\n      if (this.olga.controlsElement) {\n        this.olga.controlsElement.style.top = (boardSize + 6).toString() + 'px'; // 64 represents the controls ux\n        this.olga.controlsElement.style.left = 'calc(1% - 3px)';\n        this.olga.controlsElement.style.right = '1%';\n        this.olga.controlsElement.style.width = '98%';\n        this.olga.controlsElement.style.height = '99px';\n      }\n      if (this.resizeElement) {\n        this.resizeElement.style.left = \"calc(50% - 3em)\";\n        this.resizeElement.style.top = \"-4px\";\n        this.resizeElement.style.width = \"6em\";\n        this.resizeElement.style.height = \"1.2em\";\n      }\n      this.olga.settingsMenuComponent?.resize(width, height);\n    }\n  }\n  initializeLayout(olga: Olga, autoResize = true): void {\n    this.olga = olga;\n    this.gameScore = olga.gameScoreComponent;\n    this.board = olga.canvasBoardComponent;\n    this.appContainer = olga.appContainer;\n    if (autoResize) {\n      window.removeEventListener('resize', this.resizeLayout.bind(this));\n      window.addEventListener('resize', this.resizeLayout.bind(this));\n    }\n    this.resizeLayout()\n    window.setTimeout(() => {\n      this.resizeLayout();\n    }, 250);\n  }\n\n  onSliderTouch(event: TouchEvent): void {\n    if (event.touches.length > 0 && this.landscapeOrientation && event && event.touches[0].clientX > 64) {\n      if (this.olga && this.appContainer) {\n        let gsSize = window.innerWidth - event.touches[0].clientX;\n        const width = this.appContainer.nativeElement.clientWidth;\n        const height = this.appContainer.nativeElement.clientHeight;\n\n        switch (this.preferredLayout) {\n          case 'auto': {\n            if (width > height) {\n              this.resizeToLandscape(width, height, gsSize);\n            } else {\n              this.resizeToPortrait(width, height, gsSize);\n            }\n            break;\n          }\n          case 'landscape': {\n            this.resizeToLandscape(width, height, gsSize);\n            break;\n          }\n          case 'portrait': {\n            this.resizeToPortrait(width, height, gsSize);\n            break;\n          }\n        }\n      }\n    } else {\n      if (!this.landscapeOrientation && event && event.touches[0].clientY > 64) {\n        if (this.olga && this.appContainer) {\n          let gsSize = window.innerHeight - event.touches[0].clientY;\n          const width = this.appContainer.nativeElement.clientWidth;\n          const height = this.appContainer.nativeElement.clientHeight;\n          switch (this.preferredLayout) {\n            case 'auto': {\n              if (width > height) {\n                this.resizeToLandscape(width, height, gsSize);\n              } else {\n                console.log('GSSize vertical slider: ' + gsSize);\n                this.resizeToPortrait(width, height, gsSize);\n              }\n              break;\n            }\n            case 'landscape': {\n              this.resizeToLandscape(width, height, gsSize);\n              break;\n            }\n            case 'portrait': {\n              this.resizeToPortrait(width, height, gsSize);\n              break;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  onSliderDrag(event: DragEvent): void {\n    if (this.landscapeOrientation && event && event.clientX > 64) {\n      if (this.olga && this.appContainer) {\n        let gsSize = window.innerWidth - event.clientX;\n        const width = this.appContainer.nativeElement.clientWidth;\n        const height = this.appContainer.nativeElement.clientHeight;\n\n        switch (this.preferredLayout) {\n          case 'auto': {\n            if (width > height) {\n              this.resizeToLandscape(width, height, gsSize);\n            } else {\n              this.resizeToPortrait(width, height, gsSize);\n            }\n            break;\n          }\n          case 'landscape': {\n            this.resizeToLandscape(width, height, gsSize);\n            break;\n          }\n          case 'portrait': {\n            this.resizeToPortrait(width, height, gsSize);\n            break;\n          }\n        }\n      }\n    } else {\n      if (!this.landscapeOrientation && event && event.clientY > 64) {\n        if (this.olga && this.appContainer) {\n          let gsSize = window.innerHeight - event.clientY;\n          const width = this.appContainer.nativeElement.clientWidth;\n          const height = this.appContainer.nativeElement.clientHeight;\n          switch (this.preferredLayout) {\n            case 'auto': {\n              if (width > height) {\n                this.resizeToLandscape(width, height, gsSize);\n              } else {\n                console.log('GSSize vertical slider: ' + gsSize);\n                this.resizeToPortrait(width, height, gsSize);\n              }\n              break;\n            }\n            case 'landscape': {\n              this.resizeToLandscape(width, height, gsSize);\n              break;\n            }\n            case 'portrait': {\n              this.resizeToPortrait(width, height, gsSize);\n              break;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  resizeLayout(): void {\n    if (!this.appContainer) {\n      console.log('Invalid (Null) App Container %$@');\n    } else {\n      const width = this.appContainer.nativeElement.clientWidth;\n      const height = this.appContainer.nativeElement.clientHeight;\n      switch (this.preferredLayout) {\n        case 'auto': {\n          if (width > height) {\n            this.resizeToLandscape(width, height);\n          } else {\n            this.resizeToPortrait(width, height);\n          }\n          break;\n        }\n        case 'landscape': {\n          this.resizeToLandscape(width, height);\n          break;\n        }\n        case 'portrait': {\n          this.resizeToPortrait(width, height);\n          break;\n        }\n      }\n    }\n  }\n}\n","import { Injectable, Output } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { GameScoreAnnotation, GameScoreVariation } from './game.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OlgaService {\n  @Output() readonly annotations = new BehaviorSubject<GameScoreAnnotation[]>([]);\n  @Output() readonly showingPly = new BehaviorSubject<boolean>(true);\n  @Output() readonly showingHalfPly = new BehaviorSubject<boolean>(false);\n  @Output() readonly variation = new BehaviorSubject<GameScoreVariation[]>([]);\n  constructor() { }\n}\n","import { Component, OnInit, AfterViewInit, ViewChild, ElementRef } from '@angular/core';\nimport { OlgaService } from 'src/app/services/olga.service';\nimport { GameService } from 'src/app/services/game.service';\nimport { ColorService } from 'src/app/services/colors.service';\n\n@Component({\n  selector: 'board-settings',\n  templateUrl: './settings-board.component.html',\n  styleUrls: ['./settings-board.component.scss']\n})\nexport class SettingsBoardComponent implements OnInit, AfterViewInit {\n  constructor(\n    public olga: OlgaService,\n    public gameService: GameService,\n    public colorService: ColorService\n  ) { }\n  @ViewChild('lightBGHandle', { static: true })\n  lightBGHandle: ElementRef | null = null;\n  @ViewChild('darkBGHandle', { static: true })\n  darkBGHandle: ElementRef | null = null;\n\n  ngOnInit(): void {\n  }\n\n  ngAfterViewInit(): void {\n    if (this.lightBGHandle) {\n      this.lightBGHandle.nativeElement.value = this.colorService.boardBGLight.value;\n    }\n    if (this.darkBGHandle) {\n      this.darkBGHandle.nativeElement.value = this.colorService.boardBGDark.value;\n    }\n  }\n\n  updateLight(color: string) {\n    if (this.gameService.board.value) {\n      this.gameService.board.value.setLightTile(color);\n      this.colorService.boardBGLight.next(color);\n    }\n  }\n\n  updateDark(color: string) {\n    if (this.gameService.board.value) {\n      this.gameService.board.value.setDarkTile(color);\n      this.colorService.boardBGDark.next(color);\n    }\n  }\n}\n","<input #lightBGHandle type=\"color\" id=\"lightColor\" class=\"color-input\" (input)=\"updateLight(lightBGHandle.value)\"\n    (blur)=\"updateLight(lightBGHandle.value)\" />\n<input #darkBGHandle type=\"color\" id=\"darkColor\" class=\"color-input\" (input)=\"updateDark(darkBGHandle.value)\"\n    (blur)=\"updateDark(darkBGHandle.value)\" />","import {\n  Component,\n  OnInit,\n  Output,\n  AfterViewInit,\n  ViewChild,\n  ElementRef,\n} from '@angular/core';\nimport { GameService } from '../../services/game.service';\nimport { ColorService } from '../../services/colors.service';\nimport { OlgaService } from 'src/app/services/olga.service';\n\n@Component({\n  selector: 'app-gamescore-settings',\n  templateUrl: './settings-gamescore.component.html',\n  styleUrls: ['./settings-gamescore.component.scss'],\n})\nexport class GamescoreSettingsComponent implements OnInit, AfterViewInit {\n  constructor(\n    public olga: OlgaService,\n    public gameService: GameService,\n    public colorService: ColorService\n  ) { }\n\n  ngOnInit(): void { }\n  ngAfterViewInit(): void {\n\n  }\n}\n","<!-- <mat-card>\n  <mat-card-title>\n    Choose Layout\n  </mat-card-title>\n  <mat-card-subtitle>\n    Settings\n  </mat-card-subtitle>\n  <mat-card-actions>\n    <button mat-raised-button color=\"primary\" >Portrait</button>\n    <button mat-raised-button color=\"primary\" >Landscape</button>\n  </mat-card-actions>\n</mat-card>\n<br/>\n<mat-card >\n  <mat-card-title>\n    Choose Size\n  </mat-card-title>\n  <mat-card-subtitle>\n    Settings\n  </mat-card-subtitle>\n  <mat-card-actions>\n    <button mat-raised-button class=\"blue-button\" >Small</button>\n    <button mat-raised-button class=\"blue-button\" >Medium</button>\n    <button mat-raised-button color=\"primary\" >Large</button>\n    <br/>\n    <label>\n      <input type=\"checkbox\" name=\"my-checkbox\" checked> Select me\n  </label>\n  <label>\n      <input type=\"checkbox\" name=\"my-checkbox\"> Select me\n  </label>\n  </mat-card-actions>\n</mat-card>\n<br/> -->\n<mat-card>\n  <mat-card-title>\n    Colors\n  </mat-card-title>\n  <mat-card-subtitle>\n    Settings\n  </mat-card-subtitle>\n  <mat-card-content>\n\n    <!-- <div>Font Size</div>\n    <mat-slider #scoreFontSize thumbLabel class=\"small-slider\" (input)=\"gameScoreService.scoreFontSize.next(($event.value ? $event.value : 18))\" value=\"18\" min=\"14\" max=\"24\" step=\"1\" color=\"primary\" ></mat-slider>\n    <br/>\n    <label class=\"switch\">\n      <input type=\"checkbox\" #figureNotation (change)=\"gameScoreService.figurineNotation.next(figureNotation.checked)\">\n      <div style=\"font-size:12px; text-align:center;\">Figurine Notation</div>\n    </label>\n    <br/>\n    Font Family\n    <select>\n      <option>Cambria</option>\n      <option>Times New Roman</option>\n    </select> -->\n  </mat-card-content>\n</mat-card>","import { Component, OnInit, Input, ElementRef, ViewChild, AfterViewInit } from '@angular/core';\nimport { ColorService } from 'src/app/services/colors.service';\nimport { LayoutService } from 'src/app/services/layout.service';\nimport { CanvasChessBoard } from 'src/app/canvas-chessboard/canvas-chessboard.component';\nimport { MatTabChangeEvent } from '@angular/material/tabs/tab-group';\n\n@Component({\n  selector: 'settings-menu',\n  templateUrl: './settings-menu.component.html',\n  styleUrls: ['./settings-menu.component.scss']\n})\nexport class SettingsMenuComponent implements OnInit, AfterViewInit {\n  constructor(public colorService: ColorService, public layoutService: LayoutService) { }\n  menus: HTMLCollectionOf<HTMLElement> | null = null;\n  @ViewChild(CanvasChessBoard)\n  settingsBoard: CanvasChessBoard | null = null;\n  protected height = 360;\n  protected width = 360;\n  ngOnInit(): void {\n  }\n\n  ngAfterViewInit(): void {\n    const menus = document.getElementsByClassName('settings-content');\n    console.log(menus);\n    this.colorService.boardBGDark.subscribe((color) => {\n      this.settingsBoard?.setDarkTile(color);\n    });\n    this.colorService.boardBGLight.subscribe((color) => {\n      this.settingsBoard?.setLightTile(color);\n    });\n  }\n\n  resize(width: number, height: number): void {\n    height = Math.floor(height * .84) - 66;\n    width = Math.floor(width * .9);\n    // Landscape vs Portrait\n    const menus = document.getElementsByClassName('settings-content') as HTMLCollectionOf<HTMLElement>;\n    if (this.settingsBoard) {\n      const boardWidth = width * .5;\n      const boardHeight = height * .8;\n      if (boardHeight > boardWidth) {\n        this.settingsBoard.setSize(boardWidth);\n      } else {\n        this.settingsBoard.setSize(boardHeight);\n      }\n    }\n    if (menus) {\n      for (let index = 0; index < menus.length; ++index) {\n        const item = menus.item(index);\n        if (item) {\n          item.style.height = height - 2 + 'px';\n\n        }\n      }\n    }\n    this.height = height;\n    this.width = width;\n  }\n\n  tabChanged(event: MatTabChangeEvent): void {\n\n    this.resize(window.innerWidth, window.innerHeight);\n  }\n}\n","<div class=\"settings-window\">\n    <div class=\"settings-background\">\n        <button mat-button-raised class=\"close-button\">X</button>\n        <h3>Settings</h3>\n        <mat-tab-group dynamicHeight=\"true\" mat-align-tabs=\"center\" animationDuration=\"500ms\"\n            (selectedTabChange)=\"tabChanged($event)\">\n            <mat-tab label=\"General\">\n                Hello World\n            </mat-tab>\n            <mat-tab label=\"Board\">\n                <ng-template matTabContent>\n                    <div class=\"settings-content\">\n                        <canvas-chessboard class=\"settings-board\" UUID=\"x-1232141\"\n                            [theme]=\"this.colorService.boardTheme()\" [size]=640 [tileSize]=80 [interactive]=false>\n                        </canvas-chessboard>\n                        <board-settings class=\"settings\"></board-settings>\n                    </div>\n                </ng-template>\n            </mat-tab>\n            <mat-tab label=\"Game Score\">\n                <ng-template matTabContent>\n                    <div class=\"settings-content\">\n                    </div>\n                </ng-template>\n            </mat-tab>\n            <mat-tab label=\"Keymap\"></mat-tab>\n        </mat-tab-group>\n    </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"sourceRoot":"webpack:///"}