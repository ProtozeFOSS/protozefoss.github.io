{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/common/labeled-slider/labeled-slider.component.ts","./src/app/common/labeled-slider/labeled-slider.component.html","./src/app/common/toggle-switch/toggle-switch.component.ts","./src/app/common/toggle-switch/toggle-switch.component.html","./src/app/controls/olga-controls/olga-controls.component.ts","./src/app/controls/olga-controls/olga-controls.component.html","./src/app/game-score/game-score-item/game-score-item.component.ts","./src/app/game-score/game-score-item/game-score-item.component.html","./src/app/game-score/game-score.ux.ts","./src/app/game-score/game-score.ux.html","./src/app/game-score/menu-game-score-item/menu-game-score-item.component.ts","./src/app/game-score/menu-game-score-item/menu-game-score-item.component.html","./src/app/olga-board/board-canvas/board-canvas.component.ts","./src/app/olga-board/board-canvas/board-canvas.component.html","./src/app/olga-board/olga-board.component.ts","./src/app/olga-board/olga-board.component.html","./src/app/playermove/playermove.component.ts","./src/app/playermove/playermove.component.html","./src/app/services/colors.service.ts","./src/app/services/engine.service.ts","./src/app/services/game-score.service.ts","./src/app/services/layout.service.ts","./src/app/settings/settings-board/settings-board.component.ts","./src/app/settings/settings-board/settings-board.component.html","./src/app/settings/settings-gamescore/settings-gamescore.component.ts","./src/app/settings/settings-gamescore/settings-gamescore.component.html","./src/app/settings/settings-menu/settings-menu.component.ts","./src/app/settings/settings-menu/settings-menu.component.html","./src/environments/environment.ts","./src/main.ts","jsdom (ignored)","jsdom/lib/jsdom/living/generated/utils (ignored)","jsdom/lib/jsdom/utils (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import {\n  Component,\n  AfterViewInit,\n  ViewChild,\n  ElementRef,\n  Input,\n  Output,\n} from '@angular/core';\nimport { GamescoreUxComponent } from './game-score/game-score.ux';\nimport { OlgaBoardComponent } from './olga-board/olga-board.component';\nimport { ColorService } from './services/colors.service';\nimport { MatSliderChange } from '@angular/material/slider';\nimport { EngineService } from './services/engine.service';\nimport { Piece } from 'chessops/types';\nimport { LayoutService } from './services/layout.service';\nimport { GameScoreService } from './services/game-score.service';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class Olga implements AfterViewInit {\n  title = 'Olga Test Bed';\n  @ViewChild(GamescoreUxComponent)\n  gameScoreUx: GamescoreUxComponent | null = null;\n  @ViewChild(OlgaBoardComponent)\n  olgaBoard: OlgaBoardComponent | null = null;\n  @ViewChild('olgaContainer')\n  olgaContainer: ElementRef | null = null;\n  @Output() gameScoreElement: HTMLElement | null = null;\n  @Output() boardElement: HTMLElement | null = null;\n  @Output() controlsElement: HTMLElement | null = null;\n  @Input() pgnString = '';\n  @Input() olgaID = '12312321';\n  @Output() gameScoreWidth: number | null = 389;\n  @Output() oldWidth: number | null = 0;\n  protected doneResizingScore = false;\n  constructor(\n    public layoutService: LayoutService,\n    public colorService: ColorService,\n    public chessEngine: EngineService,\n    public scoreService: GameScoreService\n  ) {\n    const date = new Date();\n    this.olgaID = 'OLGA-' + date.getTime().toString();\n    console.log('ID: ' + this.olgaID);\n  }\n\n  // tslint:disable-next-line: typedef\n  ngAfterViewInit() {\n    this.gameScoreElement = document.getElementById('app-gamescore' + this.olgaID);\n    this.boardElement = document.getElementById('app-board' + this.olgaID);\n    this.controlsElement = document.getElementById('olga-controls' + this.olgaID);\n    this.colorService.initializeColorPalette();\n    this.layoutService.initializeLayout(this);\n    if (this.gameScoreUx) {\n      this.gameScoreUx.resizeHandleEvent = this.layoutService.onSliderDrag.bind(this.layoutService);\n    }\n  }\n  mouseMoved(event: MouseEvent): void {\n    if (this.gameScoreUx?.resizing) {\n      this.gameScoreUx?.resizeHandleEvent(event);\n    }\n    if (this.gameScoreUx && event.buttons === 0) {\n      this.gameScoreUx.resizing = false;\n    }\n  }\n\n  loadPGN(pgn: string) {\n    this.scoreService.loadPGN(pgn);\n  }\n\n  setBoardSize(size: number): void {\n    if (this.olgaBoard) {\n      this.olgaBoard.setBoardSize(size);\n    }\n  }\n  setGameScoreSize(size: number): void {\n    this.gameScoreWidth = size;\n    if (this.gameScoreUx) {\n      this.gameScoreUx.setWidth(this.gameScoreWidth);\n    }\n  }\n  ignoreEvent(event: MouseEvent): void {\n    //console.log('Ignoring ' + event);\n    event.preventDefault();\n    event.stopPropagation();\n  }\n}\n","<div #olgaContainer id=\"{{ this.olgaID }}-olga-container\" class=\"olga-container\" (mousemove)=\"mouseMoved($event)\">\n  <app-olga-board #olgaBoard id=\"app-board{{this.olgaID}}\" [UUID]=\"this.olgaID\"></app-olga-board>\n  <app-game-score-ux id=\"app-gamescore{{this.olgaID}}\" (contextmenu)=\"ignoreEvent($event)\">\n  </app-game-score-ux>\n  <olga-controls id=\"olga-controls{{this.olgaID}}\"></olga-controls>\n  <!-- <app-gamescore-settings #gameScore></app-gamescore-settings>\n  <button mat-button class=\"fenbutton\" (click)=\"\n      olgaBoard.setFen(\n        'rnbqkbnr/pp1ppppp/8/2p5/4P3/5N2/PPPP1PPP/RNBQKB1R b KQkq - 1 2'\n      )\n    \">\n    Set Fen\n  </button> -->\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { Olga } from './app.component';\nimport { GamescoreSettingsComponent } from './settings/settings-gamescore/settings-gamescore.component';\nimport { GamescoreUxComponent } from './game-score/game-score.ux';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { PlayermoveComponent } from './playermove/playermove.component';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { GameScoreItemComponent } from './game-score/game-score-item/game-score-item.component';\nimport { ColorService } from './services/colors.service';\nimport { ToggleSwitchComponent } from './common/toggle-switch/toggle-switch.component';\nimport { LabeledSliderComponent } from './common/labeled-slider/labeled-slider.component';\nimport { SettingsMenuComponent } from './settings/settings-menu/settings-menu.component';\nimport { OlgaBoardComponent } from './olga-board/olga-board.component';\nimport { SettingsBoardComponent } from './settings/settings-board/settings-board.component';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MenuGameScoreItemComponent } from './game-score/menu-game-score-item/menu-game-score-item.component';\n\nimport { GameScoreService } from './services/game-score.service';\nimport { EngineService } from './services/engine.service';\nimport { LayoutService } from './services/layout.service';\nimport { BoardCanvasComponent } from './olga-board/board-canvas/board-canvas.component';\nimport { OlgaControlsComponent } from './controls/olga-controls/olga-controls.component';\n@NgModule({\n  declarations: [\n    Olga,\n    GamescoreSettingsComponent,\n    OlgaBoardComponent,\n    GamescoreUxComponent,\n    GameScoreItemComponent,\n    PlayermoveComponent,\n    ToggleSwitchComponent,\n    LabeledSliderComponent,\n    SettingsMenuComponent,\n    SettingsBoardComponent,\n    MenuGameScoreItemComponent,\n    BoardCanvasComponent,\n    OlgaControlsComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatCardModule,\n    MatDividerModule,\n    MatIconModule,\n    MatInputModule,\n    MatGridListModule,\n    MatMenuModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatTabsModule,\n  ],\n  providers: [LayoutService, ColorService, EngineService, GameScoreService],\n  bootstrap: [Olga],\n})\nexport class AppModule { }\n","import { Component, OnInit, Input } from '@angular/core';\nimport { } from '@angular/material/slider';\n@Component({\n  selector: 'app-labeled-slider',\n  templateUrl: './labeled-slider.component.html',\n  styleUrls: ['./labeled-slider.component.scss']\n})\nexport class LabeledSliderComponent implements OnInit {\n  @Input() value = 18;\n  @Input() minimum = 14;\n  @Input() maximum = 24;\n  @Input() step = 1;\n  @Input() label = 'labeled slider';\n\n  constructor() { }\n\n  ngOnInit(): void {\n\n  }\n\n  inputEventCapture(event: any): void {\n    //console.log(event);\n  }\n\n}\n","<mat-slider #scoreFontSize thumbLabel class=\"ls-slider\" (input)=\"inputEventCapture($event)\" [value]=\"value\" [min]=\"minimum\" [max]=\"maximum\" [step]=\"step\"></mat-slider>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-toggle-switch',\n  templateUrl: './toggle-switch.component.html',\n  styleUrls: ['./toggle-switch.component.scss']\n})\nexport class ToggleSwitchComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>toggle-switch works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { GameScoreService } from 'src/app/services/game-score.service';\n\n@Component({\n  selector: 'olga-controls',\n  templateUrl: './olga-controls.component.html',\n  styleUrls: ['./olga-controls.component.scss']\n})\nexport class OlgaControlsComponent implements OnInit {\n\n  constructor(public gameScoreService: GameScoreService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div (click)=\"gameScoreService.moveToStart();\" class=\"button start\"><svg class=\"feather\">\n                <use xlink:href=\"/assets/images/feather-sprite.svg#chevrons-left\" /></svg></div>\n<div (click)=\"gameScoreService.previous();\" class=\"button previous\"><svg class=\"feather\">\n                <use xlink:href=\"/assets/images/feather-sprite.svg#chevron-left\" /></svg></div>\n<div (click)=\"gameScoreService.advance();\" class=\"button next\"><svg class=\"feather\">\n                <use xlink:href=\"/assets/images/feather-sprite.svg#chevron-right\" /></svg></div>\n<div (click)=\"gameScoreService.moveToEnd();\" class=\"button end\"><svg class=\"feather\">\n                <use xlink:href=\"/assets/images/feather-sprite.svg#chevrons-right\" /></svg></div>","import { Component, OnInit, Input, AfterViewInit } from '@angular/core';\nimport { GameScoreType, GameScoreService, GameScoreItem } from '../../services/game-score.service';\n\n@Component({\n  selector: 'app-game-score-item',\n  templateUrl: './game-score-item.component.html',\n  styleUrls: ['./game-score-item.component.scss']\n})\nexport class GameScoreItemComponent implements OnInit, AfterViewInit {\n  @Input() data: GameScoreItem | null = null;\n  @Input() type = GameScoreType.GameScoreGroup;\n  @Input() typeName = '';\n  GameScoreType = GameScoreType;\n  constructor(public gameScoreService: GameScoreService) {\n    // use data to actually set type\n\n  }\n\n  ngOnInit(): void {\n    if (this.data && this.data.type) {\n      this.type = this.data.type;\n      this.typeName = this.gameScoreService.typeToString(this.type) + (this.data.current ? ' current-move' : '');\n    } else {\n      this.typeName = this.gameScoreService.typeToString(this.type);\n    }\n  }\n\n  ngAfterViewInit(): void {\n  }\n  showPly(): boolean {\n    if (this.data && this.data.moveData) {\n      if (this.data.moveData.ply == Math.ceil(this.data.moveData.ply)) {\n        return this.gameScoreService.showingPly.value;\n      }\n      return this.gameScoreService.showingHalfPly.value;\n    }\n    return false;\n  }\n  isFullPly(): boolean {\n    if (this.data && this.data.moveData) {\n      return this.data.moveData.ply == Math.ceil(this.data.moveData.ply);\n    }\n    return false;\n  }\n}\n","<!-- GameScoreGroup -->\n<div *ngIf=\"type === GameScoreType.GameScoreGroup\" class=\"gsi-container {{typeName}}\">\n  <div class=\"gsi-ply {{typeName}}\" *ngIf=\"showPly()\">\n    {{this.data?.moveData?.ply}}</div>\n  <div class=\"gsi-movew {{typeName}}\" *ngIf=\"isFullPly()\">{{this.data?.moveData?.move}}</div>\n  <div class=\"gsi-moveb {{typeName}}\" *ngIf=\"!isFullPly()\">{{this.data?.moveData?.move}}</div>\n</div>\n<!-- Variation -->\n<div *ngIf=\"type === GameScoreType.Variation\" class=\"gsi-container {{typeName}}\">\n  <div class=\"gsi-ply {{typeName}}\" *ngIf=\"showPly()\">{{this.data?.moveData?.ply}}</div>\n  <div class=\"gsi-movew {{typeName}}\" *ngIf=\"isFullPly()\">{{this.data?.moveData?.move}}</div>\n  <div class=\"gsi-moveb {{typeName}}\" *ngIf=\"!isFullPly()\">{{this.data?.moveData?.move}}</div>\n</div>\n<!-- Annotation -->\n<div *ngIf=\"type === GameScoreType.Annotation\" class=\"gsi-container {{typeName}}\">\n  <div class=\"gsi-ply {{typeName}}\" *ngIf=\"showPly()\">{{this.data?.moveData?.ply}}</div>\n  <div class=\"gsi-movew {{typeName}}\" *ngIf=\"isFullPly()\">{{this.data?.moveData?.move}}</div>\n  <div class=\"gsi-moveb {{typeName}} \" *ngIf=\"!isFullPly()\">{{this.data?.moveData?.move}}</div>\n  <div class=\"gsi-comment {{typeName}} \">{{this.data?.annotationData?.annotation}}\n  </div>\n</div>","import {\n  Component,\n  OnInit,\n  ChangeDetectionStrategy,\n  Input,\n  Output,\n  AfterViewInit,\n  ViewChild,\n  ElementRef,\n} from '@angular/core';\nimport {\n  trigger,\n  state,\n  style,\n  animate,\n  transition,\n  // ...\n} from '@angular/animations';\nimport {\n  GameScoreService,\n  GameScoreItem,\n  GameScoreType\n} from '../services/game-score.service';\nimport { MenuGameScoreItemComponent } from './menu-game-score-item/menu-game-score-item.component';\ninterface Move {\n  w: string;\n  b: string;\n};\n\nexport enum ScoreViewType {\n  Table = 101,\n  Flow = 202\n};\n\n@Component({\n  selector: 'app-game-score-ux',\n  templateUrl: './game-score.ux.html',\n  styleUrls: ['./game-score.ux.scss'],\n})\nexport class GamescoreUxComponent implements OnInit, AfterViewInit {\n  @ViewChild(MenuGameScoreItemComponent)\n  scoreItemMenu: MenuGameScoreItemComponent | null = null;\n  @ViewChild('resizeHandle')\n  resizeHandle: ElementRef | null = null;\n  @ViewChild('pgnData')\n  pgnData: ElementRef | null = null;\n  @ViewChild('gamescore-container') container: ElementRef | null = null;\n  @Input() gameScoreFontSize: number | null = 24;\n  columnCount = 3;\n  gameScore: Move[] = [];\n  rowHeight = '50px';\n  maxPlySize = 178;\n  @Output() resizing = false;\n  @Input() scoreWidth: number | null = 360;\n  @Input() viewType: ScoreViewType = ScoreViewType.Flow;\n  protected previousCursor = 'pointer';\n  GameScoreType = GameScoreType;\n  ScoreViewType = ScoreViewType;\n  constructor(public gameScoreService: GameScoreService) {\n    this.gameScoreService.figurineNotation.subscribe((figurineNotation) => {\n      if (figurineNotation) {\n        //console.log('Setting Font to : ' + 'FigurineSymbolT1');\n        this.gameScoreService.scoreFontFamily.next('FigurineSymbolT1');\n      } else {\n        //console.log('Setting Font to : ' + 'Caveat');\n        this.gameScoreService.scoreFontFamily.next('Cambria');\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    //console.log(this.gameScore);\n  }\n\n  ngAfterViewInit(): void {\n    if (this.pgnData) {\n      this.gameScoreService.loadPGN(this.pgnData.nativeElement.value);\n    }\n    this.resizeScore();\n  }\n\n  resizeScore(): void {\n    if (this.scoreWidth) {\n      this.columnCount = Math.floor(this.scoreWidth / this.maxPlySize);\n    } else {\n      this.columnCount = 3;\n    }\n  }\n\n  openItemMenu(event: MouseEvent, item: GameScoreItem): void {\n    event.preventDefault();\n    event.stopPropagation();\n    //console.log('Right clicked on item ' + item?.moveData?.move);\n    //console.log('Right clicked on Type ' + item?.type?.toString());\n    switch (item.type) { // open different menus\n\n    }\n    this.scoreItemMenu?.openAt(item);\n  }\n\n  ignoreEvent(event: MouseEvent): void {\n    //console.log('Ignoring ' + event);\n    event.preventDefault();\n    event.stopPropagation();\n  }\n\n  setWidth(width: number | null): void {\n    if (width) {\n      this.columnCount = Math.floor(width / this.maxPlySize);\n    }\n  }\n\n  resetResizeHandle(event: DragEvent | MouseEvent): void {\n    this.resizing = false;\n    if (this.resizeHandle && event.buttons === 0) {\n      document.body.style.cursor = this.previousCursor;\n    }\n    if (this.resizeHandleEvent) {\n      this.resizeHandleEvent(event);\n    }\n  }\n\n  setGrabCursor(event: DragEvent | MouseEvent): void {\n    this.previousCursor = document.body.style.cursor;\n    this.resizing = true;\n    document.body.style.cursor = 'grab';\n    if (this.resizeHandle) {\n      this.resizeHandle.nativeElement.style.cursor = 'grab';\n    }\n  }\n\n  loadPGN(pgn: string) {\n    //console.log('loading new PGN');\n    this.gameScoreService.loadPGN(pgn);\n    //console.log('PGN is loaded');\n    //console.log(this.gameScoreService.items.value);\n    this.ngOnInit();\n  }\n\n  resizeHandleEvent(event: DragEvent | MouseEvent): void {\n    if (this.resizing) {\n      this.resizeScore();\n    }\n  }\n\n  resizeHandleCore(event: DragEvent | MouseEvent): void {\n    event.preventDefault();\n    event.stopPropagation();\n    document.body.style.cursor = 'grab';\n    if (this.resizeHandle) {\n      this.resizeHandle.nativeElement.style.cursor = 'grab';\n    }\n    if (event.buttons > 0 && this.resizeHandleEvent) {\n      this.resizeHandleEvent(event);\n    }\n  }\n}\n","<app-menu-game-score-item class=\"gs-menu\" #scoreItemMenu [style.z-index]=\"scoreItemMenu.open ? 20 : -1\"\n  (click)=\"scoreItemMenu.open = false;\"></app-menu-game-score-item>\n<mat-card class=\"gamescore-container\">\n  <mat-card-title>\n    <h1 class=\"score-title\">Score</h1>\n  </mat-card-title>\n\n  <mat-card-content *ngIf=\"viewType === ScoreViewType.Flow\" class=\"score-list\">\n    <app-game-score-item *ngFor=\"let item of (gameScoreService.items | async); index as i;\" [data]=\"item\"\n      (contextmenu)=\"openItemMenu($event, item)\"></app-game-score-item>\n    <!-- <mat-grid-list  cols=\"{{this.columnCount}}\" rowHeight=\"{{this.rowHeight}}\">\n      <mat-grid-tile class=\"score-font\" *ngFor=\"let moves of gameScore; index as i;\">\n        <b class=\"score-ply\">{{i+1}}.</b> <app-playermove [move]=\"moves.w\" [black]=\"false\"></app-plSayermove>  <app-playermove [black]=\"true\" [move]=\"moves.b\"></app-playermove>\n      </mat-grid-tile>\n    </mat-grid-list> -->\n  </mat-card-content>\n</mat-card>\n<div><br />PGN:<br /><input #pgnData value='[Event \"GMA, Wijk aan Zee NED\"]\n[Site \"?\"]\n[Date \"2003.??.??\"]\n[Round \"1\"]\n[White \"Anand,V\"]\n[Black \"Radjabov,T\"]\n[Result \"1/2\"]\n[WhiteElo \"2750\"]\n[BlackElo \"2620\"]\n[ECO \"C12\"]\n[PlyCount \"55\"]\n[Annotator \"Hathaway\"]\n\n1. e4 e6 \n{ Im not terribly familiar with the style of Radjabov, so I dont know if this is his usual opening. }\n2. d4 d5 3. Nc3 Nf6 (3...Bb4 \n{ The Winawer Variation is probably best, though not as easy to play. }) 4. Bg5\n{ threatens e4-e5xf6 }\n (4. e5 \n{ keeps pieces on the board and avoids ...dxe4 }) 4...Bb4 (4...Be7 \n{ is more common and aims to trade dark-square bishops to ease Blacks cramp }) (4...dxe4 \n{ aims to avoid any cramp by bringing pieces into alignment for trading, though White does get at least one very good piece (Ne4 or Bg5) and an easier time castling queen-side, to stir up king-side threats }\n 5. Nxe4 Be7  (\n{ or Rubinsteins }\n 5...Nbd7) ) 5. e5 h6 6. Bd2 (6. Bh4 g5 7. exf6 gxh4 \n{ Black seems to equalize a little easier after this as he can win Pf6 in exchange for Ph4. }) 6...Bxc3 (6...Nfd7 7. Qg4 \n{ and White isnt incurring any weaknesses, but is either gaining Bb4 for Nc3 or after ...Bb4-f8 Black is cramped again }\n  (7. Nb5 $5 Bxd2+ 8. Qxd2 a6 9. Na3) ) 7. bxc3 Ne4 8. Qg4\n{ White immediately takes aim at the backward Pg7 & Rh8 and usually Pf7 & Ke8. For the moment Bd2 serves to defend Pc3 and to prevent ...Qd8-g5 (offering a queen trade to end the pressure) . }\n (\n{ While }\n 8. h4 \n{ is often useful in the French Defense with this pawn structure, I dont know that its been tried in this opening on this move. }) 8...g6 9. Bd3 (9. h4 \n{ could take over for Bd2 in guarding g5 and preparing a later attack by f2-f4, h4-h5 or vice versa. It also would allow Rh1 to develop to build the direct frontal threats to Pf7 & Pg6. }\n 9...c5 10. Bd3 Nxd2 11. Kxd2 Qa5 12. dxc5 Qxc5 13. Ne2 Qxf2 $4 14. Raf1 Qc5 15. Bxg6 fxg6 16. Qxg6+)  (9. Qd1 \n{ Fritz7; Odd! }) 9...Nxd2 10. Kxd2 c5 11. Nf3\n{ This has been considered the main line for many years, but I wonder if White can allow ...c5-c4 and not use more pawns to fight through Blacks pawns. }\n (11. dxc5 \n{ is probably still wrong because of ...Qg5+ }) (11. h4 \n{ still makes sense }) 11...Bd7 (11...c4 $6 \n{ The problem with this is that however much it slows White, it also limits Blacks queen-side offensive possibilities. }) (\n{ Prematurely playing }\n 11...cxd4 \n{ lets White straighten-out his pawns and Black has made no real progress. }\n 12. cxd4)  (11...Qa5 $5 \n{ Fritz7: with the idea of ...cxd4 }) 12. dxc5 Qe7 13. Rab1 Bc6 14. Nd4 Nd7\n{ These last few moves have been quite unusual for a French Defense, but they make sense; Qe7 defends Pf7 while Bc6 defends Pb7 and Nd7 threatens Pc5 & Pe5. }\n15. Rhe1 (15. Nxc6 bxc6 16. Rb7 Qxc5 17. Qf4 g5 18. Qd4 Qa5 19. Rb2 c5 $11 \n{ Fritz7 }) 15...Nxc5 16. Re3\n{ another way of getting the rook into position, in front of the king-side pawns, to threaten Blacks king-side pawns }\n16...h5 17. Qg3 O-O-O\n{ After this it would seem Blacks pieces can handle any threats White can generate. However, black might also have ideas of winning. How might he do that? Well, ...Be8, ...Kc8-b8-a8, ...Rd8-c8, ...Nc5-a4 and Pc3 is a target (slow I know) . Another idea is to keep Kd2 from ever escaping to safety by advancing ...h5-h4-h3 to break open the king-side and open the h-file for Blacks rooks. }\n (17...h4 $15 \n{ Fritz7 }) (17...Nxd3 $15 \n{ Fritz7 }) 18. Ke1 Qc7 (18...h4 19. Qg4 Rh5) 19. h4\n{ Anand aims to keep the king-side perfectly safe to ensure a draw. }\n (19. Qh4 \n{ Fritz7 }) 19...Qa5 20. Kf1 (20. Nxc6 bxc6 21. Kf1 Kd7 20. Qf4 Ke8 $11 \n{ Fritz7 }) 20...Rd7 (\n{ Premature is }\n 20...Qxa2 21. Ree1 Qa5  (21...Ba4 $11 \n{ Fritz7 })  22. Ra1 Qxc3 23. Nxc6 bxc6 24. Ba6+ $18) 21. Qf4\n{ This general activity is perfect. It threatens Pf7, defends Nd4 and in some cases prepares for Qf4-b4 to attack Kc8. }\n (21. Ree1 \n{ Fritz7 }) (21. Nxc6 bxc6 22. Ree1 \n{ Fritz7 }) 21...Rhd8\n{ Black is probably wondering why he organized his pieces to only defend light squares. Only Qa5 and Nc5 can get to dark squares and that makes Whites task of coordinating much easier. }\n (21...Qxa2 \n{ still premature }\n 22. Nxc6 bxc6 23. Qb4 Nb7 24. Ree1)  (21...Qxc3 $4 22. Nxc6 bxc6 23. Ba6+)  (21...Rc7 $14 \n{ Fritz7 }) (21...Na4 $14 \n{ Fritz7 }) 22. Kg1 (22. Nxc6 bxc6 23. Qb4 Qxb4 24. cxb4 d4 25. Ree1 Na4 $11 \n{ Fritz7 }) 22...Nxd3 23. Rxd3 (23. cxd3 Qxc3 24. Rg3 Rc7 $14 \n{ Fritz7 }) 23...Qc5 (23...Qxa2 24. Rdd1 Qc4 $11 \n{ Fritz7 }) 24. Rb4 a5 $2 (24...Rc7 \n{ Mark and Fritz7 agree! }) 25. Rb1 Rc7 26. Qc1 Be8 27. Nb3 (27. Qb2 \n{ If White commits too quickly to the b-file then Black might actually create some play against Ph4 and on the c-file. }\n 27...Qe7  (27...a4 $11 \n{ Fritz7 })  28. Nf3 Rc4 \n{ possibly preparing ...b5 }) 27...Qb6 (27...Qc4 28. Nxa5 Qxh4 $14 \n{ Fritz7 }) 28. Nd4\n{ Black created the weakness (Pa5) and cant quite defend it, so Anand forces a draw. }\n1/2-1/2' class=\"input-box\" #pgnBox type=\"text\" (click)=\"loadPGN(pgnBox.value)\" (change)=\"loadPGN(pgnBox.value)\"></div>\n\n<div #resizeHandle class=\"resize-handle\" (mouseup)=\"resetResizeHandle($event)\" (mousedown)=\"setGrabCursor($event)\">\n</div>","import { Component, OnInit, Input, ViewChild, AfterViewInit } from '@angular/core';\nimport { GameScoreItem } from 'src/app/services/game-score.service';\nimport { MatMenuTrigger } from '@angular/material/menu';\n\n@Component({\n  selector: 'app-menu-game-score-item',\n  templateUrl: './menu-game-score-item.component.html',\n  styleUrls: ['./menu-game-score-item.component.scss']\n})\n\nexport class MenuGameScoreItemComponent implements OnInit, AfterViewInit {\n  @Input() data: GameScoreItem | null = null\n  @Input() menuTitle = 'Menu Title';\n  public open = false;\n  @ViewChild(MatMenuTrigger) matMenuTrigger: MatMenuTrigger | null = null;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  ngAfterViewInit(): void {\n    this.matMenuTrigger?.menuClosed.subscribe(() => {\n      //console.log('Menu closed');\n    });\n  }\n\n  ignoreEvent(event: MouseEvent): void {\n    //console.log('Ignoring ' + event);\n    event.preventDefault();\n    event.stopPropagation();\n  }\n\n  openAt(item: GameScoreItem): void {\n    this.open = true;\n  }\n}\n","<mat-card class=\"gs-context-menu-container\" (click)=\"open = false\">\n  <mat-card-title>{{ menuTitle }}</mat-card-title>\n  <mat-card-content class=\"gs-context-menu-overaly\">\n    <button mat-button class=\"context-menu-button\">Add</button>\n    <button mat-button class=\"context-menu-button\">Remove</button>\n    <button mat-button class=\"context-menu-button\">Keep</button>\n    <button mat-button class=\"context-menu-button\">Delete</button>\n    <button mat-button class=\"context-menu-button\">Restore</button>\n  </mat-card-content>\n</mat-card>\n","import { Component, OnInit, AfterViewInit, Input, Output } from '@angular/core';\nimport { fabric } from 'fabric';\nimport { Chess } from 'chessops/chess';\nimport { parseFen } from 'chessops/fen';\nimport { ColorService } from '../../services/colors.service';\nimport { BehaviorSubject } from 'rxjs';\nimport { preserveWhitespacesDefault } from '@angular/compiler';\nimport { Canvas } from 'fabric/fabric-impl';\nimport { Piece } from 'chessops/types';\n\nexport class BoardTheme {\n  constructor(\n    public tileLight: string = '',\n    public tileDark: string = '',\n    public pieceSet: string = '',\n    public isSpriteSheet = false,\n    public fileExtension = '.svg'\n  ) { }\n  static defaultTheme(cs: ColorService): BoardTheme {\n    return new BoardTheme(\n      cs.boardBGLight.value,\n      cs.boardBGDark.value,\n      cs.boardPieceSet.value\n    );\n  }\n}\n\nexport class BoardData {\n  constructor(\n    public fen: string = 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1'\n  ) { }\n}\n\n@Component({\n  selector: 'app-board-canvas',\n  templateUrl: './board-canvas.component.html',\n  styleUrls: ['./board-canvas.component.scss'],\n})\nexport class BoardCanvasComponent implements OnInit, AfterViewInit {\n  @Input() UUID = '';\n  @Input() size = 320;\n  @Output() tileSize = Math.floor(this.size / 8);\n  @Input() interactive = true;\n  @Input() @Output() theme: BoardTheme | null = new BoardTheme();\n  @Input() @Output() data: BoardData | null = new BoardData();\n  @Output() pieceMap = new Map<string, fabric.Group>();\n  @Output() pieces: { tile: number; object: fabric.Group }[] = [];\n  @Output() tiles: { tile: fabric.Object, piece?: Piece }[] = [];\n  @Output() olgaBoard: fabric.Canvas | null = null;\n  @Output() orientation = 'white';\n  @Input() @Output() selectedPiece: { tile: number; object: fabric.Group } | null = null;\n  constructor() { }\n\n  ngOnInit(): void { }\n\n  ngAfterViewInit(): void {\n    fabric.Object.prototype.transparentCorners = false;\n    this.olgaBoard = new fabric.Canvas(this.UUID + '-board');\n    this.olgaBoard.selection = false;\n    const waitCount = this.loadPieces();\n    waitCount.subscribe((count) => {\n      if (count >= 12) {\n        this.generateBoard();\n        this.connectMouseInput();\n        waitCount.unsubscribe();\n      }\n    });\n    this.olgaBoard.hoverCursor = 'arrow';\n    this.setInteractive(this.interactive);\n  }\n\n  checkPieceCanMove(fromData: { tile: number; object: fabric.Group; piece: Piece | undefined }, toData: { tile: number; object: fabric.Group; piece: Piece | undefined }): boolean { return true; }\n\n  private checkValidDrop(e: fabric.IEvent): void {\n    if (this.selectedPiece?.object) {\n      const event = e.e as MouseEvent;\n      let row = Math.ceil(event.y / this.tileSize) - 1;\n      let col = Math.ceil(event.x / this.tileSize) - 1;\n      if (this.orientation == 'white') {\n        row = Math.ceil((this.size - event.y) / this.tileSize) - 1;\n      } else {\n        col = Math.ceil((this.size - event.x) / this.tileSize) - 1;\n      }\n      const tile = ((row * 8) + col);\n      const piece = this.selectedPiece.object;\n      const pieceToTake = this.pieces[tile];\n      if (event.x < 0 || event.x > this.size || event.y > this.size || event.y < 0) {\n        row = Math.floor(this.selectedPiece.tile / 8);\n        col = this.selectedPiece.tile % 8;\n        if (this.orientation == 'white') {\n          row = 7 - Math.floor(this.selectedPiece.tile / 8);\n        } else {\n          col = 7 - this.selectedPiece.tile % 8;\n        }\n      } else {\n        if (!this.checkPieceCanMove({\n          tile: this.selectedPiece.tile,\n          object: this.selectedPiece.object,\n          piece: this.tiles[this.selectedPiece.tile].piece\n        }, {\n          tile: tile,\n          object: pieceToTake?.object,\n          piece: this.tiles[tile].piece\n        })) {\n          row = Math.floor(this.selectedPiece.tile / 8);\n          col = this.selectedPiece.tile % 8;\n        }\n      }\n      if (this.orientation == 'white') {\n        piece.set('left', col * this.tileSize);\n        piece.set('top', (7 - row) * this.tileSize);\n      } else {\n        piece.set('left', (7 - col) * this.tileSize);\n        piece.set('top', row * this.tileSize);\n      }\n      piece.setCoords();\n      this.selectedPiece = null;\n    }\n  }\n\n  private selectPiece(e: fabric.IEvent): void {\n    const event = e.e as MouseEvent;\n    let row = Math.ceil(event.y / this.tileSize) - 1;\n    let col = Math.ceil(event.x / this.tileSize) - 1;\n    if (this.orientation == 'white') {\n      row = Math.ceil((this.size - event.y) / this.tileSize) - 1;\n    } else {\n      col = Math.ceil((this.size - event.x) / this.tileSize) - 1;\n    }\n    const tileIndex = ((row * 8) + col);\n    if (tileIndex >= 0 && tileIndex < 64) {\n      this.selectedPiece = this.pieces[tileIndex];\n      //this.highlightTile(tileIndex);\n    }\n  }\n\n  private clearBoard(): void {\n    this.pieces.forEach((piece) => {\n      this.olgaBoard?.remove(piece.object);\n    });\n    this.pieces = [];\n    this.tiles.forEach((tileData) => {\n      this.olgaBoard?.remove(tileData.tile);\n    });\n    this.tiles = [];\n  }\n\n  private connectMouseInput(): void {\n    if (this.olgaBoard) {\n      this.olgaBoard.on('object:moved', this.checkValidDrop.bind(this));\n      this.olgaBoard.on('mouse:down', this.selectPiece.bind(this));\n      this.olgaBoard.on('touch:drag', this.selectPiece.bind(this));\n    }\n  }\n\n  private generateTiles(): void {\n    if (this.olgaBoard) {\n      if (!this.theme) {\n        console.log('Cannot generate board without theme');\n        return;\n      }\n\n      let chess = null;\n\n      if (this.data && this.data.fen) {\n        const setup = parseFen(this.data.fen).unwrap();\n        chess = Chess.fromSetup(setup).unwrap();\n      }\n      let tileIndex = 0;\n      const padding = Math.floor((this.size - this.tileSize * 8) / 2);\n      for (let row = 0; row < 8; row++) {\n        for (let col = 0; col < 8; col++) {\n          // move this to clone feature, only create the tiles once.\n\n          const tile = new fabric.Rect({\n            width: this.tileSize,\n            height: this.tileSize\n          });\n\n          // create piece\n          if (this.orientation == 'white') {\n            tile.set('left', col * this.tileSize + padding);\n            tile.set('top', row * this.tileSize + padding);\n          } else {\n            tile.set('left', col * this.tileSize + padding);\n            tile.set('top', row * this.tileSize + padding);\n          }\n\n          tile.set('lockMovementX', true);\n          tile.set('lockMovementY', true);\n          tile.set('lockRotation', true);\n          tile.set('lockScalingX', true);\n          tile.set('lockScalingY', true);\n          tile.set('lockUniScaling', true);\n          tile.set('hasControls', false);\n          tile.set('hasBorders', false);\n          tile.set('selectable', false);\n          tile.setCoords();\n          if (row % 2 === 0) {\n            // even row 0, 2, 4, 6\n            if (col % 2 === 0) {\n              tile.setColor(this.theme.tileDark);\n            } else {\n              tile.setColor(this.theme.tileLight);\n            }\n          } else {\n            // odd row 1, 3, 5, 7\n            if (col % 2 === 0) {\n              tile.setColor(this.theme.tileLight);\n            } else {\n              tile.setColor(this.theme.tileDark);\n            }\n          }\n          this.tiles.push({ tile: tile });\n          if (chess) {\n\n            let squareData = chess.board.get(tileIndex);\n            // get the first and last of the role and color\n            const color = squareData?.color[0].toLowerCase();\n            let role = squareData?.role[0].toUpperCase();\n            if (squareData?.role === 'knight') {\n              role = 'N';\n            }\n            if (role && color) {\n              const pieceImage = this.pieceMap.get(color + role);\n              if (pieceImage) {\n                pieceImage.clone((clone: fabric.Group) => {\n                  clone.set('lockRotation', true);\n                  clone.set('lockScalingX', true);\n                  clone.set('lockScalingY', true);\n                  clone.set('lockUniScaling', true);\n                  clone.set('hasControls', false);\n                  clone.set('hasBorders', false);\n                  if (!this.interactive) {\n                    clone.set('lockMovementX', true);\n                    clone.set('lockMovementY', true);\n                  } else {\n                    clone.hoverCursor = 'grab';\n                    clone.moveCursor = 'grabbing';\n                  }\n                  if (this.orientation == 'white') {\n                    clone.set('left', Math.floor(col * this.tileSize) + padding);\n                    clone.set('top', Math.floor((7 - row) * this.tileSize) + padding);\n                  } else {\n                    clone.set('left', Math.floor((7 - col) * this.tileSize) + padding);\n                    clone.set('top', Math.floor(row * this.tileSize) + padding);\n                  }\n                  clone.scaleToHeight(this.tileSize);\n                  clone.setCoords();\n                  this.pieces[tileIndex] = { tile: tileIndex, object: clone };\n                  this.tiles[tileIndex].piece = squareData;\n                });\n              }\n            }\n          }\n          ++tileIndex;\n        }\n      }\n      this.tiles.forEach((tileData) => {\n        this.olgaBoard?.add(tileData.tile);\n        this.olgaBoard?.bringToFront(tileData.tile);\n      });\n      this.pieces.forEach((pieceObject) => {\n        this.olgaBoard?.add(pieceObject.object);\n        this.olgaBoard?.bringToFront(pieceObject.object);\n      });\n    }\n  }\n\n  private loadPieces(): BehaviorSubject<number> {\n    const count = new BehaviorSubject<number>(0);\n    this.loadPieceImage('wK', count);\n    this.loadPieceImage('wB', count);\n    this.loadPieceImage('wQ', count);\n    this.loadPieceImage('wR', count);\n    this.loadPieceImage('wP', count);\n    this.loadPieceImage('wN', count);\n    this.loadPieceImage('bK', count);\n    this.loadPieceImage('bB', count);\n    this.loadPieceImage('bQ', count);\n    this.loadPieceImage('bR', count);\n    this.loadPieceImage('bP', count);\n    this.loadPieceImage('bN', count);\n    return count;\n  }\n\n  private generateBoard(): void {\n    this.clearBoard();\n    this.generateTiles();\n  }\n\n  private loadPieceImage(\n    piece: string,\n    subject: BehaviorSubject<number>\n  ): void {\n    if (this.theme?.pieceSet) {\n      if (this.theme.isSpriteSheet) {\n      } else {\n        if (this.theme.fileExtension === '.svg') {\n          fabric.loadSVGFromURL(\n            this.theme.pieceSet + piece + this.theme.fileExtension,\n            (objects, options) => {\n              //console.log('loaded ' + this.theme?.pieceSet + piece);\n              const obj = fabric.util.groupSVGElements(\n                objects,\n                options\n              ) as fabric.Group;\n              obj.left = -400;\n              obj.top = 0;\n              this.pieceMap.set(piece, obj);\n              subject.next(subject.value + 1);\n            }\n          );\n        }\n      }\n    }\n  }\n\n  private resizeBoardObjects(size: number): void {\n    const padding = Math.floor((this.size - this.tileSize * 8) / 2);\n    if (this.tiles.length > 0) {\n      for (let index = 0; index < 64; index++) {\n        const tile = this.tiles[index].tile;\n        const row = Math.floor(index / 8);\n        const col = index % 8;\n        tile.set('width', this.tileSize);\n        tile.set('height', this.tileSize);\n        tile.set('top', row * this.tileSize + padding);\n        tile.set('left', col * this.tileSize + padding);\n        tile.setCoords();\n      }\n    }\n\n    const difference = Math.floor(size - this.size) / 2;\n    this.pieces.forEach((pieceData) => {\n      const piece = pieceData.object;\n      if (\n        piece.left !== undefined &&\n        piece.top !== undefined &&\n        this.olgaBoard\n      ) {\n        const row = Math.floor(pieceData.tile / 8);\n        const col = pieceData.tile % 8;\n        piece.scaleToHeight(this.tileSize);\n        if (this.orientation == 'white') {\n          piece.set('left', Math.floor(col * this.tileSize) + padding);\n          piece.set('top', Math.floor((7 - row) * this.tileSize) + padding);\n        } else {\n          piece.set('left', Math.floor((7 - col) * this.tileSize) + padding);\n          piece.set('top', Math.floor(row * this.tileSize) + padding);\n        }\n        piece.setCoords();\n      }\n    });\n  }\n\n  setDarkTile(color: string): void {\n    if (this.theme) {\n      this.theme.tileDark = color;\n      for (let index = 0; index < 64; index++) {\n        const row = Math.floor(index / 8);\n        if (row % 2 === 0) {\n          if (index % 2 === 0) {\n            const tile = this.tiles[index].tile;\n            tile.set('fill', color);\n          }\n        } else {\n          if (index % 2 !== 0) {\n            const tile = this.tiles[index].tile;\n            tile.set('fill', color);\n          }\n        }\n      }\n      this.olgaBoard?.requestRenderAll();\n    } else {\n      console.log('Cannot set board-canvas tile dark with Null theme');\n    }\n  }\n\n  setLightTile(color: string): void {\n    if (this.theme) {\n      this.theme.tileLight = color;\n      for (let index = 0; index < 64; index++) {\n        const row = Math.floor(index / 8);\n        if (row % 2 !== 0) {\n          if (index % 2 === 0) {\n            const tile = this.tiles[index].tile;\n            tile.set('fill', color);\n          }\n        } else {\n          if (index % 2 !== 0) {\n            const tile = this.tiles[index].tile;\n            tile.set('fill', color);\n          }\n        }\n      }\n      this.olgaBoard?.requestRenderAll();\n    } else {\n      console.log('Cannot set board-canvas tile light with Null theme');\n    }\n  }\n\n  setSize(size: number): void {\n    if (this.olgaBoard) {\n      this.size = size;\n      this.tileSize = Math.floor(size / 8);\n      this.olgaBoard.width = size;\n      this.olgaBoard.height = size;\n      this.olgaBoard.setDimensions({\n        width: size,\n        height: size,\n      });\n      this.resizeBoardObjects(size);\n      this.olgaBoard.requestRenderAll();\n    }\n  }\n\n  setInteractive(interactive: boolean): void {\n    if (interactive) {\n      if (this.olgaBoard) {\n      }\n    } else {\n      if (this.olgaBoard) {\n      }\n    }\n  }\n\n  setFen(fen: string): void {\n    if (this.data) {\n      this.data.fen = fen;\n      this.clearBoard();\n      this.generateBoard();\n    }\n  }\n\n  requestRedraw(): void {\n    this.clearBoard();\n    this.generateBoard();\n  }\n}\n","<canvas id=\"{{ UUID }}-board\" style=\"position: absolute;\" [style.top]=\"0\" [style.left]=\"0\" [height]=\"size\"\n    [width]=\"size\" [style.width.px]=\"size\" [style.height.px]=\"size\" [style.z-index]=\"2\" resize>\n</canvas>","import {\n  Component,\n  OnInit,\n  ElementRef,\n  ViewChild,\n  AfterViewInit,\n  Input,\n  Output,\n} from '@angular/core';\nimport { fabric } from 'fabric';\nimport { ColorService } from '../services/colors.service';\nimport { EngineService } from '../services/engine.service';\nimport {\n  BoardCanvasComponent,\n  BoardTheme,\n  BoardData,\n} from './board-canvas/board-canvas.component';\nimport { Board } from 'chessops/board';\nimport { Role, Move, Piece } from 'chessops/types';\n\n@Component({\n  selector: 'app-olga-board',\n  templateUrl: './olga-board.component.html',\n  styleUrls: ['./olga-board.component.scss'],\n})\nexport class OlgaBoardComponent implements OnInit, AfterViewInit {\n  @Input() UUID = '';\n  @ViewChild(BoardCanvasComponent)\n  board: BoardCanvasComponent | null = null;\n  @Input() @Output() theme: BoardTheme | null = null;\n  @ViewChild('ogBoard', { static: false }) background: ElementRef | null = null;\n  constructor(\n    public colorService: ColorService,\n    public engineService: EngineService\n  ) {\n    this.theme = BoardTheme.defaultTheme(this.colorService);\n    fabric.Object.prototype.objectCaching = true;\n  }\n\n  ngOnInit(): void {\n    this.colorService.boardBGDark.subscribe((dark) => {\n      if (this.board) {\n        this.board.setDarkTile(dark);\n      }\n    });\n    this.colorService.boardBGLight.subscribe((light) => {\n      if (this.board) {\n        this.board.setLightTile(light);\n      }\n    });\n  }\n  toRole(role: string): Role {\n    return role as Role;\n  }\n  ngAfterViewInit(): void {\n    // board is legit, attach engine\n    if (this.board) {\n      this.board.checkPieceCanMove = this.engineService.makeMove.bind(this.engineService);\n      this.engineService.boardFen.subscribe(this.setFen.bind(this));\n    }\n  }\n\n\n  setBoardSize(size: number): void {\n    this.board?.setSize(size);\n  }\n\n  setFen(fen: string): void {\n    this.board?.setFen(fen);\n  }\n\n  updateBoard(change: boolean): void {\n    if (this.board) {\n      this.board.setFen(this.engineService.getFen());\n    }\n  }\n}\n","<app-board-canvas [theme]=\"theme\">\n\n</app-board-canvas>","import { Component, OnInit, Input } from '@angular/core';\nimport { GameScoreService } from '../services/game-score.service';\n\n@Component({\n  selector: 'app-playermove',\n  templateUrl: './playermove.component.html',\n  styleUrls: ['./playermove.component.scss']\n})\nexport class PlayermoveComponent implements OnInit {\n  @Input() move: string = '';\n  @Input() black = false;\n  constructor(public gameScoreService: GameScoreService) { }\n\n  ngOnInit(): void {\n\n  }\n\n}\n","<div  *ngIf=\"this.move.length === 2\">\n  <a class=\"score-invismove\" [style.font-size.px]=\"gameScoreService.scoreFontSize | async\" [style.font-family]=\"gameScoreService.scoreFontFamily | async\" *ngIf=\"this.black\">Q</a>\n  <a class=\"score-move\" [style.font-size.px]=\"gameScoreService.scoreFontSize | async\"  [style.font-family]=\"gameScoreService.scoreFontFamily | async\">{{this.move}}</a>\n  <a class=\"score-invismove\" [style.font-size.px]=\"gameScoreService.scoreFontSize | async\" [style.font-family]=\"gameScoreService.scoreFontFamily | async\" *ngIf=\"!this.black\">Q</a>\n</div>\n<div  *ngIf=\"this.move.length !== 2\">\n  <a class=\"score-move\"  [style.font-size.px]=\"gameScoreService.scoreFontSize | async\" [style.font-family]=\"gameScoreService.scoreFontFamily | async\">{{this.move}}</a>\n</div>\n\n","import { Injectable, Output, Input } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ColorService {\n  // DEFAULTING TO DARK COLOR PALLETE\n  // Main Elements (background, sub containers, context menu)\n  @Input() @Output() readonly textColor = 'white'; // Main Text Color\n  @Input() @Output() readonly textColorAttention = 'purple'; // Attention text\n  @Input() @Output() readonly textColorRemove = 'red'; // Remove/Delete/Close\n  @Input() @Output() readonly textColorAdd = 'green'; // Add/Create/Open\n  @Input() @Output() readonly textColorActive = 'light-blue'; // Add/Create/Open\n  @Input() @Output() readonly background = '#434343'; // Main background Color\n  @Input() @Output() readonly bgContainer = '#353535'; // background of Containers\n  @Input() @Output() readonly bgMenu = '#353535'; // background of Menus\n  @Input() @Output() readonly bgItem = '#353535'; // background of containers\n\n  // Context menu\n  @Input() readonly bgContext = '#CC9966';\n  @Input() readonly textColorContext = 'white';\n  @Input() readonly borderContext = 'solid black 1px';\n  @Input() readonly overlayContextBackground = 'rgb(199,199,199)';\n  @Input() readonly overlayContextBackgroundGradient =\n    'linear-gradient(153deg, rgba(199,199,199,0.9051995798319328) 41%, rgba(249,249,249,0.8911939775910365) 83%)';\n\n  // Control Elements (Buttons, sliders, number wheels, toggle switches)\n  @Input() @Output() readonly fgItem = '#00ffffff';\n  @Input() @Output() readonly fgItemContrast = '#e25400';\n\n  // Board Colors\n  @Input() @Output() readonly boardBGDark = new BehaviorSubject<string>(\n    '#81388f'\n  );\n  @Input() @Output() readonly boardBGLight = new BehaviorSubject<string>(\n    '#e0fffb'\n  );\n  @Input() @Output() readonly boardPieceSet = new BehaviorSubject<string>(\n    '../../assets/images/pieces/merida/'\n  );\n\n  // Game Score Variables\n  @Input() @Output() readonly gsTextColor = new BehaviorSubject<string>(\n    'white'\n  );\n  @Input() @Output() readonly gsBackground = new BehaviorSubject<string>(\n    '#353535'\n  );\n  @Input() @Output() readonly gsBorder = new BehaviorSubject<string>('');\n  @Input() @Output() readonly gsTextSize = new BehaviorSubject<string>('16px');\n\n  // Game Score Highlight Colors\n  @Input() @Output() readonly gsTextColorHG = new BehaviorSubject<string>(\n    'white'\n  );\n  @Input() @Output() readonly gsBackgroundHG = new BehaviorSubject<string>(\n    '#353535'\n  );\n  @Input() @Output() readonly gsBorderHG = new BehaviorSubject<string>(\n    ''\n  );\n\n  // Game Score Annotation Colors\n  @Input() @Output() readonly gsTextColorAN = new BehaviorSubject<string>(\n    '#AED6F1'\n  );\n  @Input() @Output() readonly gsBackgroundAN = new BehaviorSubject<string>(\n    '#333333'\n  );\n  @Input() @Output() readonly gsBorderAN = new BehaviorSubject<string>(\n    ''\n  );\n\n\n  // Game Score Variation Colors\n  @Input() @Output() readonly gsTextColorVA = new BehaviorSubject<string>(\n    'white'\n  );\n  @Input() @Output() readonly gsBackgroundVA = new BehaviorSubject<string>(\n    '#353535'\n  );\n  @Input() @Output() readonly gsBorderVA = new BehaviorSubject<string>(\n    'black 1px solid'\n  );\n\n  // Game Score Ply Count\n  @Input() @Output() readonly gsTextColorPC = new BehaviorSubject<string>(\n    'white'\n  );\n  @Input() @Output() readonly gsBackgroundPC = new BehaviorSubject<string>(\n    '#353535'\n  );\n  @Input() @Output() readonly gsBorderPC = new BehaviorSubject<string>(\n    ''\n  );\n\n  @Output() propertyMap = new Map<BehaviorSubject<string>, string>();\n  // Menu specific Colors\n\n  // Title Colors\n  constructor() {\n    this.propertyMap.set(this.gsTextColorPC, '--gsTextColorPC');\n    this.propertyMap.set(this.gsBackgroundPC, '--gsBackgroundPC');\n    this.propertyMap.set(this.gsBorderPC, '--gsBorderPC');\n    this.propertyMap.set(this.gsTextColorVA, '--gsTextColorVA');\n    this.propertyMap.set(this.gsBackgroundVA, '--gsBackgroundVA');\n    this.propertyMap.set(this.gsBorderVA, '--gsBorderVA');\n    this.propertyMap.set(this.gsTextColorAN, '--gsTextColorAN');\n    this.propertyMap.set(this.gsBackgroundAN, '--gsBackgroundAN');\n    this.propertyMap.set(this.gsBorderAN, '--gsBorderAN');\n  }\n\n  setDarkColorPalette(): void { }\n\n  setLightColorPalette(): void { }\n\n  setStoredColorPalette(): void {\n    // 1.) Read User color palette sent from CG.com\n    // 2.) Look for a cookie on disk (load from disk)\n    // 3.) User default CSS Styled color palette\n  }\n\n  initializeColorPalette(): void {\n    // Main Elements\n    document.documentElement.style.setProperty('--textCoolor', this.textColor);\n    document.documentElement.style.setProperty(\n      '--itextColorAttention',\n      this.textColorAttention\n    );\n    document.documentElement.style.setProperty(\n      '--textColorRemove',\n      this.textColorRemove\n    );\n    document.documentElement.style.setProperty(\n      '--textColorAdd',\n      this.textColorAdd\n    );\n    document.documentElement.style.setProperty(\n      '--textColorActive',\n      this.textColorActive\n    );\n    document.documentElement.style.setProperty('--background', this.background);\n    document.documentElement.style.setProperty('--bgItem', this.bgItem);\n    document.documentElement.style.setProperty(\n      '--bgContainer',\n      this.bgContainer\n    );\n    document.documentElement.style.setProperty('--bgMenu', this.bgMenu);\n\n    // Context Menu\n    document.documentElement.style.setProperty('--bgContext', this.bgContext);\n    document.documentElement.style.setProperty(\n      '--overlayContextBackground',\n      this.overlayContextBackground\n    );\n    document.documentElement.style.setProperty(\n      '--textColorContext',\n      this.textColorContext\n    );\n    document.documentElement.style.setProperty('--bgContext', this.bgContext);\n    document.documentElement.style.setProperty(\n      '--overlayContextBackgroundGradient',\n      this.overlayContextBackgroundGradient\n    );\n    document.documentElement.style.setProperty(\n      '--borderContext',\n      this.borderContext\n    );\n\n    // Game Score\n    document.documentElement.style.setProperty('--gsBackground', this.gsBackground.value);\n    document.documentElement.style.setProperty(\n      '--gsTextColor',\n      this.gsTextColor.value\n    );\n    document.documentElement.style.setProperty(\n      '--gsTextSize',\n      this.gsTextSize.value\n    );\n    document.documentElement.style.setProperty(\n      '--gsBackground',\n      this.gsBackground.value\n    );\n    document.documentElement.style.setProperty(\n      '--gsBorder',\n      this.gsBorder.value\n    );\n    document.documentElement.style.setProperty(\n      '--boardBGDark',\n      this.boardBGDark.value\n    );\n    this.propertyMap.forEach((value, key) => {\n      document.documentElement.style.setProperty(\n        value,\n        key.value\n      );\n    })\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { parseFen, makeFen, parsePiece } from 'chessops/fen';\nimport { makeSan, makeSanAndPlay } from 'chessops/san';\nimport { Chess, Position } from 'chessops/chess';\nimport { Piece, Move, ROLES } from 'chessops/types';\nimport { transformBoard } from 'chessops/transform';\nimport { makeSquare, parseUci } from 'chessops/util';\n//import { Chess, Position } from 'chessops/variant'\nimport { BehaviorSubject } from 'rxjs';\nimport { SquareSet } from 'chessops/squareSet';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class EngineService {\n  chessEngine: Position = Chess.default();\n  readonly startingFen = 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1';\n  readonly boardFen = new BehaviorSubject<string>(this.startingFen);\n  readonly boardChanged = new BehaviorSubject<boolean>(false);\n  readonly abreviatedSan = new BehaviorSubject<boolean>(false);\n  constructor() {\n    // this.chessEngine.board = transformBoard(this.chessEngine.board, (s: SquareSet) => { console.log(s); return s; });\n    this.boardChanged.next(true);\n  }\n  private generateSAN(fromData: { tile: number; object: fabric.Group; piece: Piece | undefined }, toData: { tile: number; object: fabric.Group; piece: Piece | undefined }): string {\n    if (this.abreviatedSan.value) {\n      return ''; // abreviated\n    }\n    return ''// non abreviated\n  }\n  makeMove(fromData: { tile: number; object: fabric.Group; piece: Piece | undefined }, toData: { tile: number; object: fabric.Group; piece: Piece | undefined }): boolean {\n    if (fromData.piece) {\n      this.chessEngine.epSquare = fromData.tile;\n      // console.log('from: ' + makeSquare(fromData.tile));\n      // console.log(this.chessEngine.board.get(fromData.tile));\n      // console.log('to: ' + makeSquare(toData.tile));\n      // console.log(this.chessEngine.board.get(toData.tile));\n      const move = { from: fromData.tile, to: toData.tile } as Move;\n      if (this.chessEngine.isLegal(move)) {\n        if (toData.object) {\n          toData.object.remove();\n        }\n        const san = makeSanAndPlay(this.chessEngine, move);\n        //const piece = {role:'', color:''} as Piece;\n        //this.chessEngine.board.set(fromData.tile, piece);\n        //this.boardChanged.next(!this.boardChanged.value);\n        // add san to game score\n        //console.log(san);\n        return true;\n      }\n      const san = makeSan(this.chessEngine, { role: fromData.piece.role, to: toData.tile } as Move);\n      if (san.search('@') >= 0) {\n\n      }\n      // console.log('Attempting to make invalid move ' + san);\n      // console.log('board believes tile has:');\n      // console.log(this.chessEngine.board.get(toData.tile));\n    }\n    return false;\n  };\n\n  public makeMoveFromSAN(san: string): void {\n    console.log('Make Move: ' + san);\n    const move = parseUci(san) as Move;\n    if (this.chessEngine.isLegal(move)) {\n      this.chessEngine.play(move);\n    }\n  }\n\n  setFen(fen: string): void {\n    this.boardFen.next(fen);\n  }\n\n  checkPosition(row: string, rank: string): Piece | undefined {\n    return this.chessEngine?.board.get(0);\n  }\n  getFen(): string {\n    return makeFen(this.chessEngine.toSetup());\n  }\n}\n","import { Injectable, Input, Output } from '@angular/core';\nimport { BehaviorSubject, onErrorResumeNext } from 'rxjs';\n\n//@ts-ignore\nimport { Game, pgnRead, Database, Variation, Node as ScoreNode, Position as ChessPosition } from 'kokopu';\nimport { EngineService } from './engine.service';\nexport class GameScoreMove {\n  move = '';\n  ply = 1;\n  constructor(move = '', ply = 1) { this.move = move; this.ply = ply; }\n}\n\nexport class GameScoreVariation {\n  variationData: GameScoreItem[];\n  constructor(variationData: GameScoreItem[] = []) { this.variationData = variationData; }\n}\n\nexport class GameScoreAnnotation {\n  annotation = '';\n  constructor(annotation: string = '') { this.annotation = annotation; }\n}\n\n\n\nexport class GameScoreItem {\n  type: GameScoreType | null = null;\n  moveData: GameScoreMove | null = null;\n  annotationData: GameScoreAnnotation | null = null;\n  variationData: GameScoreVariation | null = null;\n  current = false;\n  constructor(type: GameScoreType, moveData: GameScoreMove | null = null,\n    annotationData: GameScoreAnnotation | null = null, variationData: GameScoreVariation | null = null) {\n    this.type = type;\n    this.moveData = moveData;\n    this.annotationData = annotationData;\n    this.variationData = variationData;\n  }\n}\n\nexport enum GameScoreType {\n  GameScoreGroup = 121,\n  Variation = 222,\n  Annotation = 323,\n  AnnotatedVariation = 424\n}\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GameScoreService {\n  //\n  @Input() @Output() readonly figurineNotation = new BehaviorSubject<boolean>(false);\n  @Output() readonly items = new BehaviorSubject<GameScoreItem[]>([]);\n  @Output() readonly annotations = new BehaviorSubject<GameScoreAnnotation[]>([]);\n  @Output() readonly showingPly = new BehaviorSubject<boolean>(true);\n  @Output() readonly showingHalfPly = new BehaviorSubject<boolean>(false);\n  @Output() readonly variation = new BehaviorSubject<GameScoreVariation[]>([]);\n\n  // Visual Settings\n  @Output() readonly scoreFontFamily = new BehaviorSubject<string>('Caveat');\n  @Output() readonly scoreFontSize = new BehaviorSubject<number>(18);\n  startNode: ScoreNode | null = null;\n  currentNode: ScoreNode | null = null;\n  game: Game | null = null;\n  currentPosition: ChessPosition | null = null;\n  constructor(public engineService: EngineService) { }\n  public moveToStart(): void {\n    this.currentPosition.reset();\n    this.engineService.setFen(this.currentNode.fen);\n    this.currentNode = this.startNode;\n  }\n  public advance(): void {\n    if (this.currentPosition) {\n      const currentItem = this.items.value[this.currentNode._fullMoveNumber - 1];\n      currentItem.current = false;\n      const move = this.currentNode.notation();\n      if (this.currentPosition.play(move)) {\n        console.log('Mad Move: ' + move);\n      }\n      this.engineService.setFen(this.currentPosition.fen());\n      this.currentNode = this.currentNode.next();\n    }\n  }\n  public previous(): void {\n    if (this.currentPosition) {\n      const previousMove = this.currentNode._fullMoveNumber - (2 - this.currentPosition._impl.turn);\n      if (previousMove >= 0) {\n        let previous = this.startNode;\n        for (let i = 0; i < previousMove; ++i) {\n          previous = previous.next();\n        }\n        console.log('Moving back to move: ' + previous.notation());\n        this.currentPosition = this.currentNode.positionBefore();\n        this.engineService.setFen(this.currentPosition.fen());\n        this.currentNode = previous;\n      }\n    }\n  }\n  public moveToEnd(): void {\n    //console.log('Advancing PGN');\n    if (this.currentPosition) {\n      const currentItem = this.items.value[this.currentNode._fullMoveNumber - 1];\n      currentItem.current = false;\n      const move = this.currentNode.notation();\n      this.currentPosition.play(move);\n      this.engineService.setFen(this.currentPosition.fen());\n      this.currentNode = this.currentNode.next();\n    }\n  }\n  public loadPGN(pgn: string) {\n    const state = pgnRead(pgn) as Database;\n    this.game = state.game(0) as Game;\n    const variation = this.game.mainVariation() as Variation;\n    this.currentPosition = this.game.initialPosition() as ChessPosition;\n    this.engineService.setFen(this.currentPosition.fen());\n    this.currentNode = this.startNode = variation.first() as ScoreNode;\n    const items = [];\n    let nextScore = this.startNode as ScoreNode;\n    while (nextScore) {\n      let notation = nextScore.notation();\n      const isHalfPly = (nextScore._positionBefore._impl.turn % 2 != 0);\n      if (nextScore._info && nextScore._info.comment) {\n        items.push(new GameScoreItem(GameScoreType.Annotation, new GameScoreMove(notation, nextScore._fullMoveNumber + (isHalfPly ? .5 : 0)), new GameScoreAnnotation(nextScore._info.comment)));\n      } else {\n        items.push(new GameScoreItem(GameScoreType.GameScoreGroup, new GameScoreMove(notation, nextScore._fullMoveNumber + (isHalfPly ? .5 : 0))));\n      }\n      nextScore = nextScore.next();\n    }\n    items[0].current = true;\n    this.items.next(items);\n    this.items.complete();\n  }\n  public clearItems(): void {\n\n  }\n  public typeToString(type: GameScoreType): string {\n    return GameScoreType[type];\n  }\n\n}\n","import { Injectable, ElementRef } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Olga } from '../app.component';\nimport { GamescoreUxComponent } from '../game-score/game-score.ux';\nimport { OlgaBoardComponent } from '../olga-board/olga-board.component';\n\n\nexport declare type Layout = 'auto' | 'landscape' | 'portrait';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LayoutService {\n  readonly landscapeOrientation = new BehaviorSubject<boolean>(true);\n  readonly boardSize = new BehaviorSubject<number>(480);\n  readonly scoreSize = new BehaviorSubject<number>(340);\n  olga: Olga | null = null;\n  appContainer: ElementRef | null = null;\n  gameScore: GamescoreUxComponent | null = null;\n  board: OlgaBoardComponent | null = null;\n  preferredLayout: Layout = 'auto';\n  preferredRatio = .3;\n  boardRatio = 1;\n  constructor() { }\n  private resizeToLandscape(width: number, height: number, gsSize?: number) {\n    if (this.olga && this.olga.gameScoreElement && this.olga.controlsElement) {\n      let boardSize = 0;\n      if (!gsSize) {\n        let padding = width * 0.05;\n        if (padding >= 16 || padding <= 10) {\n          padding = 12;\n        }\n        let boardSize = Math.floor((1 - this.preferredRatio) * width);\n        if (boardSize > height) {\n          boardSize = height - (padding / 2);\n        }\n        let gsWidth = (width - boardSize) - padding;\n        this.board?.setBoardSize(boardSize);\n        let gsHeight = (boardSize - 200);\n        // game score\n        this.olga.gameScoreElement.style.top = '60px'; // 64 represents the controls ux\n        this.olga.gameScoreElement.style.width = gsWidth + 'px';\n        this.olga.gameScoreElement.style.height = gsHeight + 'px';\n        // controls\n\n        this.olga.controlsElement.style.left = '';\n        this.olga.controlsElement.style.top = (gsHeight + 55).toString() + 'px'; // 64 represents the \n        this.olga.controlsElement.style.width = gsWidth.toString() + 'px';\n        this.olga.controlsElement.style.height = 64 + 'px';\n        this.olga.controlsElement.style.right = '1px';\n        this.scoreSize.next(gsWidth);\n      } else {\n        let padding = width * 0.05;\n        if (padding >= 16 || padding <= 10) {\n          padding = 12;\n        }\n        const widthAvailable = window.innerWidth - (gsSize + padding);\n        let boardSize = Math.floor(widthAvailable / 8) * 8;\n        if (boardSize >= window.innerHeight) {\n          boardSize = Math.floor((window.innerHeight - 16) / 8) * 8;\n          gsSize = window.innerWidth - boardSize + padding;\n        }\n        this.board?.setBoardSize(boardSize);\n        let gsHeight = (boardSize - 200);\n        // game score\n        this.olga.gameScoreElement.style.top = '60px'; // 64 represents the controls ux\n        this.olga.gameScoreElement.style.width = gsSize + 'px';\n        this.olga.gameScoreElement.style.height = gsHeight + 'px';\n        // controls\n        this.olga.controlsElement.style.left = '';\n        this.olga.controlsElement.style.top = (gsHeight + 55).toString() + 'px'; // 64 represents the \n        this.olga.controlsElement.style.width = gsSize.toString() + 'px';\n        this.olga.controlsElement.style.height = 64 + 'px';\n        this.olga.controlsElement.style.right = '1px';\n        this.scoreSize.next(gsSize);\n      }\n      this.boardSize.next(boardSize);\n    }\n  }\n  private resizeToPortrait(width: number, height: number, gsSize?: number) {\n    if (this.olga) {\n      const boardSize = (width * this.boardRatio) - 6;\n      this.board?.setBoardSize(boardSize);\n      if (this.olga.boardElement) {\n        this.olga.boardElement.style.left = (width * ((1 - this.boardRatio) / 2)) + 'px';\n      }\n      if (this.olga.gameScoreElement) {\n        this.olga.gameScoreElement.style.top = (boardSize + 64 + 'px'); // 64 represents the controls ux\n        this.olga.gameScoreElement.style.width = '100%';\n        this.olga.gameScoreElement.style.height = (boardSize / 3 > 425 ? 425 : boardSize / 3).toString() + 'px';\n      }\n      if (this.olga.controlsElement) {\n        this.olga.controlsElement.style.top = (boardSize + 4).toString() + 'px'; // 64 represents the controls ux\n        this.olga.controlsElement.style.width = '80%';\n        this.olga.controlsElement.style.left = '10%';\n        this.olga.controlsElement.style.height = '64px';\n      }\n    }\n  }\n  initializeLayout(olga: Olga, autoResize = true): void {\n    this.olga = olga;\n    this.gameScore = olga.gameScoreUx;\n    this.board = olga.olgaBoard;\n    this.appContainer = olga.olgaContainer;\n    if (autoResize) {\n      window.removeEventListener('resize', this.resizeLayout.bind(this));\n      window.addEventListener('resize', this.resizeLayout.bind(this));\n    }\n    this.resizeLayout()\n    window.setTimeout(() => {\n      this.resizeLayout();\n    }, 250);\n  }\n\n  onSliderDrag(event: DragEvent): void {\n    if (event && event.clientX > 64) {\n      if (this.olga?.olgaBoard && this.appContainer) {\n        let gsSize = window.innerWidth - event.clientX;\n        const width = this.appContainer.nativeElement.clientWidth;\n        const height = this.appContainer.nativeElement.clientHeight;\n\n        switch (this.preferredLayout) {\n          case 'auto': {\n            if (width > height) {\n              this.resizeToLandscape(width, height, gsSize);\n            } else {\n              this.resizeToPortrait(width, height, gsSize);\n            }\n            break;\n          }\n          case 'landscape': {\n            this.resizeToLandscape(width, height, gsSize);\n            break;\n          }\n          case 'portrait': {\n            this.resizeToPortrait(width, height, gsSize);\n            break;\n          }\n        }\n      }\n    }\n  }\n\n  resizeLayout(): void {\n    if (!this.appContainer) {\n      console.log('Invalid (Null) App Container %$@');\n    } else {\n      const width = this.appContainer.nativeElement.clientWidth;\n      const height = this.appContainer.nativeElement.clientHeight;\n      switch (this.preferredLayout) {\n        case 'auto': {\n          if (width > height) {\n            this.resizeToLandscape(width, height);\n          } else {\n            this.resizeToPortrait(width, height);\n          }\n          break;\n        }\n        case 'landscape': {\n          this.resizeToLandscape(width, height);\n          break;\n        }\n        case 'portrait': {\n          this.resizeToPortrait(width, height);\n          break;\n        }\n      }\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-settings-board',\n  templateUrl: './settings-board.component.html',\n  styleUrls: ['./settings-board.component.scss']\n})\nexport class SettingsBoardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>settings-board works!</p>\n","import {\n  Component,\n  OnInit,\n  Output,\n  AfterViewInit,\n  ViewChild,\n  ElementRef,\n} from '@angular/core';\nimport { GameScoreService } from '../../services/game-score.service';\nimport { ColorService } from '../../services/colors.service';\nimport { MatSliderChange } from '@angular/material/slider';\n\n@Component({\n  selector: 'app-gamescore-settings',\n  templateUrl: './settings-gamescore.component.html',\n  styleUrls: ['./settings-gamescore.component.scss'],\n})\nexport class GamescoreSettingsComponent implements OnInit, AfterViewInit {\n  constructor(\n    public gameScoreService: GameScoreService,\n    public colorService: ColorService\n  ) {}\n  @ViewChild('lightBGHandle', { static: true })\n  lightBGHandle: ElementRef | null = null;\n   @ViewChild('darkBGHandle', { static: true })\n  darkBGHandle: ElementRef | null = null;\n\n  ngOnInit(): void {}\n  ngAfterViewInit(): void {\n    if (this.lightBGHandle) {\n      this.lightBGHandle.nativeElement.value = this.colorService.boardBGLight.value;\n    }\n    if (this.darkBGHandle) {\n      this.darkBGHandle.nativeElement.value = this.colorService.boardBGDark.value;\n    }\n  }\n}\n","<!-- <mat-card>\n  <mat-card-title>\n    Choose Layout\n  </mat-card-title>\n  <mat-card-subtitle>\n    Settings\n  </mat-card-subtitle>\n  <mat-card-actions>\n    <button mat-raised-button color=\"primary\" >Portrait</button>\n    <button mat-raised-button color=\"primary\" >Landscape</button>\n  </mat-card-actions>\n</mat-card>\n<br/>\n<mat-card >\n  <mat-card-title>\n    Choose Size\n  </mat-card-title>\n  <mat-card-subtitle>\n    Settings\n  </mat-card-subtitle>\n  <mat-card-actions>\n    <button mat-raised-button class=\"blue-button\" >Small</button>\n    <button mat-raised-button class=\"blue-button\" >Medium</button>\n    <button mat-raised-button color=\"primary\" >Large</button>\n    <br/>\n    <label>\n      <input type=\"checkbox\" name=\"my-checkbox\" checked> Select me\n  </label>\n  <label>\n      <input type=\"checkbox\" name=\"my-checkbox\"> Select me\n  </label>\n  </mat-card-actions>\n</mat-card>\n<br/> -->\n<mat-card>\n  <mat-card-title>\n    Colors\n  </mat-card-title>\n  <mat-card-subtitle>\n    Settings\n  </mat-card-subtitle>\n  <mat-card-content>\n    <div>Light Background</div>\n    <input\n      #lightBGHandle\n      matInput\n      type=\"color\"\n      id=\"lightColor\"\n      class=\"color-input\"\n      (input)=\"colorService.boardBGLight.next(lightBGHandle.value)\"\n    />\n    <div>Dark Background</div>\n    <input\n      #darkBGHandle\n      matInput\n      type=\"color\"\n      id=\"darkColor\"\n      class=\"color-input\"\n      (input)=\"colorService.boardBGDark.next(darkBGHandle.value)\"\n    />\n    <br />\n    <!-- <div>Font Size</div>\n    <mat-slider #scoreFontSize thumbLabel class=\"small-slider\" (input)=\"gameScoreService.scoreFontSize.next(($event.value ? $event.value : 18))\" value=\"18\" min=\"14\" max=\"24\" step=\"1\" color=\"primary\" ></mat-slider>\n    <br/>\n    <label class=\"switch\">\n      <input type=\"checkbox\" #figureNotation (change)=\"gameScoreService.figurineNotation.next(figureNotation.checked)\">\n      <div style=\"font-size:12px; text-align:center;\">Figurine Notation</div>\n    </label>\n    <br/>\n    Font Family\n    <select>\n      <option>Cambria</option>\n      <option>Times New Roman</option>\n    </select> -->\n  </mat-card-content>\n</mat-card>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-settings-menu',\n  templateUrl: './settings-menu.component.html',\n  styleUrls: ['./settings-menu.component.scss']\n})\nexport class SettingsMenuComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"settings-window\">\n    <app-gamescore-settings></app-gamescore-settings>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"sourceRoot":"webpack:///"}